<?php
namespace App\Tests\Compiler;

use App\Service\Archive\Glg;
use App\Service\Archive\Mls;
use App\Service\Compiler\Compiler;
use App\Service\Compiler\FunctionMap\Manhunt2;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class DummyTest extends KernelTestCase
{

    public function test()
    {

//        foreach (Manhunt2::$constants as $name => $function) {
//            echo ';' . $name;
//        }
//        exit;

        $this->assertEquals(true, true, 'The bytecode is not correct');
        return;


        $script = "
            
scriptmain triggerHealth;

ENTITY
	triggerBlipHealth : et_name;
	
VAR
	bMeleeTutDone: level_var boolean;
	
script OnEnterTrigger;

VAR
	Door : entityPtr;
	pos : vec3d;
	CurrDam : integer;

begin
	RadarPositionClearEntity(GetEntity('triggerBlipHealth'));	
	
	if GetDifficultyLevel <> DIFFICULTY_NORMAL then
	begin
		RunScript('triggerNewMeleeTutTwo', 'ShowRadarHelp');
	end;

	if (GetEntity('Syringe_(CT)') <> NIL) AND (IsNamedItemInInventory(GetPlayer, CT_SYRINGE ) = -1) then
	begin
		{Need Syringe}
		bMeleeTutDone := TRUE;
			
		{SAY GET SYRINGE}
		while NOT IsFrisbeeSpeechCompleted do sleep(10);
		
		if (IsNamedItemInInventory(GetPlayer, CT_SYRINGE ) = -1) then
			FrisbeeSpeechPlay('LEO16A', 127, 127);
			
		
		if (IsNamedItemInInventory(GetPlayer, CT_SYRINGE ) = -1) then
		begin		
			SetVector(pos, -9.72581, 7.38742, 26.8131);
			CreateSphereTrigger(pos, 0.42, 'SyringeTarget');
			RadarPositionSetEntity(GetEntity('SyringeTarget'), MAP_COLOR_BLUE);
			SetLevelGoal('GOAL2C');
					
			SetVector(pos, -15.8301, 6.18554, 30.7672);
			CreateSphereTrigger(pos, 0.997306, 'triggerSyringeRemind');
		end else begin
			AIEntityCancelAnim('leo(hunter)', 'BAT_IDLELOOP_IDLE_ANIM');
			
			{ GAV - Added this to ensure the door opens }
			AIEntityCancelAnim('leo(hunter)', 'ASY_LEO_IDLE1');
			AIEntityCancelAnim('leo(hunter)', 'ASY_LEO_IDLE2');
			AIEntityCancelAnim('leo(hunter)', 'ASY_LEO_IDLE3');
			
			if GetEntity('leo(hunter)') <> NIL then
			begin
				AIAddGoalForSubpack('leo(leader)', 'leopack', 'goalLeoLeave');
			end;
				
			{Open sliding door }
			Door := GetEntity('asylum_cell_door_slide_(SD)');
	
			while (AIIsGoalNameInSubpack('leo(leader)', 'leopack', 'goalLeoLeave')) do sleep(100);
			DestroyEntity(GetEntity('leo(hunter)'));
							
			UnLockEntity(Door);
			GraphModifyConnections(Door, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING);
				
			Sleep(50);
			SetSlideDoorAjarDistance(Door, 1.1);
			SetDoorState(Door, DOOR_OPENING);
		end
			
			
	end else begin
		{Have Syringe}
		
		AIEntityCancelAnim('leo(hunter)', 'BAT_IDLELOOP_IDLE_ANIM');
		
		{ GAV - Added this to ensure the door opens }
		AIEntityCancelAnim('leo(hunter)', 'ASY_LEO_IDLE1');
		AIEntityCancelAnim('leo(hunter)', 'ASY_LEO_IDLE2');
		AIEntityCancelAnim('leo(hunter)', 'ASY_LEO_IDLE3');
		
		if GetEntity('leo(hunter)') <> NIL then
		begin
			AIAddGoalForSubpack('leo(leader)', 'leopack', 'goalLeoLeave');
		end;
			
		{Open sliding door }
		Door := GetEntity('asylum_cell_door_slide_(SD)');

		while (AIIsGoalNameInSubpack('leo(leader)', 'leopack', 'goalLeoLeave')) do sleep(100);
		DestroyEntity(GetEntity('leo(hunter)'));
						
		UnLockEntity(Door);
		GraphModifyConnections(Door, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING);
			
		Sleep(50);
		SetSlideDoorAjarDistance(Door, 1.1);
		SetDoorState(Door, DOOR_OPENING);
	end;
	DestroyEntity(this);
end;

end.

        ";

        $expected = [

'10000000',
'0a000000',
'11000000',
'0a000000',
'09000000',
'34000000',
'09000000',
'14000000',
'21000000',
'04000000',
'01000000',
'00000000',
'12000000',
'02000000',
'12000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'e1020000',
'9f020000',
'10000000',
'01000000',
'12000000',
'01000000',
'01000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'40000000',
'a8000000',
'33000000',
'01000000',
'01000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'18010000',
'21000000',
'04000000',
'01000000',
'14000000',
'12000000',
'02000000',
'16000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'2c000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'e4000000',
'21000000',
'04000000',
'01000000',
'3c000000',
'12000000',
'02000000',
'0d000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'12000000',
'01000000',
'00000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'40000000',
'90010000',
'33000000',
'01000000',
'01000000',
'10000000',
'01000000',
'8a000000',
'10000000',
'01000000',
'12000000',
'01000000',
'71000000',
'10000000',
'01000000',
'30010000',
'10000000',
'01000000',
'12000000',
'01000000',
'01000000',
'2a000000',
'01000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'3f000000',
'0c020000',
'33000000',
'01000000',
'01000000',
'0f000000',
'04000000',
'25000000',
'01000000',
'04000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'a40a0000',
'12000000',
'01000000',
'01000000',
'1a000000',
'01000000',
'90170000',
'04000000',
'b0030000',
'29000000',
'01000000',
'01000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'94020000',
'12000000',
'01000000',
'0a000000',
'10000000',
'01000000',
'6a000000',
'3c000000',
'50020000',
'8a000000',
'10000000',
'01000000',
'12000000',
'01000000',
'71000000',
'10000000',
'01000000',
'30010000',
'10000000',
'01000000',
'12000000',
'01000000',
'01000000',
'2a000000',
'01000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'3f000000',
'08030000',
'33000000',
'01000000',
'01000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'74030000',
'21000000',
'04000000',
'01000000',
'4c000000',
'12000000',
'02000000',
'07000000',
'10000000',
'01000000',
'10000000',
'02000000',
'12000000',
'01000000',
'7f000000',
'10000000',
'01000000',
'12000000',
'01000000',
'7f000000',
'10000000',
'01000000',
'66030000',
'8a000000',
'10000000',
'01000000',
'12000000',
'01000000',
'71000000',
'10000000',
'01000000',
'30010000',
'10000000',
'01000000',
'12000000',
'01000000',
'01000000',
'2a000000',
'01000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'3f000000',
'e8030000',
'33000000',
'01000000',
'01000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'1c060000',
'22000000',
'04000000',
'01000000',
'10000000',
'10000000',
'01000000',
'12000000',
'01000000',
'eb9c1b41',
'10000000',
'01000000',
'4f000000',
'32000000',
'09000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'bf65ec40',
'10000000',
'01000000',
'12000000',
'01000000',
'3b81d641',
'10000000',
'01000000',
'84010000',
'22000000',
'04000000',
'01000000',
'10000000',
'10000000',
'01000000',
'12000000',
'01000000',
'3d0ad73e',
'10000000',
'01000000',
'21000000',
'04000000',
'01000000',
'54000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'a3000000',
'21000000',
'04000000',
'01000000',
'54000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'12000000',
'01000000',
'06000000',
'10000000',
'01000000',
'e0020000',
'21000000',
'04000000',
'01000000',
'64000000',
'12000000',
'02000000',
'07000000',
'10000000',
'01000000',
'10000000',
'02000000',
'41020000',
'22000000',
'04000000',
'01000000',
'10000000',
'10000000',
'01000000',
'12000000',
'01000000',
'17487d41',
'10000000',
'01000000',
'4f000000',
'32000000',
'09000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'f2efc540',
'10000000',
'01000000',
'12000000',
'01000000',
'3a23f641',
'10000000',
'01000000',
'84010000',
'22000000',
'04000000',
'01000000',
'10000000',
'10000000',
'01000000',
'12000000',
'01000000',
'724f7f3f',
'10000000',
'01000000',
'21000000',
'04000000',
'01000000',
'6c000000',
'12000000',
'02000000',
'15000000',
'10000000',
'01000000',
'10000000',
'02000000',
'a3000000',
'3c000000',
'9c0a0000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'94000000',
'12000000',
'02000000',
'17000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'ac000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'bc000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'cc000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'12000000',
'01000000',
'00000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'40000000',
'04080000',
'33000000',
'01000000',
'01000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'a0080000',
'21000000',
'04000000',
'01000000',
'dc000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'ec000000',
'12000000',
'02000000',
'08000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'f8000000',
'12000000',
'02000000',
'0d000000',
'10000000',
'01000000',
'10000000',
'02000000',
'56010000',
'21000000',
'04000000',
'01000000',
'08010000',
'12000000',
'02000000',
'1c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'15000000',
'04000000',
'04000000',
'01000000',
'21000000',
'04000000',
'01000000',
'dc000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'ec000000',
'12000000',
'02000000',
'08000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'f8000000',
'12000000',
'02000000',
'0d000000',
'10000000',
'01000000',
'10000000',
'02000000',
'a5020000',
'24000000',
'01000000',
'00000000',
'3f000000',
'9c090000',
'12000000',
'01000000',
'64000000',
'10000000',
'01000000',
'6a000000',
'3c000000',
'e0080000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'a0020000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'99000000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'03000000',
'10000000',
'01000000',
'e9000000',
'12000000',
'01000000',
'32000000',
'10000000',
'01000000',
'6a000000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'cdcc8c3f',
'10000000',
'01000000',
'9b010000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'01000000',
'10000000',
'01000000',
'97000000',
'3c000000',
'240f0000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'94000000',
'12000000',
'02000000',
'17000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'ac000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'bc000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'cc000000',
'12000000',
'02000000',
'0e000000',
'10000000',
'01000000',
'10000000',
'02000000',
'17020000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'12000000',
'01000000',
'00000000',
'0f000000',
'04000000',
'23000000',
'04000000',
'01000000',
'12000000',
'01000000',
'01000000',
'40000000',
'8c0c0000',
'33000000',
'01000000',
'01000000',
'24000000',
'01000000',
'00000000',
'3f000000',
'280d0000',
'21000000',
'04000000',
'01000000',
'dc000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'ec000000',
'12000000',
'02000000',
'08000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'f8000000',
'12000000',
'02000000',
'0d000000',
'10000000',
'01000000',
'10000000',
'02000000',
'56010000',
'21000000',
'04000000',
'01000000',
'08010000',
'12000000',
'02000000',
'1c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'15000000',
'04000000',
'04000000',
'01000000',
'21000000',
'04000000',
'01000000',
'dc000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'ec000000',
'12000000',
'02000000',
'08000000',
'10000000',
'01000000',
'10000000',
'02000000',
'21000000',
'04000000',
'01000000',
'f8000000',
'12000000',
'02000000',
'0d000000',
'10000000',
'01000000',
'10000000',
'02000000',
'a5020000',
'24000000',
'01000000',
'00000000',
'3f000000',
'240e0000',
'12000000',
'01000000',
'64000000',
'10000000',
'01000000',
'6a000000',
'3c000000',
'680d0000',
'21000000',
'04000000',
'01000000',
'84000000',
'12000000',
'02000000',
'0c000000',
'10000000',
'01000000',
'10000000',
'02000000',
'77000000',
'10000000',
'01000000',
'a0020000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'99000000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'03000000',
'10000000',
'01000000',
'e9000000',
'12000000',
'01000000',
'32000000',
'10000000',
'01000000',
'6a000000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'cdcc8c3f',
'10000000',
'01000000',
'9b010000',
'13000000',
'01000000',
'04000000',
'04000000',
'10000000',
'01000000',
'12000000',
'01000000',
'01000000',
'10000000',
'01000000',
'97000000',
'12000000',
'01000000',
'49000000',
'10000000',
'01000000',
'a0020000',
'11000000',
'09000000',
'0a000000',
'0f000000',
'0a000000',
'3b000000',
'00000000'
            
            
        ];


        $compiler = new Compiler();
        $compiled = $compiler->parse($script, false);

        if ($compiled['CODE'] != $expected){
            foreach ($compiled['CODE'] as $index => $item) {
                    echo ($index + 1) . '->' . $item . "\n";
//                if ($expected[$index] == $item){
//                    echo ($index + 1) . '->' . $item . "\n";
//                }else{
//                    echo "MISSMATCH need " . $expected[$index] . " got " . $compiled['CODE'][$index] . "\n";
//                }
            }
            exit;
        }

        $this->assertEquals($compiled['CODE'], $expected, 'The bytecode is not correct');
    }

}