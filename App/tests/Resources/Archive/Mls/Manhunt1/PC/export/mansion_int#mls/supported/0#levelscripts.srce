SCRIPTMAIN	LevelScripts;

ENTITY
	Mansion_Int		:	et_level;

{******** THIS IS THE INIT SCRIPT FOR THE ESTATE GARDENS ********}
CONST

TYPE

VAR
{globals}
vStart				: vec3d;
vEnd				: vec3d;
vGuardDirection 	: vec3d; 	

{LEVEL SCOPED VARS}
level_bIsAlertOn,		
level_bAreCamerasOn,		
level_bIsLiftOn,			
level_bPlayerHasKey, 	
bMapNotAquired,			
bHasChiefMoved,
bHasChiefCutPlayed,			
bAreHuntersSpawning,
bFirstTimeSeenByCamera 	: boolean;

level_KeyPosition		: vec3d;
sLastDeadHunter			: string[32];

{************************ FUNCTION HEADERS ************************}
PROCEDURE InitAreas (); FORWARD;
PROCEDURE InitTriggers(); FORWARD;
PROCEDURE InitGameText(); FORWARD; 
PROCEDURE CheckSavePoints(); FORWARD;
{********************* END OF FUNCTION HEADERS *********************}


{************************ LEVEL SCRIPTS ************************}

SCRIPT OnCreate;
VAR
vDirection	:	vec3d;

BEGIN

ForceWeatherType(WEATHER_CLOUDY,TRUE);

AIClearAllActiveAreaAssociations;

writeDebug('MANSION INT Level Init');

{Init the level scoped vars}	
level_bIsAlertOn 	:= FALSE;
bAreHuntersSpawning := FALSE;
sLastDeadHunter		:= 'Nobody';

if ( {CHECK IF ALL SAVE POINTS EXIST}
(NIL <> GetEntity('Gen_Save_Point'))
AND
(NIL <> GetEntity('Gen_Save_Point01'))
) then  {IF THEY ALL EXIST THIS IS NOT A RELOAD}
begin 
	writedebug('Level OnCreate: THIS IS NOT A RELOAD');
	{no save so far, init the vars}
	level_bAreCamerasOn		:= TRUE;
	level_bIsLiftOn			:= FALSE;	
	bHasChiefMoved			:= FALSE;
	bHasChiefCutPlayed		:= FALSE; 	
	level_bPlayerHasKey		:= FALSE; 
	bFirstTimeSeenByCamera 	:= FALSE; 
	level_KeyPosition := GetEntityPosition(GetEntity('CreateKeyInBilliard')); {BACKUP PLAN}
end;  

	bMapNotAquired  		:= TRUE;

	{Add the player}		
	AIAddPlayer('player');
	
	{define generic hunt goal}
	AIDefineGoalHuntEnemy('gHuntPlayer', 'player',FALSE,4); 
	
	{*** ALERT GOAL DEFINITIONS ***}	
	
	{MED PRIORITY VERSION OF ALERT GUARDS}
	SetVector(vDirection,-0.9,-0.0,0.2);
	AIDefineGoalGuardDIrection('gAlert_Guard01_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard01',2.5,5.5,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard01_MED',TRUE);
		
	AIDefineGoalGuard('gAlert_Guard02_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard02',2.5,5.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard02_MED',TRUE);
		
	AIDefineGoalGuard('gAlert_Guard03_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard03',2.5,5.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard03_MED',TRUE);
	
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gAlert_Guard04_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard04',2.5,5.5,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard04_MED',TRUE);
	
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gAlert_Guard05_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard05',2.5,10.5,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard05_MED',TRUE);
	
	AIDefineGoalGuard('gAlert_Guard06_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard06',2.5,10.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard06_MED',TRUE);
	
	SetVector(vDirection,0.2,-0.3,0.9);
	AIDefineGoalGuardDIrection('gAlert_Guard07_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard07',2.5,5.5,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard07_MED',TRUE);
	
	SetVector(vDirection,0.02,-0.5,-0.85);
	AIDefineGoalGuardDIrection('gAlert_Guard08_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard08',2.5,5.5,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard08_MED',TRUE);
	
	AIDefineGoalGuard('gAlert_Guard09_MED',AISCRIPT_MEDIUMPRIORITY,'Alert_Guard09',2.5,10.5,1); 
	AIGuardModifyShootOutsideRadius('gAlert_Guard09_MED',TRUE);
	
	{HIGH PRIORITY VERSION OF THE ABOVE}
	AIDefineGoalGuard('gAlert_Guard01_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Guard01',3.5,3.5,2); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard01_HIGH',TRUE);
		
	AIDefineGoalGuard('gAlert_Guard02_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Guard02',3.5,3.5,2); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard02_HIGH',TRUE);
		
	AIDefineGoalGuard('gAlert_Guard04_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Guard04',3.5,3.5,2); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard04_HIGH',TRUE);
	
	AIDefineGoalGuard('gAlert_Guard07_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Guard07',3.5,3.5,2); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard07_HIGH',TRUE);
		
	AIDefineGoalGuard('gAlert_Guard08_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Guard08',3.5,3.5,2); 			
	AIGuardModifyShootOutsideRadius('gAlert_Guard08_HIGH',TRUE);
	
	AIDefineGoalGuard('gAlert_Guard09_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Guard09',3.5,3.5,2); 
	AIGuardModifyShootOutsideRadius('gAlert_Guard09_HIGH',TRUE);
	
	
	{LOW PRIORITY ALERT Mansion Section 2}
	
	AIDefineGoalGuard('gGUARD_Corridor4',AISCRIPT_HIGHPRIORITY,'GUARD_Corridor4',2.5,5.5,1); 
	AIGuardModifyShootOutsideRadius('gGUARD_Corridor4',TRUE);
	
	AIDefineGoalGuard('gAlert_StairsLeft',AISCRIPT_LOWPRIORITY,'Alert_StairsLeft',2.5,5.5,1); 
	AIGuardModifyShootOutsideRadius('gAlert_StairsLeft',TRUE);
	
	AIDefineGoalGuard('gAlert_StairsRight',AISCRIPT_LOWPRIORITY,'Alert_StairsRight',2.5,5.5,1); 
	AIGuardModifyShootOutsideRadius('gAlert_StairsRight',TRUE);
	
	AIDefineGoalGuard('gAlert_Ground2Tower',AISCRIPT_LOWPRIORITY,'Alert_Ground2Tower',1.5,5.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_Ground2Tower',TRUE);
			
	AIDefineGoalGuard('gAlert_Basemt2Tower',AISCRIPT_HIGHPRIORITY,'Alert_Basemt2Tower',1.5,5.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_Basemt2Tower',TRUE);
	
	AIDefineGoalGuard('gAlert_CorridorEnt1',AISCRIPT_LOWPRIORITY,'Alert_CorridorEnt1',2.5,5.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_CorridorEnt1',TRUE);
		
	AIDefineGoalGuard('gAlert_CorridorEnt3',AISCRIPT_HIGHPRIORITY,'Alert_CorridorEnt3',2.5,5.5,1); 			
	AIGuardModifyShootOutsideRadius('gAlert_CorridorEnt3',TRUE);
	
	{HIGH PRIORITY VERSION OF THE ABOVE}
	AIDefineGoalGuard('gA_StairsLeft_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_StairsLeft',1.0,3.5,1); 
	AIGuardModifyShootOutsideRadius('gA_StairsLeft_HIGH',TRUE);
	
	AIDefineGoalGuard('gA_StairsRight_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_StairsRight',1.0,3.5,1); 
	AIGuardModifyShootOutsideRadius('gA_StairsRight_HIGH',TRUE);
	
	AIDefineGoalGuard('gA_Ground2Tower_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_Ground2Tower',1.0,3.5,1); 			
	AIGuardModifyShootOutsideRadius('gA_Ground2Tower_HIGH',TRUE);
	
	AIDefineGoalGuard('gA_CorridorEnt1_HIGH',AISCRIPT_HIGHPRIORITY,'Alert_CorridorEnt1',1.0,3.5,1); 			
	AIGuardModifyShootOutsideRadius('gA_CorridorEnt1_HIGH',TRUE);		
	
	{ELEVATOR GUARD }
	
	AIDefineGoalGuardLookAtEntity('gSecurityCam_07',AISCRIPT_HIGHPRIORITY,'SecurityCam_07',0.5,3.0,1,'player'); 			
	AIGuardModifyShootOutsideRadius('gSecurityCam_07',TRUE);		
	
	{The guards in the library}	
	AIDefineGoalGotoNodeIdle('gGoTopStairs','Guard08',AISCRIPT_MEDIUMPRIORITY,'LibraryStairs_Stop',AISCRIPT_WALKMOVESPEED,TRUE);
	
	SetVector(vDirection,-0.1,-0.7,-0.7);
	AIDefineGoalGuardDirection('gGuard07StayOnBalcony',AISCRIPT_MEDIUMPRIORITY,'Balcony_Stop',0.5,0.5,1,vDirection); 
	AIGuardModifyShootOutsideRadius('gGuard07StayOnBalcony',TRUE);
	
	{The Guys in the Security camera room}
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gCameraGuy',AISCRIPT_HIGHPRIORITY,'CameraGuy',0.5,0.5,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gCameraGuy',TRUE);
	
	{AIDefineGoalGuard('gSecurity',AISCRIPT_HIGHPRIORITY,'Alert_Security',0.5,5.0,1); 			
	AIGuardModifyShootOutsideRadius('gSecurity',TRUE);}
	
	{The cautious guy in the basement}	
	AIDefineGoalGotoNode('gBas_Guard20Go','Guard20',AISCRIPT_VERYHIGHPRIORITY,'Bas_GuardInside',AISCRIPT_RUNMOVESPEED,FALSE);
		
	AIDefineGoalGuard('gBas_DoorGuard',AISCRIPT_HIGHPRIORITY,'Bas_DoorGuard',2.5,2.5,1); 			
	AIGuardModifyShootOutsideRadius('gBas_DoorGuard',TRUE);
	
	SetVector(vDirection,0.2,-0.3,0.9);
	AIDefineGoalGuardDIrection('gBas_GuardInside',AISCRIPT_HIGHPRIORITY,'Bas_GuardInside',2.5,5.0,1,vDirection); 			
	{AIGuardModifyShootOutsideRadius('gBas_GuardInside',TRUE); Guard radius tuned to shoot when required}
	
	{Two SPECIAL goto and guard goals for the guys on the staircase when the cheif is being moved}
	AIDefineGoalGotoNodeIdle('gGuard10Goto','Guard10',AISCRIPT_VERYHIGHPRIORITY,'ChiefGuard_Stairs1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gGuard11Goto','Guard11',AISCRIPT_VERYHIGHPRIORITY,'ChiefGuard_Stairs2',AISCRIPT_RUNMOVESPEED,TRUE);
	
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gChiefGuard_Stairs1',AISCRIPT_HIGHPRIORITY,'ChiefGuard_Stairs1',0.5,1.0,1,vDirection); 
	AIGuardModifyShootOutsideRadius('gChiefGuard_Stairs1',TRUE);			
	AIDefineGoalGuardDIrection('gChiefGuard_Stairs2',AISCRIPT_HIGHPRIORITY,'ChiefGuard_Stairs2',0.5,1.0,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gChiefGuard_Stairs2',TRUE);
	
	{Alert For the BODYGUARDS}
	AIDefineGoalGuard('gBilliard_Guard01',AISCRIPT_HIGHPRIORITY,'Billiard_Guard01',2.0,2.0,1); 			
	AIGuardModifyShootOutsideRadius('gBilliard_Guard01',TRUE);
	AIDefineGoalGuard('gBilliard_Guard02',AISCRIPT_HIGHPRIORITY,'Billiard_Guard02',2.0,2.0,1); 			
	AIGuardModifyShootOutsideRadius('gBilliard_Guard02',TRUE);
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gBilliard_Guard03',AISCRIPT_HIGHPRIORITY,'Billiard_Guard03',1.0,1.0,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gBilliard_Guard03',TRUE);
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gBilliard_Guard04',AISCRIPT_HIGHPRIORITY,'Billiard_Guard04',1.0,1.0,1,vDirection); 			
	AIGuardModifyShootOutsideRadius('gBilliard_Guard04',TRUE);
	SetVector(vDirection,0.1,0.1,0.1);
	AIDefineGoalGuardDIrection('gProtectChief',AISCRIPT_HIGHPRIORITY,'Chief_GoToSafety',1.5,20.0,2,vDirection); 			
	AIGuardModifyShootOutsideRadius('gProtectChief',TRUE);

	{CHIEF AND BODYGUARDS GOALS}		
	AIDefineGoalSeekCoverBackwards('gCHIEFCover','CHIEF',AISCRIPT_HIGHPRIORITY,'player',1);
	AIDefineGoalGotoNode('gChiefGoSafe','EVERYONE',AISCRIPT_HIGHPRIORITY,'Chief_GoToSafety',AISCRIPT_RUNMOVESPEED,TRUE);	
	AIDefineGoalGotoNode('gChiefGoSafeRunning','CHIEF',AISCRIPT_VERYHIGHPRIORITY,'Chief_GoToSafety',AISCRIPT_RUNMOVESPEED,TRUE);

	AIDefineGoalGuard('gChiefStay_Armoury',AISCRIPT_HIGHPRIORITY,'Chief_GoToSafety',0.5,3.0,1); 
	AIGuardModifyShootOutsideRadius('gChiefStay_Armoury',TRUE);

	AIDefineGoalGuard('gChiefStay_Billiard',AISCRIPT_HIGHPRIORITY,'Chief_Billiard',0.5,3.0,1); 
	AIGuardModifyShootOutsideRadius('gChiefStay_Billiard',TRUE);	
	
	{Add the LEADER and his enemy}
	if(nil <> GetEntity('LEADER')) then 
	begin
		AIAddEntity('LEADER');
		AISetEntityAsLeader('LEADER');
		AIAddLeaderEnemy('LEADER','player');
		AISetLeaderInvisible('LEADER');
		AIEntityAlwaysEnabled('LEADER');
		
		{Create the subpacks}
		AIAddSubpackForLeader('LEADER','MANSION_GUARDS');
		AIAddSubpackForLeader('LEADER','MANSION2_GUARDS');
		AIAddSubpackForLeader('LEADER','BAS_GUARDS');
		AIAddSubpackForLeader('LEADER','CAMERA_ENFORCERS');		
		AIAddSubpackForLeader('LEADER','PLAYER_SEEKERS');		
			
		{hide the leader from the radar}
		AISetHunterOnRadar('LEADER',false);
				
		
		{ADD THE 2nd LEADER - LEADER2}
		
		AIAddEntity('LEADER2');
		AISetEntityAsLeader('LEADER2');
		AIAddLeaderEnemy('LEADER2','player');
		AISetLeaderInvisible('LEADER2');
		AIEntityAlwaysEnabled('LEADER2');
		
		{Create the LEADER2 subpacks}
		AIAddSubpackForLeader('LEADER2','CHIEF');
		AIAddSubpackForLeader('LEADER2','BODYGUARDS');		
			
		{hide the leader from the radar}
		AISetHunterOnRadar('LEADER2',false);
		
		{Init the areas - ALWAYS AFTER ALL THE LEADERS ARE INITIALISED}		
		InitAreas;	
			
		{ADD THE HUNTERS on the map}
		
		if(nil <> GetEntity('Guard01')) then
		begin
			AIAddEntity('Guard01');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard01');					
		end;
		
		if(nil <> GetEntity('Guard02')) then
		begin
			AIAddEntity('Guard02');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard02');					
		end;
		
		if(nil <> GetEntity('Guard03')) then
		begin
			AIAddEntity('Guard03');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard03');					
		end;
		
		if(nil <> GetEntity('Guard04')) then
		begin
			AIAddEntity('Guard04');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard04');					
		end;
		
		if(nil <> GetEntity('Guard05')) then
		begin
			AIAddEntity('Guard05');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard05');					
		end;
		
		if(nil <> GetEntity('Guard06')) then
		begin
			AIAddEntity('Guard06');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard06');					
		end;
		
		if(nil <> GetEntity('Guard07')) then
		begin
			AIAddEntity('Guard07');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard07');					
		end;
		
		if(nil <> GetEntity('Guard08')) then
		begin
			AIAddEntity('Guard08');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard08');					
		end;
		
		if(nil <> GetEntity('Guard09')) then
		begin
			AIAddEntity('Guard09');
			AIAddHunterToLeaderSubPack('LEADER','MANSION_GUARDS','Guard09');					
		end;
		
		{MANSION2 GUARDS}
		if(nil <> GetEntity('Guard10')) then
		begin
			AIAddEntity('Guard10');
			AIAddHunterToLeaderSubPack('LEADER','MANSION2_GUARDS','Guard10');					
		end;
		
		if(nil <> GetEntity('Guard11')) then
		begin
			AIAddEntity('Guard11');
			AIAddHunterToLeaderSubPack('LEADER','MANSION2_GUARDS','Guard11');					
		end;
		
		if(nil <> GetEntity('Guard12')) then
		begin
			AIAddEntity('Guard12');
			AIAddHunterToLeaderSubPack('LEADER','MANSION2_GUARDS','Guard12');					
		end;
		
		if(nil <> GetEntity('Guard13')) then
		begin
			AIAddEntity('Guard13');
			AIAddHunterToLeaderSubPack('LEADER','CAMERA_ENFORCERS','Guard13');					
		end;
		
		if(nil <> GetEntity('Guard14')) then
		begin
			AIAddEntity('Guard14');
			AIAddHunterToLeaderSubPack('LEADER','CAMERA_ENFORCERS','Guard14');					
		end;
		
		if(nil <> GetEntity('Guard15')) then
		begin
			AIAddEntity('Guard15');
			AIAddHunterToLeaderSubPack('LEADER','MANSION2_GUARDS','Guard15');					
		end;
		
		if(nil <> GetEntity('Guard16')) then
		begin
			AIAddEntity('Guard16');
			AIAddHunterToLeaderSubPack('LEADER','MANSION2_GUARDS','Guard16');					
		end;		
	
		
		if(nil <> GetEntity('Guard21')) then
		begin
			AIAddEntity('Guard21');
			AIAddHunterToLeaderSubPack('LEADER','MANSION2_GUARDS','Guard21');					
		end;
				
		{BASEMENT GUYS}
		if(nil <> GetEntity('Guard17')) then
		begin
			AIAddEntity('Guard17');
			AIAddHunterToLeaderSubPack('LEADER','BAS_GUARDS','Guard17');					
		end;
		
		if(nil <> GetEntity('Guard18')) then
		begin
			AIAddEntity('Guard18');
			AIAddHunterToLeaderSubPack('LEADER','BAS_GUARDS','Guard18');					
		end;
				
		if(nil <> GetEntity('Guard19')) then
		begin
			AIAddEntity('Guard19');
			AIAddHunterToLeaderSubPack('LEADER','BAS_GUARDS','Guard19');					
		end;
		
		if(nil <> GetEntity('Guard20')) then
		begin
			AIAddEntity('Guard20');
			AIAddHunterToLeaderSubPack('LEADER','BAS_GUARDS','Guard20');					
		end;
		
		{POLICE CHIEF AND BODYGUADS}
		
		if(nil <> GetEntity('CHIEF')) then
		begin
			AIAddEntity('CHIEF');			
			AIAddHunterToLeaderSubPack('LEADER2','CHIEF','CHIEF');					
		end;
		
		if(nil <> GetEntity('BodyGuard01')) then
		begin
			AIAddEntity('BodyGuard01');
			AIAddHunterToLeaderSubPack('LEADER2','BODYGUARDS','BodyGuard01');	
			SetEntityScriptsFromEntity('BodyGuard_Temp','BodyGuard01');
			runscript('BodyGuard01','OnCreateHunter');						
		end;
		
		if(nil <> GetEntity('BodyGuard02')) then
		begin
			AIAddEntity('BodyGuard02');
			AIAddHunterToLeaderSubPack('LEADER2','BODYGUARDS','BodyGuard02');
			SetEntityScriptsFromEntity('BodyGuard_Temp','BodyGuard02');
			runscript('BodyGuard02','OnCreateHunter');					
		end;
		
		if(nil <> GetEntity('BodyGuard03')) then
		begin
			AIAddEntity('BodyGuard03');
			AIAddHunterToLeaderSubPack('LEADER2','BODYGUARDS','BodyGuard03');
			SetEntityScriptsFromEntity('BodyGuard_Temp','BodyGuard03');
			runscript('BodyGuard03','OnCreateHunter');					
		end;
		
		if(nil <> GetEntity('BodyGuard04')) then
		begin
			AIAddEntity('BodyGuard04');
			AIAddHunterToLeaderSubPack('LEADER2','BODYGUARDS','BodyGuard04');
			SetEntityScriptsFromEntity('BodyGuard_Temp','BodyGuard04');
			runscript('BodyGuard04','OnCreateHunter');					
		end;
		
		{Add the BASIC goals to the subpacks - other goals are inside each hunter's script }
		
		{**** TEMPORARY COMMENT MARKER - USE DURING LEVEL BUILDING  ****
		****************************************************************}
		
		AIAddGoalForSubpack('LEADER','MANSION_GUARDS','gHuntPlayer');		
		AIAddGoalForSubpack('LEADER','MANSION2_GUARDS','gHuntPlayer');
		AIAddGoalForSubpack('LEADER','BAS_GUARDS','gHuntPlayer');		
				
		AIAddGoalForSubpack('LEADER','CAMERA_ENFORCERS','gHuntPlayer');		
		AIAddGoalForSubpack('LEADER','PLAYER_SEEKERS','gHuntPlayer');		
		
		{GUYS INSIDE THE CAMERA SECURITY ROOM - SHOOTOUT SETUP}
		AIAddGoalForSubpack('LEADER','CAMERA_ENFORCERS','gCameraGuy');
		{AIAddGoalForSubpack('LEADER','CAMERA_ENFORCERS','gSecurity');}
		
		{THE BAS GUARDS SETUP}
		AIAddGoalForSubpack('LEADER','BAS_GUARDS','gBas_DoorGuard');		
		
		{GOALS FOR BODYGUARDS AND CHIEF}				
		AIAddGoalForSubpack('LEADER2','BODYGUARDS','gHuntPlayer');		
		AIAddGoalForSubpack('LEADER2','CHIEF','gHuntPlayer');			

		{Set the combat types per subpack}		
		AISetSubpackCombatType('LEADER','MANSION_GUARDS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','MANSION2_GUARDS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','BAS_GUARDS',COMBATTYPEID_COVER);		
		AISetSubpackCombatType('LEADER','CAMERA_ENFORCERS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','PLAYER_SEEKERS',COMBATTYPEID_COVER);
		
		AISetSubpackCombatType('LEADER2','BODYGUARDS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER2','CHIEF',COMBATTYPEID_COVER);				
				
		{set the search parameters}		
		aiSetSearchParams('GUARDS_Search',50.0,TRUE,8.0,100,0,0,20);
		aiSetSearchParams('GUARDS_Invest',15.0,TRUE,8.0,75,0,0,20);
		AISetSubPackSearchParams('LEADER','MANSION_GUARDS',SEARCHREQID_NEGATIVECHASE,'GUARDS_Search');
		AISetSubPackSearchParams('LEADER','MANSION_GUARDS',SEARCHREQID_RUNTOINVESTIGATE,'GUARDS_Invest');
		AISetSubPackSearchParams('LEADER','MANSION2_GUARDS',SEARCHREQID_NEGATIVECHASE,'GUARDS_Search');
		AISetSubPackSearchParams('LEADER','MANSION2_GUARDS',SEARCHREQID_RUNTOINVESTIGATE,'GUARDS_Invest');		
		
		aiSetSearchParams('BODYGUARDS_Search',35.0,FALSE,8.0,1,0,0,5);
		aiSetSearchParams('BODYGUARDS_Invest',15.0,FALSE,8.0,1,0,0,5);
		AISetSubPackSearchParams('LEADER2','BODYGUARDS',SEARCHREQID_NEGATIVECHASE,'BODYGUARDS_Search');
		AISetSubPackSearchParams('LEADER2','BODYGUARDS',SEARCHREQID_RUNTOINVESTIGATE,'BODYGUARDS_Invest');
		
		aiSetSearchParams('BAS_Search',60.0,TRUE,8.0,100,0,0,15);
		aiSetSearchParams('BAS_Invest',60.0,TRUE,8.0,100,0,0,15);
		AISetSubPackSearchParams('LEADER','BAS_GUARDS',SEARCHREQID_NEGATIVECHASE,'BAS_Search');
		AISetSubPackSearchParams('LEADER','BAS_GUARDS',SEARCHREQID_RUNTOINVESTIGATE,'BAS_Invest');

		{SQUADS}
		if ( IsEntityAlive('Guard10') AND IsEntityAlive('Guard11') )
			then JoinMySquad(GetEntity('Guard10'),GetEntity('Guard11'));		
		if ( IsEntityAlive('Guard15') AND IsEntityAlive('Guard16') )
			then JoinMySquad(GetEntity('Guard15'),GetEntity('Guard16'));				
				
	end;
		
	InitTriggers;
	CheckSavePoints;
	InitGameText;
				
	{Assign the template script to all NOISY BREAKABLE objects in the game}
	if (NIL <> GetEntity('Estate_Ornate_Vase')) 
		then SetEntityScriptsFromEntity('Noisy_Breakable_Template','Estate_Ornate_Vase');
	if (NIL <> GetEntity('Estate_Ornate_Vase01'))
		then SetEntityScriptsFromEntity('Noisy_Breakable_Template','Estate_Ornate_Vase01');
	if (NIL <> GetEntity('Estate_Ornate_Vase02'))
		then SetEntityScriptsFromEntity('Noisy_Breakable_Template','Estate_Ornate_Vase02');
	
	{Assign the template script to all EXPLODER objects in the game}
	if (NIL <> GetEntity('CJ_FLAME_Drum_(F)')) 
		then SetEntityScriptsFromEntity('Exploder_Template','CJ_FLAME_Drum_(F)');
	if (NIL <> GetEntity('CJ_FLAME_Drum_(F)01')) 
		then SetEntityScriptsFromEntity('Exploder_Template','CJ_FLAME_Drum_(F)01');
	if (NIL <> GetEntity('CJ_FLAME_Drum_(F)02')) 
		then SetEntityScriptsFromEntity('Exploder_Template','CJ_FLAME_Drum_(F)02');
	if (NIL <> GetEntity('CJ_FLAME_Drum_(F)03')) 
		then SetEntityScriptsFromEntity('Exploder_Template','CJ_FLAME_Drum_(F)03');
	if (NIL <> GetEntity('CJ_FLAME_Drum_(F)04')) 
		then SetEntityScriptsFromEntity('Exploder_Template','CJ_FLAME_Drum_(F)04');
	if (NIL <> GetEntity('CJ_FLAME_Drum_(F)05')) 
		then SetEntityScriptsFromEntity('Exploder_Template','CJ_FLAME_Drum_(F)05');
		
	{Kill the entity KEY in max only to allow spawning}
	if (NIL <> GetEntity('CJ_Key_(CT)')) then DestroyEntity(GetEntity('CJ_Key_(CT)'));
	
	{*** TEMP: Play Intro Cut}
	{if (GetPlayerLevelRestarts = 0) then runscript('Mansion_Int','CUT_INTRO_TEMP');}
		
	SetMaxNumberOfRats(0);	
	SwitchLitterOn(FALSE);
	
	SetNumberOfKillableHuntersInLevel(29,7);
	
	if (NIL <> GetEntity('CJ_WOODDOOR10_(D)06'))then SetDoorOpenAngleIn(GetEntity('CJ_WOODDOOR10_(D)06'),90);
	if (NIL <> GetEntity('CJ_WOODDOOR10_(D)06'))then SetDoorOpenAngleOut(GetEntity('CJ_WOODDOOR10_(D)06'),90);
	
	if (NIL <> GetEntity('CJ_WOODDOOR10_(D)05'))then SetDoorOpenAngleIn(GetEntity('CJ_WOODDOOR10_(D)05'),90);
	if (NIL <> GetEntity('CJ_WOODDOOR10_(D)05'))then SetDoorOpenAngleOut(GetEntity('CJ_WOODDOOR10_(D)05'),90);
	
	if (NIL <> GetEntity('Gen_Interior_WoodDoor_(D)01'))then SetDoorOpenAngleIn(GetEntity('Gen_Interior_WoodDoor_(D)01'),90);
	if (NIL <> GetEntity('Gen_Interior_WoodDoor_(D)01'))then SetDoorOpenAngleOut(GetEntity('Gen_Interior_WoodDoor_(D)01'),90);
	
	if (NIL <> GetEntity('CJ_MONITER')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER');
		RunScript('CJ_MONITER','OnCreate');
	end;
	if (NIL <> GetEntity('CJ_MONITER05')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER05');
		RunScript('CJ_MONITER05','OnCreate');
	end;
	
	if (NIL <> GetEntity('CJ_MONITER06')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER06');
		RunScript('CJ_MONITER06','OnCreate');
	end;
	
	if (NIL <> GetEntity('CJ_MONITER07')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER07');
		RunScript('CJ_MONITER07','OnCreate');
	end;
		
	runscript('Mansion_Int','LevelGoals');
	
end; {end OnCreate}

{************************ END OF OnCREATE ************************}


{************************ GAME MAP ************************}

SCRIPT InitMap;
BEGIN
	
	if bMapNotAquired then
	begin
		bMapNotAquired := FALSE;		
		
		removethisscript;
	end;
End; 

{************************ CUT SCENES ************************}


SCRIPT LevelGoals;
BEGIN

	if NOT level_bPlayerHasKey then SetLevelGoal('GOAL1')
	else ClearLevelGoal('GOAL1');
	
	if NOT level_bIsLiftOn  then SetLevelGoal('GOAL2')
	else ClearLevelGoal('GOAL2');	
	
	if (level_bPlayerHasKey AND level_bIsLiftOn ) then 
	begin
		SetLevelGoal('GOAL3');
		EnableUseable(GetEntity('Elevator_Controls'),TRUE);
	end;
End;

SCRIPT CUT_CHIEF_TO_SAFETY;
var
sChiefArea		: STRING[32];
vOffset			: vec3d;
pEntityToLook	: entityptr;
iSecs			: integer;

BEGIN
{CUTSCENE Triggerd by: Death of a BODYGUARD OR PERC_DEATHS_FOR_CHIEF_CUT IN ALERT MANAGER}

WriteDebug('CUT_CHIEF_TO_SAFETY Cheching if bHasChiefCutPlayed');

if bHasChiefCutPlayed then RemoveThisScript;

WriteDebug('CUT_CHIEF_TO_SAFETY Started');

iSecs := 0;
while level_bIsAlertOn do 
begin
	sleep(1000);
	iSecs := iSecs + 1;
	if (iSecs > 60) then 
	begin
		if level_bIsAlertOn then 
		begin
			writedebug('CUT_CHIEF_TO_SAFETY TERMINATED: time out');
			killthisscript; {wait too long and is all fucked}
		end;
	end
end;

while isCutSceneInProgress do sleep(2000);

if IsEntityAlive('CHIEF') then
begin

	if (AINumberInSubpack('LEADER2','BODYGUARDS') > 0)
	then
	begin
				
		scriptHogProcessorStart;		
		if IsEntityAlive('CHIEF') then if ( GetHunterAreaName(GetEntity('CHIEF')) = 'aibilliard') then		
		begin
		scriptHogProcessorEnd;	
				
			writedebug('Now Playing: CUT_CHIEF_TO_SAFETY');
			
			while isCutSceneInProgress do sleep(1); {*** this is here AS A PRECAUTION!!!}
			
			LoadScriptAudioSlot(0,SFX_C2V1_SCRIPTED_MANSION_1); 	{CNV1_1}
			LoadScriptAudioSlot(1,SFX_Y1V1_SCRIPTED_MANSION_INT_1); {CNV1_2}
				
			CutSceneStart;
				
			AICutSceneEntityEnable('CHIEF',TRUE);		
			AICancelHunterIdleAction('CHIEF',AISCRIPT_IDLE_SPEECH);
			AICancelHunterIdleAction('CHIEF',AISCRIPT_IDLE_STANDANIMS);
														
			if IsEntityAlive('BodyGuard04') then AILookAtEntity('CHIEF','BodyGuard04')
			else if IsEntityAlive('BodyGuard02') then AILookAtEntity('CHIEF','BodyGuard02')
			else if IsEntityAlive('BodyGuard01') then AILookAtEntity('CHIEF','BodyGuard01')
			else if IsEntityAlive('BodyGuard03') then AILookAtEntity('CHIEF','BodyGuard03');
				
			if IsEntityAlive('BodyGuard01') then 
			begin					
				AICutSceneEntityEnable('BodyGuard01',TRUE);
				AILookAtEntity('BodyGuard01','CHIEF');
				AICancelHunterIdleAction('BodyGuard01',AISCRIPT_IDLE_SPEECH);
				AICancelHunterIdleAction('BodyGuard01',AISCRIPT_IDLE_STANDANIMS);
			end;
				
			if IsEntityAlive('BodyGuard02') then 
			begin
				AICutSceneEntityEnable('BodyGuard02',TRUE);
				AILookAtEntity('BodyGuard02','CHIEF');	
				AICancelHunterIdleAction('BodyGuard02',AISCRIPT_IDLE_SPEECH);	
				AICancelHunterIdleAction('BodyGuard02',AISCRIPT_IDLE_STANDANIMS);			
			end;
			if IsEntityAlive('BodyGuard03') then 
			begin
				AICutSceneEntityEnable('BodyGuard03',TRUE);
				AILookAtEntity('BodyGuard03','CHIEF');
				AICancelHunterIdleAction('BodyGuard03',AISCRIPT_IDLE_SPEECH);	
				AICancelHunterIdleAction('BodyGuard03',AISCRIPT_IDLE_STANDANIMS);				
			end;
			if IsEntityAlive('BodyGuard04') then 
			begin
				AICutSceneEntityEnable('BodyGuard04',TRUE);
				AILookAtEntity('BodyGuard04','CHIEF');
				AICancelHunterIdleAction('BodyGuard04',AISCRIPT_IDLE_SPEECH);					
				AICancelHunterIdleAction('BodyGuard04',AISCRIPT_IDLE_STANDANIMS);
			end;
			
			ScriptHogProcessorStart;	
				
				SetVector(vOffset,183.7,10.0,1.5);
				SetCameraPosition(vOffset);
			
				setVector(vOffset,0.0,0.5,1.5);
			
				pEntityToLook := GetEntity('CHIEF');				
				CameraForceLookAtEntity(pEntityToLook,vOffset,FALSE,FALSE,0.0); 
			
			ScriptHogProcessorEnd;	
				
			while NOT IsScriptAudioSlotLoaded(0) do sleep(1);		
						
			{*** BODYGUARD talking shite ***}
			PlayScriptAudioSlotOneShotFromPos(GetCameraPosition,0,-1,-1);
			SetGameTextDisplayTime(4000);							
			PlayHunterSpeechPlaceHolder('CNV1_1');			
			sleep(4000);
			{*** End of BODYGUARD talking shite ***}		
							
			{*** CHIEF talking shite ***}
			PlayScriptAudioSlotOneShotFromPos(GetCameraPosition,1,-1,-1);
			SetGameTextDisplayTime(4000);							
			PlayHunterSpeechPlaceHolder('CNV1_2');			
			
			LoadScriptAudioSlot(0,SFX_C2V1_SCRIPTED_MANSION_2); 	{CNV1_3}
			
			sleep(4000);
			{*** End of CHIEF talking shite ***}			
				
			{*** BODYGUARD talking shite ***}
			PlayScriptAudioSlotOneShotFromPos(GetCameraPosition,0,-1,-1);
			SetGameTextDisplayTime(4000);							
			PlayHunterSpeechPlaceHolder('CNV1_3');		
			sleep(4000);	
			{*** End of BODYGUARD talking shite ***}			
			
			runScript('CHIEF','MoveToSafety');
							
			CameraStopLookAtEntity(FALSE,0.0);
							
			bHasChiefCutPlayed := TRUE;
				
			CutSceneEnd(FALSE);
				
			removethisscript;
				
		end
		else {CHIEF IS ELSEWERE BUT BILLIARD ROOM}
		begin
			writedebug('Cannot play CUT_CHIEF_TO_SAFETY, CHIEF IS NOT IN BILLIARD ROOM');

			if IsEntityAlive('CHIEF') then 				
			begin							
				
				if (AINumberInSubpack('LEADER2','BODYGUARDS') = 0) then 
				begin
					writedebug('CUT_CHIEF_TO_SAFETY TERMINATED: BODYGUARDS = 0');
					removethisscript;
				end;
				
			end
			else 
			begin
				writedebug('CUT_CHIEF_TO_SAFETY TERMINATED: CHIEF is DEAD');
				removethisscript;
			end;
			
		end;	
					
	end;	
	
end;

End;



{********************* END OF CUT SCENES *********************}




{********************************* FUNCTION DECLARATIONS *********************************}

PROCEDURE InitAreas ;
BEGIN
	
	{ENTITY ACTIVATION AREAS}	
	
	AIAssociateFourActiveAreasWithPlayerArea('aiCellar','aiCorridor1','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiCellar','aiDinningRoom','aiBar','aiBilliard','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiCellar','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor1','aiCellar','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor1','aiDinningRoom','aiBar','aiBilliard','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiCorridor1','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiLibrary','aiCorridor1','aiCellar','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiLibrary','aiDinningRoom','aiBar','aiBilliard','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiLibrary','aiLounge','aiTransit');
		
	AIAssociateFourActiveAreasWithPlayerArea('aiVestibule','aiLibrary','aiCorridor1','aiCellar','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiVestibule','aiDinningRoom','aiBar','aiBilliard','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiVestibule','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor2','aiVestibule','aiLibrary','aiCorridor1','aiCellar');
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor2','aiDinningRoom','aiBar','aiBilliard','aiCorridor3');	
	AIAssociateTwoActiveAreasWithPlayerArea('aiCorridor2','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiDinningRoom','aiCorridor1','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiDinningRoom','aiCellar','aiBar','aiBilliard','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiDinningRoom','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiBar','aiCorridor1','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiBar','aiDinningRoom','aiCellar','aiBilliard','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiBar','aiLounge','aiTransit');

	AIAssociateFourActiveAreasWithPlayerArea('aiBilliard','aiCorridor1','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiBilliard','aiDinningRoom','aiBar','aiCellar','aiCorridor3');
	AIAssociateTwoActiveAreasWithPlayerArea('aiBilliard','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor3','aiCorridor1','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor3','aiCellar','aiBar','aiBilliard','aiDinningRoom');
	AIAssociateTwoActiveAreasWithPlayerArea('aiCorridor3','aiLounge','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiLounge','aiCorridor1','aiLibrary','aiVestibule','aiCorridor2');
	AIAssociateFourActiveAreasWithPlayerArea('aiLounge','aiCellar','aiBar','aiBilliard','aiDinningRoom');
	AIAssociateTwoActiveAreasWithPlayerArea('aiLounge','aiCorridor3','aiTransit');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiTransit','aiEntraStart','aiCorridor3','aiBar','aiDinningRoom');
		
	AIAssociateThreeActiveAreasWithPlayerArea('aiEntraStart','aiTransit','aiEntrance','aiCorridor4');
	
	AIAssociateOneActiveAreaWithPlayerArea('aiEntrance','aiEntraStart');	
	
	AIAssociateOneActiveAreaWithPlayerArea('aiCorridor4','aiEntraStart');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiEntrance','aiArmoury','aiSecurity','aiStairsTower','aiCorridor4');
	AIAssociateFourActiveAreasWithPlayerArea('aiArmoury','aiEntrance','aiSecurity','aiStairsTower','aiCorridor4');
	AIAssociateFourActiveAreasWithPlayerArea('aiSecurity','aiEntrance','aiArmoury','aiStairsTower','aiCorridor4');
	AIAssociateFourActiveAreasWithPlayerArea('aiStairsTower','aiEntrance','aiArmoury','aiSecurity','aiCorridor4');
	AIAssociateFourActiveAreasWithPlayerArea('aiCorridor4','aiStairsTower','aiEntrance','aiArmoury','aiSecurity');
	
	AIAssociateOneActiveAreaWithPlayerArea('aiBasement','aiStairsTower');
	AIAssociateOneActiveAreaWithPlayerArea('aiStairsTower','aiBasement');
	
	{TERRITORIES}
	AIAddAreaForSubpack('BODYGUARDS','aiBar');
			
	{AUDIO AREAS}
	{CODE MISSING - I DO NOT HAVE THE RIGHT AREA IDs FOR THIS LEVEL}

End; {of InitAreas}




{*****************************************************}


PROCEDURE InitTriggers;
BEGIN
	{*** Level Triggers ***}
	
	setVector(vStart,0.0,0.0,0.0);
	setVector(vEnd,-0.2,-0.2,-0.2);
	if (nil = GetEntity('Alert_Manager')) then CreateBoxTrigger(vStart,vEnd,'Alert_Manager');
	
	setVector(vStart,0.1,0.1,0.1);
	setVector(vEnd,0.2,0.2,0.2);
	if (nil = GetEntity('Hunters_Generator')) then CreateBoxTrigger(vStart,vEnd,'Hunters_Generator');
	
	setVector(vStart,175.7,8.5,11.1);
	setVector(vEnd,180.4,11.5,12.4);
	if (nil = GetEntity('CHIEF_Speech')) then CreateBoxTrigger(vStart,vEnd,'CHIEF_Speech');
	
	setVector(vStart,164.757,15.7,58.977);
	if (nil = GetEntity('LibraryBalcony')) then CreateSphereTrigger(vStart,1.5,'LibraryBalcony');
	
	setVector(vStart,154.766,9.725,76.931);
	if (nil = GetEntity('LibraryEntrance')) then CreateSphereTrigger(vStart,1.5,'LibraryEntrance');
	
	setVector(vStart,159.439,9.725,53.282);
	if (nil = GetEntity('LoungeEntrance')) then CreateSphereTrigger(vStart,1.5,'LoungeEntrance');

	setVector(vStart,150.766,9.725,38.478);
	if (nil = GetEntity('DiningEntrance')) then CreateSphereTrigger(vStart,1.8,'DiningEntrance');

	setVector(vStart,162.859,1.758,-26.087);
	if (nil = GetEntity('ShutTheDoor')) then CreateSphereTrigger(vStart,0.8,'ShutTheDoor');
	
	setVector(vStart,142.652,17.762,-3.323);
	if (nil = GetEntity('End_Of_Level')) then CreateSphereTrigger(vStart,1.3,'End_Of_Level');
		
	{showTriggers(TRUE);}
	
End; {of InitTriggers}



{*****************************************************}



PROCEDURE InitGameText;
BEGIN

	SetGameTextTeleType(false);

End; {of InitGameText}





{*****************************************************}

PROCEDURE CheckSavePoints;
VAR
i			: integer;
sHunter		: string[32];
vVelocity	: vec3d;
BEGIN
	
	if( 
	(NIL = GetEntity('Gen_Save_Point')) 
	OR 
	(NIL = GetEntity('Gen_Save_Point01')) 
	) then	
	begin
		if (NIL = GetEntity('CHIEF')) then
		begin
			
			RemoveScript('Mansion_Int','CUT_CHIEF_TO_SAFETY');
			
			if NOT level_bPlayerHasKey then 
			begin
				SetVector(vVelocity,0.1,0.4,0.0);
				
				if (level_KeyPosition.X <> 0.0) then SpawnEntityWithVelocity('CJ_Key_(CT)',level_KeyPosition, 'Elevator_Key',vVelocity)	
				else SpawnEntityWithVelocity('CJ_Key_(CT)',GetEntityPosition(GetEntity('CreateKeyInBilliard')),'Elevator_Key',vVelocity);	
				
				if (NIL <> GetEntity('Elevator_Key')) then 
				begin
					DisplayGameText('KEY2');
					RadarPositionSetEntity(GetEntity('Elevator_Key'),MAP_COLOR_GREEN); 
				end;
				
			end;
			
			if IsEntityAlive('BodyGuard01') then RunScript('BodyGuard01','Teleport');
			if IsEntityAlive('BodyGuard02') then RunScript('BodyGuard02','Teleport');
			if IsEntityAlive('BodyGuard03') then RunScript('BodyGuard03','GetPath');
			if IsEntityAlive('BodyGuard04') then RunScript('BodyGuard04','GetPath');
			
		end;
	end;
	
	if (NIL = GetEntity('Gen_Save_Point')) then
	begin
		{hunters in WEST Section should have their paths now}
		for i := 1 to AINumberInSubPack('LEADER','MANSION_GUARDS') do
		begin								
			AIReturnSubpackEntityName('LEADER','MANSION_GUARDS', i, sHunter);				
			{give the path}
			runscript(sHunter,'GetPath');
		end;			
		{hunters in EST Section should have their paths now}				
		for i := 1 to AINumberInSubPack('LEADER','MANSION2_GUARDS') do
		begin			
			AIReturnSubpackEntityName('LEADER','MANSION2_GUARDS', i, sHunter);				
			runscript(sHunter,'GetPath');							
		end;
		{end;}
	end;
		

	if( 
	(NIL = GetEntity('Gen_Save_Point')) 
	OR 
	(NIL = GetEntity('Gen_Save_Point01')) 
	) then	
	begin
		if bHasChiefCutPlayed then 
		begin			
			writedebug('LEVEL SAVEPOINTS CHECK: bHasChiefCutPlayed = TRUE');
			
			RemoveScript('Mansion_Int','CUT_CHIEF_TO_SAFETY');
			
			UnfreezeEntity(getEntity('Estate_Interior_Door_(D)04'));
			UnLockEntity(getEntity('Estate_Interior_Door_(D)04'));			
				
			{15/08/03 I have commented IF below and added the code here to teleport CHIEF
			and fix bug John Haime 395 - Cerberus Leader is too exposed to player's fire
			having to walk in front of the save point where player is.
				
			let's see if it works!}
				
			runscript('CHIEF','Teleport');
				
		end;
	end;			
		{if bHasChiefMoved then 
		begin			
			writedebug('LEVEL SAVEPOINTS CHECK: bHasChiefMoved = TRUE');
			runscript('CHIEF','Teleport');
			UnfreezeEntity(getEntity('Estate_Interior_Door_(D)04'));
			UnLockEntity(getEntity('Estate_Interior_Door_(D)04'));
		end
		else 
		begin			
			runscript('CHIEF','MoveToSafety');	
		end;
		}
			
		
End;






{*****************************************************}

SCRIPT ReloadFlagsReport;
BEGIN	
	
		WriteDebug('-------------------------------------');
		WriteDebug('---- 	RELOAD FLAGS REPORT 	-----');
		WriteDebug('-------------------------------------'); 
		
		if level_bAreCamerasOn then
		WriteDebug('- level_bAreCamerasOn is TRUE 		-')
		else
		WriteDebug('- level_bAreCamerasOn is FALSE 		-');
		
		if level_bIsLiftOn then
		WriteDebug('- level_bIsLiftOn is TRUE     		-')
		else
		WriteDebug('- level_bIsLiftOn is FALSE 			-');
		
		if level_bPlayerHasKey then
		WriteDebug('- level_bPlayerHasKey is TRUE 		-')
		else
		WriteDebug('- level_bPlayerHasKey is FALSE		-');
		
		if bHasChiefMoved then
		WriteDebug('- bHasChiefMoved is TRUE      		-')
		else
		WriteDebug('- bHasChiefMoved is FALSE 			-');
		
		if bHasChiefCutPlayed then
		WriteDebug('- bHasChiefCutPlayed is TRUE  		-')
		else
		WriteDebug('- bHasChiefCutPlayed is FALSE 		-');
		
		if bFirstTimeSeenByCamera then
		WriteDebug('- bFirstTimeSeenByCamera is TRUE  	-')
		else
		WriteDebug('- bFirstTimeSeenByCamera is FALSE	-');		
		
		WriteDebug('-------------------------------------');
		
	
	
End;


END. {end of LevelScripts}   