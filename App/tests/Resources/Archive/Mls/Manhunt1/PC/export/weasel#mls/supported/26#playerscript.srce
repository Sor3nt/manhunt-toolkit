SCRIPTMAIN	PlayerScript;

ENTITY
player	:	et_name;

VAR

vec,
savepos,
vPlayerPos,
position				: Vec3D;
deathcount,
H1Pos,
H2Pos,
H3Pos,
H4Pos,
HTimer					: integer;
Gatea,Gateb				: EntityPtr;
bW_CLEAN,
bR_CLEAN,
bS_CLEAN				: boolean;

cutscene				: level_var boolean;
level_bIsSmashingWindow	: level_var boolean;

SCRIPT OnCreate;
BEGIN

IF( 
(GetPlayerLevelRestarts = 0) 
OR 
(GetIndexFromInventoryItemType(GetPlayer,CT_SMALL_BAT) = -1)
) THEN  CreateInventoryItem(CT_SMALL_BAT,this,TRUE);

SetLevelGoal('GOAL1');

	{ TEST TEST TEST TEST TEST TEST}	
			
	writedebug('------------PAD-MAPPED FUNCTIONS------------');
	{runscript('player','ReadPadLoop1');}
	{runscript('player','ReadPadLoop2');}
	{runscript('player','ReadPadLoop3');}
	sleep(500);
	writedebug('------------PAD-MAPPED FUNCTIONS------------');
		
	{ TEST TEST TEST TEST TEST TEST}
	
H1Pos:=0;
H2Pos:=0;
H3Pos:=0;
H4Pos:=0;
HTimer:=0;

Gatea:=GetEntity('CJ_GATE_L_(D)');
Gateb:=GetEntity('CJ_GATE_R_(D)');

UnFreezeEntity(Gatea);
UnFreezeEntity(Gateb);

{INTRO CUT INIT}
IF (GetPlayerLevelRestarts = 0) THEN 
begin
	bW_CLEAN	:= FALSE;
	bR_CLEAN	:= FALSE;
	bS_CLEAN	:= FALSE;	
	cutscene	:= TRUE;
	vPlayerPos := GetPlayerPosition;
	SetVector(position,54.0,1.9,5.9);
	MoveEntity(GetPlayer,position,0);	
	SetVector(position,65.9,-0.1,24.9);
	MoveEntity(GetEntity('HUNTER01'),position,1);			
	runscript('player','IntroCutscene');
end
ELSE
begin
	
	cutscene	:= FALSE;
	
	RunScript('ASY_Garage_Button_(S)','CloseDoor');
	
	HandCamSetVideoEffectTimeCode(FALSE);
	HandCamSetVideoEffectRecordDot(FALSE);
	
	if (AINumberInSubPack('LEADER','Warehouse') = 0) then bW_CLEAN	:= TRUE
	else bW_CLEAN	:= FALSE; 
	
	if (AINumberInSubPack('LEADER','RoofTop') = 0) then bR_CLEAN	:= TRUE
	else bR_CLEAN	:= FALSE; 
	
	if (AINumberInSubPack('LEADER','Street') = 0) then bS_CLEAN	:= TRUE
	else bS_CLEAN	:= FALSE; 
	
	LockEntity(Gatea);
	LockEntity(Gateb);
	GraphModifyConnections(Gatea, AISCRIPT_GRAPHLINK_ALLOW_NOTHING);
	
	scriptHogProcessorStart;
	if NOT AIIsGoalNameInSubpack('LEADER','Warehouse','goalHIDE') 
		then AIAddGoalForSubPack('LEADER','Warehouse','goalHIDE');
	scriptHogProcessorEnd;	
	
	runscript('player','Timer');
end;

	
SetVector(savepos,54.0,1.0,13.3);

RunScript('player','Health1');
sleep(100);
RunScript('player','Health2');
sleep(100);
RunScript('player','Health3');
sleep(100);
RunScript('player','Health4');

RunScript('Gen_Sec-Cam','Scan');

sleep(1000);
HTimer:=20000;

END;

SCRIPT ReadPadLoop1;
VAR
bCycle				:	boolean;

BEGIN
	
	bCycle := TRUE;	
	writeDebug('SQUARE - ');	
	while bCycle do if IsPadButtonPressed(PAD_SQUARE) then
	begin							
		
		
		
		bCycle := FALSE;
	end;		
	
End;

SCRIPT ReadPadLoop2;
VAR
vTrain		:	vec3d;
bCycle		:	boolean;
BEGIN

	writeDebug('TRIANGLE - Glass_Marker');	
	
	bCycle := true;
	
		while bCycle do if IsPadButtonPressed(PAD_TRIANGLE) then
		begin				
			RunScript('Glass_Marker','Debug');
			bCycle := false;
		end;


End;

SCRIPT ReadPadLoop3;
VAR
bCycle		:	boolean;
sAreaName	:	string[32];
BEGIN
	writeDebug('CIRCLE - ???');
	bCycle := TRUE;
	while bCycle do if IsPadButtonPressed(PAD_CIRCLE) then
		begin						

			bCycle := FALSE;						
		end;
	
End;

SCRIPT OnPlayerEnterArea;
BEGIN
	
	if (GetPlayerAreaName <> 'ainull') then 
	begin
		runscript('player','HideGodTXT');
		removethisscript;
	end;
	
End;


SCRIPT IntroCutscene;
VAR
playerGoto	: Vec3D;

BEGIN
CutSceneStart;

AISetEntityIdleOverRide('HUNTER01',TRUE,TRUE);
AISetEntityIdleOverRide('HUNTER05',TRUE,TRUE);
AISetEntityIdleOverRide('HUNTER08',TRUE,TRUE);

PlaySplineFile('FOLLOW01',6,TRUE,TRUE,FALSE);
PlaySplineFile('LOOKAT01',6,TRUE,FALSE,FALSE);

SetDoorOpenAngleIn(Gatea,100);
SetDoorOpenAngleOut(Gatea,100);
SetDoorOpenAngleIn(Gateb,100);
SetDoorOpenAngleOut(Gateb,100);

SetPlayerControllable(TRUE);

SetVector(playerGoto, 54.0,-0.2,15.0);  
SetPlayerGotoNode('playerenter', playerGoto, TRUE);

sleep(500);

PlayDirectorSpeech(GetCameraPosition,AISPEECH_D1V1_MUR_WEASEL_START,-1,-1);

WHILE IsSplinePlaying DO sleep(1);

PlaySplineFile('FOLLOW01',9,TRUE,TRUE,FALSE);
PlaySplineFile('LOOKAT02',9,TRUE,FALSE,FALSE);

AICutSceneEntityEnable('HUNTER01',TRUE);
AICutSceneEntityEnable('HUNTER08',TRUE);

AIMakeEntityBlind('HUNTER01',10);

AISetEntityIdleOverRide('HUNTER01',FALSE,FALSE);
AISetEntityIdleOverRide('HUNTER05',FALSE,FALSE);
AISetEntityIdleOverRide('HUNTER08',FALSE,FALSE);

sleep(6000);

AIAddGoalForSubPack('LEADER','Warehouse','goalINTROWALK');

sleep(2000);

RunScript('ASY_Garage_Button_(S)','CloseDoor');

sleep(1000);

moveEntity(GetPlayer,vPlayerPos,0);
SetPlayerHeading(60);

WHILE IsSplinePlaying DO sleep(1);

LockEntity(Gatea);
LockEntity(Gateb);
GraphModifyConnections(Gatea, AISCRIPT_GRAPHLINK_ALLOW_NOTHING);
	
SetPlayerControllable(FALSE);
HandCamSetActive(FALSE);

cutscene	:= FALSE;

CutSceneEnd(FALSE);

scriptHogProcessorStart;
if NOT AIIsGoalNameInSubpack('LEADER','Warehouse','goalHIDE') 
	then AIAddGoalForSubPack('LEADER','Warehouse','goalHIDE');
scriptHogProcessorEnd;

runscript('player','Timer');

END;


{HEALTH SPAWN SCRIPTS}
SCRIPT Health1;
VAR
spawn	:	Vec3D;
new		:	integer;

BEGIN
sleep(HTimer);
new	:=Randnum(6)+1;

WHILE ( (new = H1Pos) OR (new = H2Pos) OR (new = H3Pos) OR (new = H4Pos) ) DO 
	new :=Randnum(6)+1;
	
H1Pos:=new;

CASE H1Pos OF
1:SetVector(spawn,57.8,0.3,14.0);
2:SetVector(spawn,97.7,0.4,17.0);
3:SetVector(spawn,42.5,12.4,40.8);
4:SetVector(spawn,86.6,12.8,64.4);
5:SetVector(spawn,86.2,0.5,83.5);
6:SetVector(spawn,28.0,0.3,47.0);
END;{case}

if (NIL <> GetEntity('Health1')) then SpawnMovingEntity('G_First_Aid_(CT)',spawn,'Health1');
WriteDebug('Health1 spawned at Position ',H1Pos);
END;

SCRIPT Health2;
VAR
spawn	:	Vec3D;
new		:	integer;

BEGIN
sleep(HTimer);
new	:=Randnum(6)+1;

WHILE ( (new = H1Pos) OR (new = H2Pos) OR (new = H3Pos) OR (new = H4Pos) ) DO 
	new :=Randnum(6)+1;
	
H2Pos:=new;

CASE H2Pos OF
1:SetVector(spawn,57.8,0.3,14.0);
2:SetVector(spawn,97.7,0.4,17.0);
3:SetVector(spawn,42.5,12.4,40.8);
4:SetVector(spawn,86.6,12.8,64.4);
5:SetVector(spawn,86.2,0.5,83.5);
6:SetVector(spawn,28.0,0.3,47.0);
END;{case}

if (NIL <> GetEntity('Health2')) then SpawnMovingEntity('G_First_Aid_(CT)',spawn,'Health2');
WriteDebug('Health2 spawned at Position ',H2Pos);
END;

SCRIPT Health3;
VAR
spawn	:	Vec3D;
new		:	integer;

BEGIN
sleep(HTimer);
new	:=Randnum(6)+1;

WHILE ( (new = H1Pos) OR (new = H2Pos) OR (new = H3Pos) OR (new = H4Pos) ) DO 
	new :=Randnum(6)+1;
	
H3Pos:=new;

CASE H3Pos OF
1:SetVector(spawn,57.8,0.3,14.0);
2:SetVector(spawn,97.7,0.4,17.0);
3:SetVector(spawn,42.5,12.4,40.8);
4:SetVector(spawn,86.6,12.8,64.4);
5:SetVector(spawn,86.2,0.5,83.5);
6:SetVector(spawn,28.0,0.3,47.0);
END;{case}

if (NIL <> GetEntity('Health3')) then SpawnMovingEntity('G_First_Aid_(CT)',spawn,'Health3');
WriteDebug('Health3 spawned at Position ',H3Pos);
END;

SCRIPT Health4;
VAR
spawn	:	Vec3D;
new		:	integer;

BEGIN
sleep(HTimer);
new	:=Randnum(6)+1;

WHILE ( (new = H1Pos) OR (new = H2Pos) OR (new = H3Pos) OR (new = H4Pos) ) DO 
	new :=Randnum(6)+1;

H4Pos:=new;

CASE H4Pos OF
1:SetVector(spawn,57.8,0.3,14.0);
2:SetVector(spawn,97.7,0.4,17.0);
3:SetVector(spawn,42.5,12.4,40.8);
4:SetVector(spawn,86.6,12.8,64.4);
5:SetVector(spawn,86.2,0.5,83.5);
6:SetVector(spawn,28.0,0.3,47.0);
END;{case}

if (NIL <> GetEntity('Health4')) then SpawnMovingEntity('G_First_Aid_(CT)',spawn,'Health4');
WriteDebug('Health4 spawned at Position ',H4Pos);

END;

SCRIPT KillGod;
BEGIN

KillEntity(GetEntity('GOD1'));
KillEntity(GetEntity('GOD2'));
KillEntity(GetEntity('GOD3'));
KillEntity(GetEntity('GOD4'));
END;


SCRIPT Window_Broken;
BEGIN
	
	if NOT AIIsEnemyInSight('LEADER', 'player',AISCRIPT_HIGHPRIORITY) then sleep(5000);

	if NOT level_bIsSmashingWindow then GraphModifyConnections(GetEntity('Glass_Marker'), AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING)
	else 
	begin
		while level_bIsSmashingWindow do sleep(1000);
		RemoveScript('Glass_Marker','OnEnterTrigger');
		GraphModifyConnections(GetEntity('Glass_Marker'), AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING);
	end;
	
End;   

SCRIPT Window2_Broken;
BEGIN	
	if NOT AIIsEnemyInSight('LEADER', 'player',AISCRIPT_HIGHPRIORITY) then sleep(5000);

	if NOT level_bIsSmashingWindow then GraphModifyConnections(GetEntity('Glass_Marker2'), AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING)
	else 
	begin
		while level_bIsSmashingWindow do sleep(1000);
		RemoveScript('Glass_Marker2','OnEnterTrigger');
		GraphModifyConnections(GetEntity('Glass_Marker2'), AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING);
	end;
End;   

SCRIPT Timer;
BEGIN
	SetTimer(10,0);
	ShowTimer;
	StartTimer;
End;

SCRIPT OnTimerEnded;
BEGIN
	SetLevelFailed;
End;

SCRIPT DeathCheck;
BEGIN
	
	writedebug('DeathChecking...');
	
	if ( 
	(AINumberInSubPack('LEADER','Warehouse') = 0) 
	AND	
	(AINumberInSubPack('LEADER','RoofTop') = 0) 
	AND	
	(AINumberInSubPack('LEADER','Street') = 0) 
	) then 
	begin
			runscript('player','EndLevel');			
			killthisscript;
	end;	
		
	if( 
	(AINumberInSubPack('LEADER','Warehouse') = 0)  
	AND
	(NOT bW_CLEAN) 
	)then
	begin
		
		bW_CLEAN := TRUE;	
		writedebug('Warehouse EMPTY');
		ClearLevelGoal('W_FULL');
		ClearLevelGoal('WS_FULL');
		ClearLevelGoal('RW_FULL');	

		if( 
		bW_CLEAN
		AND
		bR_CLEAN
		AND
		bS_CLEAN
		) then
		begin			
			writedebug('ALL CLEAN FLAGS ARE TRUE!!!');
			runscript('player','EndLevel');			
			killthisscript;
		end;
		
		DisplayGameText('W_CLEAN');		
		RunScript('player','Save_Reload_Cut');
		sleep(5000);
		
		if (AINumberInSubPack('LEADER','RoofTop') > 0) then
		begin
			if (AINumberInSubPack('LEADER','Street') > 0) then
			begin
				DisplayGameText('RS_FULL');
				SetLevelGoal('RS_FULL');
				sleep(5000);
			end
			else
			begin
				DisplayGameText('R_FULL');
				SetLevelGoal('R_FULL');
				sleep(5000);
			end;
		end
		else if (AINumberInSubPack('LEADER','Street') > 0) then
		begin
			DisplayGameText('S_FULL');
			SetLevelGoal('S_FULL');
			sleep(5000);
		end;
	end		
	
	else	
	
	if( 
	(AINumberInSubPack('LEADER','RoofTop') = 0) 
	AND	
	(NOT bR_CLEAN)
	)then
	begin		
		
		bR_CLEAN := TRUE;
		writedebug('RoofTop EMPTY');
		ClearLevelGoal('R_FULL');
		ClearLevelGoal('RS_FULL');
		ClearLevelGoal('RW_FULL');
		
		if( 
		bW_CLEAN
		AND
		bR_CLEAN
		AND
		bS_CLEAN
		) then
		begin			
			writedebug('ALL CLEAN FLAGS ARE TRUE!!!');
			runscript('player','EndLevel');			
			killthisscript;
		end;
		
		DisplayGameText('R_CLEAN');			
		RunScript('player','Save_Reload_Cut');
		sleep(5000);
		
		if (AINumberInSubPack('LEADER','Warehouse') > 0) then
		begin
			if (AINumberInSubPack('LEADER','Street') > 0) then
			begin
				DisplayGameText('WS_FULL');
				SetLevelGoal('WS_FULL');
				sleep(5000);
			end
			else
			begin
				DisplayGameText('W_FULL');
				SetLevelGoal('W_FULL');
			end;
		end
		else if (AINumberInSubPack('LEADER','Street') > 0) then
		begin
			DisplayGameText('S_FULL');
			SetLevelGoal('S_FULL');
			sleep(5000);
		end;
		
	end
	
	else
	
	if( 
	(AINumberInSubPack('LEADER','Street') = 0) 
	AND	
	(NOT bS_CLEAN)
	)then
	begin
							
		bS_CLEAN := TRUE;
		writedebug('Street EMPTY');
		ClearLevelGoal('S_FULL');
		ClearLevelGoal('RS_FULL');
		ClearLevelGoal('WS_FULL');
		
		if( 
		bW_CLEAN
		AND
		bR_CLEAN
		AND
		bS_CLEAN
		) then
		begin			
			writedebug('ALL CLEAN FLAGS ARE TRUE!!!');
			runscript('player','EndLevel');			
			killthisscript;
		end;
		
		DisplayGameText('S_CLEAN');
		RunScript('player','Save_Reload_Cut');
		sleep(5000);
		
		if (AINumberInSubPack('LEADER','RoofTop') > 0) then
		begin
			if (AINumberInSubPack('LEADER','Warehouse') > 0) then
			begin
				DisplayGameText('RW_FULL');
				SetLevelGoal('RW_FULL');
				sleep(5000);
			end
			else
			begin
				DisplayGameText('R_FULL');
				SetLevelGoal('R_FULL');
			end;
		end
		else if (AINumberInSubPack('LEADER','Warehouse') > 0) then
		begin
			DisplayGameText('W_FULL');
			SetLevelGoal('W_FULL');
			sleep(5000);
		end;
	end;
	
End;

SCRIPT GenerateSavePoint;
VAR
save	: EntityPtr;
BEGIN

	If (GetEntity('Gen_Save_Point01') <> NIL) then KillThisScript
	else
	begin	
		save :=SpawnMovingEntity('Gen_Save_Point',savepos,'Gen_Save_Point01');
		SetTriggerType(save, TRIGGER_SPHERE);
		SetTriggerRadius(save, 1.5);		
	end;
	


End;
{
SCRIPT Save_Reload_Cut;
VAR
vCam	: vec3d;
BEGIN

	CutSceneStart;
	
	DisableUserInput;
	ClearInputStates;
	
	If (NOT bReload) then RunScript('player','GenerateSavePoint');
	
	SetVector(vCam,56.28,5.66,24.9);
	SetCameraPosition(vCam);
	SetVector(vCam,-0.33,-0.36,-0.86);
	SetCameraView(vCam);
		
	sleep(5000);
	
	CutSceneEnd(FALSE);
	
	if bReload then bReload := FALSE;
	
	ClearInputStates;
	EnableUserInput;	
	
	
END;
}

SCRIPT HideGodTXT;
BEGIN
	while isGameTextDisplaying do sleep(1000);
	DisplayGameText('HIDE');
	removethisscript;
End;

SCRIPT EndLevel;
VAR
vVec : Vec3D;

BEGIN
StopTimer;
HideTimer;

sleep(2000);

CutSceneStart;

PlayDirectorSpeech(GetCameraPosition,AISPEECH_D1V1_MUR_EXTERMINATED_HOODS,-1,-1);

ClearAllLevelGoals;
SetLevelGoal('GOAL2');

{UnlockEntity(GetEntity('CJ_GATE_L_(D)01'));
UnlockEntity(GetEntity('CJ_GATE_R_(D)01'));}

SetVector(vVec,83.0,6.6,87.8);
SetCameraPosition(vVec);

SetVector(vVec,-0.5,-0.5,0.7);
SetCameraView(vVec);

SetVector(vVec,80.2,1.0,97.10);
CreateSphereTrigger(vVec,3.0,'EndOfLevel');

IF (NIL <> GetEntity('Dynamic_light1_(L)')) then SwitchLightOn(GetEntity('Dynamic_light1_(L)'));

sleep(4000);

CutSceneEnd(FALSE);

END;


END.