SCRIPTMAIN PlayerScript;

ENTITY
player	:	et_name;

VAR
flag_cutscene_played_guard		: level_var integer;
flag_hunter_tower_dead			: level_var integer;
willie_game_int					: game_var integer;
willie_game_int2				: game_var integer;
vPoz							: vec3d;
Vstart							: Vec3D;
Vend							: Vec3D;
flag_level_goals				: level_var integer;
flag_player_carrying_gas_can 	: level_var integer;

SCRIPT OnCreate;
begin

	LoadScriptAudioSlot(0,SFX_SCRIPT_SLOT_TOGGLE_ELECTRO); {Switch noise for electro chair}
	
	if (GetPlayerAreaName = 'aiward') then
	begin
		LoadScriptAudioSlot(1,SFX_SCRIPT_SLOT_TRAMP_BUZZER);	
	end
	else
	begin
		LoadScriptAudioSlot(1,SFX_SCRIPT_SLOT_WALL_FALL);
	end;
		
	{cutscene simon edit}
	IF GetPlayerLevelRestarts = 0 THEN RunScript('player','IntroCutscene')
	ELSE
	begin
		if (IsEntityAlive('Hunter1_Tower')) then
		begin
			if not (AIIsGoalNameInSubpack('LEADER','Subpack_Building_Roof','GoalGuardRamp')) then
			begin
				AIAddGoalForSubpack('LEADER','Subpack_Building_Roof','GoalGuardRamp');
			end;
		
		end;
		
		if (IsEntityAlive('WORKSHOPHUNTER')) then
		begin
		
			CutSceneStart;
												
			if (IsEntityAlive('WORKSHOPHUNTER')) then
	    	begin
	    		AICutSceneEntityEnable('WORKSHOPHUNTER',TRUE);
	    		AISetEntityIdleOverRide('WORKSHOPHUNTER',FALSE,FALSE);
	   		end;
		
			SetVector(vPoz,130.1,1.9,-96.4);
			SetCameraPosition(vPoz);
		
			SetVector(vPoz,-0.2,0.1,-1.0);
			SetCameraView(vPoz);
			
			if (IsEntityAlive('player')) then
			begin
				PlayDirectorSpeech(GetEntityPosition(GetPlayer),AISPEECH_D1V1_MTH_MEET_FUG,-1,-1);
			end;
			
			Sleep(100);
						
			WHILE (IsDirectorSpeechPlaying) DO Sleep(1000);
			
			Sleep(500);
			
			if (IsEntityAlive('WORKSHOPHUNTER')) then
	    	begin
	    		AISetEntityIdleOverRide('WORKSHOPHUNTER',TRUE,TRUE);
	   		end;
						
			CutSceneEnd(FALSE);
						
		end;
		
	end;
		
	if (NIL = GetEntity('Gen_Save_Point01')) then
	begin
		RemoveScript('player','aisearchlight');
	end;

	if (NIL = GetEntity('Gen_Save_Point')) then
	begin
		RemoveScript('player','aitower');
		RemoveScript('player','aigreenhouse');
		RemoveScript('player','aisearchlight');
	end;
		
	if (GetPlayerAreaName = 'aiward') then
	begin
		flag_level_goals := 0;	
	end;

	if (GetPlayerAreaName = 'aigreenhouse') then
	begin
		if (willie_game_int2 = 2) then
		begin
			flag_level_goals := 3;
		end
		else
		begin
			flag_level_goals := 2;
		end;
			
	end;

	if (GetPlayerAreaName = 'aitowerLeft') then
	begin
		flag_level_goals := 3;	
	end;
		
	RunScript('player','LevelGoalScript');
	
	WHILE (NOT IsScriptAudioSlotLoaded(0)) DO Sleep(200);
	
	WHILE (NOT IsScriptAudioSlotLoaded(1)) DO Sleep(200);
	
	WriteDebug('Both Audio slots should now be loaded');
	
end;

{NEW CUTSCENE 24/06/03}
SCRIPT IntroCutscene;
VAR
direction	: Vec3D;

BEGIN

CutSceneStart;

HandCamSetActive(TRUE);

if (IsEntityAlive('player')) then
begin
	PlayDirectorSpeech(GetEntityPosition(GetPlayer),AISPEECH_D1V1_MTH_ASYLUM_START,-1,-1);
end;

PlaySplineFile('TOWERWALKF',8.0,TRUE,TRUE,FALSE);
PlaySplineFile('TOWERWALKL',8.0,TRUE,FALSE,FALSE);

AICutSceneEntityEnable('Hunter1_Tower', TRUE);
AICutSceneEntityEnable('Hunter5_Build', TRUE);
AICutSceneEntityEnable('Hunter2_Build', TRUE);

SetVector(direction,-0.5,0.2,-0.7);
AIDefineGoalGuardDirection('goalCutwait',AISCRIPT_HIGHPRIORITY,'cutwait',0,0,1,direction);
AIDefineGoalGotoNode('goalGoHome','Hunter1_Tower',AISCRIPT_VERYHIGHPRIORITY,'Hunter1_Tower_Home',AISCRIPT_WALKMOVESPEED,FALSE);
AIAddgoalForSubpack('LEADER','Subpack_Building_Roof','goalCutwait');

if (IsEntityAlive('Hunter1_Tower')) then
begin
	AISetIdleHomeNode('Hunter1_Tower','cutwait');
end;

AIDefineGoalGotoNode('goalMoveAway1','Hunter5_Build',AISCRIPT_VERYHIGHPRIORITY,'Hunter5_Build_Home',AISCRIPT_WALKMOVESPEED,FALSE);
AIAddgoalForSubpack('LEADER','Subpack_Building_Roof','goalMoveAway1');

AIDefineGoalGotoNode('goalMoveAway2','Hunter2_Build',AISCRIPT_VERYHIGHPRIORITY,'Hunter2_Build_Home',AISCRIPT_WALKMOVESPEED,FALSE);
AIAddgoalForSubpack('LEADER','Subpack_Building_Roof','goalMoveAway2');

WHILE IsSplinePlaying DO sleep(1);

PlaySplineFile('TOWERSTILLF',7.0,TRUE,TRUE,FALSE);
PlaySplineFile('TOWERSTILLL',7.0,TRUE,FALSE,FALSE);

sleep(5000);
AIAddgoalForSubpack('LEADER','Subpack_Building_Roof','goalGoHome');
AIRemovegoalFromSubpack('LEADER','Subpack_Building_Roof','goalCutwait');

if (IsEntityAlive('Hunter1_Tower')) then
begin
	AISetIdleHomeNode('Hunter1_Tower','Hunter1_Tower_Home');
end;

WHILE IsSplinePlaying DO sleep(1);

SetZoomLerp(1.0,0.5,2);

PlaySplineFile('TOWERRUNF',7.0,TRUE,TRUE,FALSE);
PlaySplineFile('TOWERRUNL',7.0,TRUE,FALSE,FALSE);

WHILE IsSplinePlaying DO sleep(1);

PlaySplineFile('GUARDDOORSF',2.0,TRUE,TRUE,FALSE);
PlaySplineFile('GUARDDOORSL',2.0,TRUE,FALSE,FALSE);

WHILE IsSplinePlaying DO sleep(1);

HandCamSetActive(FALSE);

AIRemovegoalFromSubpack('LEADER','Subpack_Building_Roof','goalGoHome');
AIRemovegoalFromSubpack('LEADER','Subpack_Building_Roof','goalMoveAway1');
AIRemovegoalFromSubpack('LEADER','Subpack_Building_Roof','goalMoveAway2');

if (IsEntityAlive('Hunter1_Tower')) then
begin
	if not (AIIsGoalNameInSubpack('LEADER','Subpack_Building_Roof','GoalGuardRamp')) then
	begin
		AIAddGoalForSubpack('LEADER','Subpack_Building_Roof','GoalGuardRamp');
	end;
		
end;
		
	AIClearAllActiveAreaAssociations;
	AIAssociateThreeActiveAreasWithPlayerArea('aiWard','aiSearchlight','aiWard2','aiSearchStairs');
	AIAssociateThreeActiveAreasWithPlayerArea('aiSearchlight','aiWard','aiWard2','aiSearchStairs');
	AIAssociateThreeActiveAreasWithPlayerArea('aiWard2','aiWard','aiSearchlight','aiSearchStairs');
	AIAssociateThreeActiveAreasWithPlayerArea('aiSearchStairs','aiWard2','aiWard','aiSearchlight');
	AIAssociateThreeActiveAreasWithPlayerArea('aiTower','aiGreenhouse','aiTowerLeft','aiRoof');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiGreenhouse','aiSearchlight','aiTower','aiTowerLeft','aiSearchStairs');		
	AIAssociateFourActiveAreasWithPlayerArea('aiTowerLeft','aiGreenhouse','aiBuildingArea1','aiTower','aiRoof');
	AIAssociateFourActiveAreasWithPlayerArea('aiBuildingArea1','aiTowerLeft','aiTower','aiBuildingArea4','aiBuildingArea3');
	AIAssociateFourActiveAreasWithPlayerArea('aiBuildingArea3','aiTower','aiRoof','aiBuildingArea1','aiBuildingArea4');
	AIAssociateFourActiveAreasWithPlayerArea('aiBuildingArea4','aiTower','aiRoof','aiBuildingArea1','aiBuildingArea3');
	AIAssociateFourActiveAreasWithPlayerArea('aiRoof','aiTower','aiBuildingArea1','aiBuildingArea3','aiBuildingArea4');
	
	if (IsEntityAlive('WORKSHOPHUNTER')) then
	begin
		CutSceneStart;
												
		if (IsEntityAlive('WORKSHOPHUNTER')) then
	    begin
	    	AICutSceneEntityEnable('WORKSHOPHUNTER',TRUE);
	    	AISetEntityIdleOverRide('WORKSHOPHUNTER',FALSE,FALSE);
	   	end;
		
		SetVector(vPoz,130.1,1.9,-96.4);
		SetCameraPosition(vPoz);
		
		SetVector(vPoz,-0.2,0.1,-1.0);
		SetCameraView(vPoz);
						
		if (IsEntityAlive('player')) then
		begin
			PlayDirectorSpeech(GetEntityPosition(GetPlayer),AISPEECH_D1V1_MTH_MEET_FUG,-1,-1);
		end;
		
		Sleep(100);
		
		WHILE (IsDirectorSpeechPlaying) DO Sleep(1000);
		
		Sleep(500);
				
		if (IsEntityAlive('WORKSHOPHUNTER')) then
	    begin
	    	AISetEntityIdleOverRide('WORKSHOPHUNTER',TRUE,TRUE);
	   	end;
						
		CutSceneEnd(FALSE);
	end;
		
	CutSceneEnd(FALSE);
	
END;

SCRIPT OnPlayerEnterArea;
begin
	RunScript('player',GetPlayerAreaName);
end;

{level goal script}
SCRIPT LevelGoalScript;
begin

	if (flag_level_goals = 0) then
	begin
		SetLevelGoal('GOAL1');
	end;
	
	if (flag_level_goals = 1) then
	begin
		ClearLevelGoal('GOAL1');
		SetLevelGoal('GOAL2');
	end;
	
	if (flag_level_goals = 2) then
	begin
		ClearLevelGoal('GOAL2');
		SetLevelGoal('GOAL3');
	end;
	
	if (flag_level_goals = 3) then
	begin
		ClearLevelGoal('GOAL3');
		SetLevelGoal('GOAL4');
	end;

end;

{Checks to see if the player has been in the tower before and gives bricked up door message}	
SCRIPT aitower;
begin
	WHILE(
	(AINumberInSubpack('LEADER','Subpack_Greenhouse') > 0)
	OR 
	(AINumberInSubpack('LEADER','Subpack_Greenhouse2') > 0) 
	)DO 
		BEGIN
		Sleep(1000);
		WriteDebug('Number in greenhouse ',AINumberInSubpack('LEADER','Subpack_Greenhouse'));
		WriteDebug('Number in greenhouse 2 ',AINumberInSubpack('LEADER','Subpack_Greenhouse2'));
		END;
		
	WHILE (GetPlayerAreaName <> 'aitower') DO Sleep(1000);
	
	if (willie_game_int2 = 0) then
	begin
		if (NIL <> GetEntity('Gen_Save_Point')) then
		begin
		
			Sleep(1500);
		
			CutSceneStart;
					
			SetVector(vPoz,126.2,5.1,-23.3);
			SetCameraPosition(vPoz);
		
			SetVector(vPoz,-0.2,-0.2,-1.0);
			SetCameraView(vPoz);
						
			if (IsEntityAlive('player')) then
			begin
				PlayDirectorSpeech(GetEntityPosition(GetPlayer),AISPEECH_D1V1_MTH_BRICKED_UP,-1,-1);
			end;
							
			SetZoomLerp(1.0,0.5,5);
			
			Sleep(100);
			
			WHILE (IsDirectorSpeechPlaying) DO Sleep(1000);
			
			Sleep(1000);
						
			CutSceneEnd(FALSE);
					
			RemoveScript('player','aitower');
		end;
		
	end;
			
end;

SCRIPT aitowerleft;
begin
	
	if (NIL <> GetEntity('Gen_Save_Point')) then
	begin
		SetTriggerRadius(GetEntity('Gen_Save_Point'), 20.0);
		RemoveThisScript;
	end;
		
end;

{Removes the checks for the Searchlight door closing}	
SCRIPT aigreenhouse;
begin
	{if (IsEntityAlive('Hunter1_Search')) then
	begin
		RemoveScript('Hunter1_Search','OnMediumSightingOrAbove');
		RemoveScript('Hunter1_Search','OnHighHearingOrAbove');
		WriteDebug('Searchlight door will no longer close');
	end;
		
	if (IsEntityAlive('Hunter2_Search')) then
	begin
		RemoveScript('Hunter2_Search','OnMediumSightingOrAbove');
		RemoveScript('Hunter2_Search','OnHighHearingOrAbove');
		WriteDebug('Searchlight door will no longer close');
	end;
		
	if (IsEntityAlive('Hunter3_Search')) then
	begin
		RemoveScript('Hunter3_Search','OnMediumSightingOrAbove');
		RemoveScript('Hunter3_Search','OnHighHearingOrAbove');
		WriteDebug('Searchlight door will no longer close');
	end;
		
	if (IsEntityAlive('Hunter4_Search')) then
	begin
		RemoveScript('Hunter4_Search','OnMediumSightingOrAbove');
		RemoveScript('Hunter4_Search','OnHighHearingOrAbove');
		WriteDebug('Searchlight door will no longer close');
	end;}
		
	RunScript('player','checkammo');
	WriteDebug('checking for player ammo');
		
	flag_level_goals := 2;
	RunScript('player','LevelGoalScript');
	
	if (NIL <> GetEntity('Gas_Can')) then
	begin
		RadarPositionSetEntity(GetEntity('Gas_Can'),MAP_COLOR_GREEN);
	end;
		
	if (willie_game_int2 <> 2) then
	begin
		LoadScriptAudioSlot(1,SFX_SCRIPT_SLOT_WALL_FALL);
		
		WHILE (NOT IsScriptAudioSlotLoaded(1)) DO Sleep(200); 
	end;
	
	RemoveScript('player','aigreenhouse');
		
end;

{Script that changes player goals}
SCRIPT aisearchlight;
begin
	flag_level_goals := 1;
	RunScript('player','LevelGoalScript');
	
	While (IsDirectorSpeechPlaying) Do Sleep(300);
	
	While (IsHunterSpeechPlaying)Do Sleep(300);
	
	if (IsEntityAlive('player')) then
	begin
		PlayDirectorSpeech(GetEntityPosition(GetPlayer),AISPEECH_D1V1_MTH_GREENHOUSE,-1,-1);
	end;
	
	Sleep(100);
				
	WHILE (IsDirectorSpeechPlaying) DO Sleep(300);
		
	RemoveScript('player','aisearchlight');
end;
	
{Trigger to check to see if the guy is dead, if so it creates the trigger}	
SCRIPT airoof;
begin

	RunScript('player','TOWERGUARD');

	if (flag_hunter_tower_dead >= 1) then
	begin
		if (NIL = GetEntity('LevelEndTrigger1')) then
		begin
			SetVector(Vstart,155.1,13.9,-51.0);
			SetVector(Vend,163.5,43.9,-66.5); {OLD VALUES 158.9,18.9,-56.6)}
			CreateBoxTrigger(Vstart,Vend,'LevelEndTrigger1');
			WriteDebug('end of level trigger created');
			RemoveThisScript;
		end;
		
	end;	
		
end;

SCRIPT TOWERGUARD;
begin
	if (IsEntityAlive('Hunter1_Tower')) then
	begin
		SetEntityInvulnerable(GetEntity('Hunter1_Tower'),FALSE);
		WriteDebug('TOWER GUARD IS KILLABLE');
		RemoveThisScript;
	end;
end;
		
{Script the checks to see what is in the players inventry and if the correct head is the level ends.}
SCRIPT OnPickUpInventoryItem;
VAR
hunter_head	: entityptr;
	
begin

	ScriptHogProcessorStart;

	hunter_head := GetEntity('Hunter1_Tower_h');
		
	if(nil <> hunter_head) then
	begin
		if IsItemInInventory(GetPlayer,hunter_head) then
		begin
			willie_game_int := 1;
		    WriteDebug('player has hunters head' ,willie_game_int);
		end
		else
		begin
			willie_game_int := 0;
		    WriteDebug('player has hunters head' ,willie_game_int);
		end;
		   		   
	end
	else
		WriteDebug('hunter head does not exsist');
		
	ScriptHogProcessorEnd;
	
end;

SCRIPT OnDropInventoryItem;
VAR
hunter_head	: entityptr;
	
begin

	ScriptHogProcessorStart;

	hunter_head := GetEntity('Hunter1_Tower_h');
		
	if(nil <> hunter_head) then
	begin
		if IsItemInInventory(GetPlayer,hunter_head) then
		begin
			willie_game_int := 1;
		    WriteDebug('player has hunters head' ,willie_game_int);
		end
		else
		begin
			willie_game_int := 0;
		    WriteDebug('player has hunters head' ,willie_game_int);
		end;
		   		   
	end
	else
		WriteDebug('hunter head does not exsist');
		
	ScriptHogProcessorEnd;	
	
end;

{Script that checks if the player has any ammo for the pistol}		
SCRIPT checkammo;
begin
	writedebug('running check ammo script');
	if (NIL <> GetEntity('Gen_Save_Point')) then
	begin
		WriteDebug('save point exsists'); 
		
		WHILE TRUE DO
		begin
			if (nil = GetEntity('SpawningPistol')) then
			begin
				WriteDebug('player has used ammo box');
				if (willie_game_int2 < 2) then
				begin
					WriteDebug('Player has destroyed door and used switch');
					if (InventoryWeaponGetAmmoAmount(GetPlayer,CT_6SHOOTER) <= 0) then
					begin
						WriteDebug('player has no ammo in 6 shooter');
						if (InventoryWeaponGetReserveAmmoAmount(GetPlayer,CT_6SHOOTER) <= 0) then
						begin
							WriteDebug('Player has no reserve ammo for gun');
							Sleep(5000);
							SetVector(vPoz,107.5,0.8,-39.9);
							SpawnMovingEntity('6Shooter_(CT)',vPoz,'SpawningPistol');
							WriteDebug('Pistol ammo has been spawned');
						end;
			
					end;
		
				end;
	    		sleep(5000);
	        
			end;
		
		end;
				
	end
	else
	begin
		RemoveScript('player','aibuildingarea1');
		WriteDebug('Removing the building area1 script');
		RemoveScript('player','checkammo');
		WriteDebug('removing the checkammo script');
	end;
		
end;

{Removes the ammo checks if the player has entered the building}
SCRIPT aibuildingarea1;
begin
	RemoveScript('player','checkammo');
	WriteDebug('Ammo spawn script is now disabled');
end;
	
END. {End of file}  