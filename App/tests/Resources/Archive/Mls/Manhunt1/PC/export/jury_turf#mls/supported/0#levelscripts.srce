 {trace off 			}
{Program Description}

SCRIPTMAIN LevelScripts;

ENTITY
	Jury_Turf	:	et_level; 

{----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------}

VAR

	pickedup : integer;
	status : integer;
	hell : integer;
	thecarpark : integer;
	exeonce : integer;
	spotted : integer;
	shadows : integer;
	proper : integer;
	cower : boolean;
			
PROCEDURE HudFlashStamina;
BEGIN

	HUDToggleFlashFlags(HUD_STAMINA, TRUE);
	Sleep(7000);
	HUDToggleFlashFlags(HUD_STAMINA, FALSE);
	
END;

SCRIPT	OnCreate;

VAR

	SetCurrent : boolean;
	pDoor : EntityPtr;
	boxA  : vec3d;
	boxB  : vec3d;
	pDoorCR : EntityPtr;
	Vman  : vec3d;
			
BEGIN
	
	cower := FALSE;
	
	AIClearAllActiveAreaAssociations;
		
	SetMaxNumberOfRats(4);
	
	SetNumberOfKillableHuntersInLevel(7,7);
	
	AIAssociateOneActiveAreaWithPlayerArea('aiArena','aiStairs');	
	AIAssociateOneActiveAreaWithPlayerArea('aiStart','aiStairs');
	AIAssociateOneActiveAreaWithPlayerArea('aiCarPark','aiCarPark2');	
	AIAssociateOneActiveAreaWithPlayerArea('aiCarPark2','aiCarPark');	
	AIAssociateOneActiveAreaWithPlayerArea('aiStart','aiStairs');
	
	AIAssociateOneActiveAreaWithPlayerArea('aiEnd','aiEnd2');	
	AIAssociateOneActiveAreaWithPlayerArea('aiEnd2','aiEnd');
	
	AIAssociateOneActiveAreaWithPlayerArea('aiStart','aiCarPark');
	AIAssociateOneActiveAreaWithPlayerArea('aiStart','aiCarPark2');
					
	AIAddPlayer('player');
	
	AIDefineGoalGotoNodeIdle('gAttak1','EVERYONE',AISCRIPT_HIGHPRIORITY,'attak1',AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNodeIdle('gWilson','EVERYONE',AISCRIPT_LOWPRIORITY,'wilson',AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNodeIdle('gBackUp','EVERYONE',AISCRIPT_HIGHPRIORITY,'backup',AISCRIPT_RUNMOVESPEED,TRUE);

	AIDefineGoalGotoNodeIdle('gWill','EVERYONE',AISCRIPT_HIGHPRIORITY,'wilson1',AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNodeIdle('gMid','EVERYONE',AISCRIPT_HIGHPRIORITY,'arenamid',AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNodeIdle('gLatest','EVERYONE',AISCRIPT_HIGHPRIORITY,'latest',AISCRIPT_RUNMOVESPEED,TRUE);
	
	AIDefineGoalHuntEnemy('gHunt', 'player', TRUE, 16);

	SetVector(Vman, -0.9, -0.3, -0.1);	
	AIDefineGoalGuardDirection('gKiller', AISCRIPT_HIGHPRIORITY, 'killer', 8, 25.0, 8, Vman);
	
	SetVector(Vman, 1.0, -0.1, 0.1);	
	AIDefineGoalGuardDirection('gExit', AISCRIPT_MEDIUMPRIORITY, 'WAYOUT', 0.1, 8.0, 8, Vman);

	SetVector(Vman, 1.0, 0.0, 0.0);	
	AIDefineGoalGuardDirection('gWait', AISCRIPT_HIGHPRIORITY, 'waiting', 0.1, 2.0, 8, Vman);
	
	SetVector(Vman, 1.0, 0.0,  0.1);	
	AIDefineGoalGuardDirection('gCuts', AISCRIPT_HIGHPRIORITY, 'cuts', 0.1, 2.0, 8, Vman);
	
	SetVector(Vman, 0.0, -0.1, -1.0);	
	AIDefineGoalGuardDirection('gSide', AISCRIPT_HIGHPRIORITY, 'sidedoor', 0.1, 4.0, 8, Vman);
			
	SetVector(Vman, -0.0, -0.2, -1.0);	
	AIDefineGoalGuardDirection('gDummy', AISCRIPT_HIGHPRIORITY, 'Dummy', 0.1, 12.0, 8, Vman);
	
	SetVector(Vman, -0.0, -0.2, -1.0);	
	AIDefineGoalGuardDirection('gCvg', AISCRIPT_HIGHPRIORITY, 'cvg', 0.1, 2.0, 8, Vman);
													
		AIAddEntity('hLeader');
		AISetLeaderInvisible('hLeader');
		AISetEntityAsLeader('hLeader');
		AIAddLeaderEnemy('hLeader', 'player');

		AIAddSubPackForLeader('hLeader','sCar');
		AIAddGoalForSubPack('hLeader','sCar','gHunt');
		
		AIAddSubPackForLeader('hLeader','sCar2');
		AIAddGoalForSubPack('hLeader','sCar2','gWilson');
		AIAddGoalForSubPack('hLeader','sCar2','gHunt');
						
		AIAddSubPackForLeader('hLeader','sBack');
		AIAddGoalForSubPack('hLeader','sBack','gHunt');
		AIAddGoalForSubPack('hLeader','sBack','gAttak1');
				
		AIAddSubPackForLeader('hLeader','sEnd');
		AIAddGoalForSubPack('hLeader','sEnd','gHunt');
				
		AIAddSubPackForLeader('hLeader','sSide');
		AIAddGoalForSubPack('hLeader','sSide','gSide');
						
		AIAddSubPackForLeader('hLeader','sExit');
		AIAddGoalForSubPack('hLeader','sExit','gExit');
																
		AIAddSubPackForLeader('hLeader','sKiller');
	{	AIAddGoalForSubPack('hLeader','sKiller','gKiller');}
		AIAddGoalForSubPack('hLeader','sKiller','gHunt');
																
		AIAddSubPackForLeader('hLeader','sCuts');
		AIAddGoalForSubPack('hLeader','sCuts','gLatest');
														
		AIAddSubPackForLeader('hLeader','sDummy');
		AIAddGoalForSubPack('hLeader','sDummy','gDummy');	
		AIAddGoalForSubPack('hLeader','sDummy','gHunt');
														
		AIAddSubPackForLeader('hLeader','sArena');
		AIAddGoalForSubPack('hLeader','sArena','gWait');
{		AIAddGoalForSubPack('hLeader','sArena','gHunt');}
			
		AIAddAreaForSubpack('sArena', 'aiArena');
		AISubpackStayInTerritory( 'hLeader', 'sArena', TRUE );

	{	AIAddAreaForSubpack('sCar2', 'aiCarPark2');
		AISubpackStayInTerritory( 'hLeader', 'sCar2', TRUE );
		AIAddAreaForSubpack('sCar', 'aiCarPark');}
							
	{	AIAddAreaForSubpack('sEnd', 'aiEnd2');}
																								
		AISetHunterOnRadar('hLeader', FALSE);
																			
		if GetEntity('hCarPark2') <> NIL then
		 begin

			AIAddEntity('hCarPark2');
			AISetHunterIdleActionMinMaxRadius('hCarPark2', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);			
			AISetHunterIdleActionMinMax('hCarPark2', AISCRIPT_IDLE_STANDSTILL, AISCRIPT_LOWPRIORITY,1,2);
 			AISetIdleHomeNode('hCarPark2', '');
			Sethunterhidehealth('hCarPark2', 0);
			
			pDoor := GetEntity('hCarPark2');
			SetPedSkinTextureID(pDoor,2);			
			
		if GetEntity('Gen_Save_Point02') <> NIL
		 then
			begin			
				aiMakeEntityBlind('hCarPark2', 0);
				aiMakeEntityDeaf('hCarPark2', 0);
			end;				
	    end;
	   
		if GetEntity('hCarPark1') <> NIL
		 then
			begin

			AIAddEntity('hCarPark1');
			AISetHunterIdleActionMinMaxRadius('hCarPark1', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);			
			AISetHunterIdleActionMinMax('hCarPark1', AISCRIPT_IDLE_STANDSTILL, AISCRIPT_LOWPRIORITY,1,2);
 			AISetIdleHomeNode('hCarPark1', '');
			Sethunterhidehealth('hCarPark1', 0);
			
			pDoor := GetEntity('hCarPark1');
			SetPedSkinTextureID(pDoor,0);
						
			if GetEntity('Gen_Save_Point02') <> NIL
			 then
				begin				
				aiMakeEntityBlind('hCarPark1', 0);
				aiMakeEntityDeaf('hCarPark1', 0);
			end;
					
	    end;	
	    
		RunScript('Jury_Turf', 'Expansion');	
					    				   
		if GetEntity('hPatrol') <> NIL then
		 begin

			AIAddEntity('hPatrol');
			AISetHunterIdleActionMinMaxRadius('hPatrol', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);			
			AISetHunterIdleActionMinMax('hPatrol', AISCRIPT_IDLE_STANDSTILL, AISCRIPT_LOWPRIORITY,1,2);
 			AISetIdleHomeNode('hPatrol', '');
			Sethunterhidehealth('hPatrol', 0);
			pDoor := GetEntity('hPatrol');
			SetPedSkinTextureID(pDoor,1);			
	   end;	
	   
		if GetEntity('hPatrol2') <> NIL then
		 begin

			AIAddEntity('hPatrol2');
	{		AISetHunterIdleActionMinMaxRadius('hPatrol2', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);			
			AISetHunterIdleActionMinMax('hPatrol2', AISCRIPT_IDLE_STANDSTILL, AISCRIPT_LOWPRIORITY,1,2);}
 			AISetIdleHomeNode('hPatrol2', '');
			Sethunterhidehealth('hPatrol2', 0);
	   end;	
	   	   	   
	   if GetEntity('hExit') <> NIL then
		 begin

			AIAddEntity('hExit');
			AISetIdleHomeNode('hExit', '');
			Sethunterhidehealth('hExit', 0);
			pDoor := GetEntity('hExit');
			SetPedSkinTextureID(pDoor,1);
						
	   end;	
  	      	
	   if GetEntity('hDummy') <> NIL then
		 begin		
		  
			AIAddEntity('hDummy');		
			AISetIdleHomeNode('hDummy', '');
			AISetHunterIdleActionMinMax('hDummy', AISCRIPT_IDLE_STANDSTILL, AISCRIPT_LOWPRIORITY,1,2);
			SetHunterRunTime('hDummy',20);
			Sethunterhidehealth('hDummy', 0);
			aiMakeEntityDeaf('hDummy', 0);	
			AISetHunterOnRadar('hDummy', TRUE);
			AIAddHunterToLeaderSubPack('hLeader','sDummy','hDummy');
		{	AISetSpeechTypes('hDummy', SPEECHTYPE_ALL, FALSE);}
						
			pDoor := GetEntity('hDummy');
			SetPedSkinTextureID(pDoor,0);
						
		end;
						
		if GetEntity('hBackAlley') <> NIL then
		 begin		
			AIAddEntity('hBackAlley');		
			AISetIdleHomeNode('hBackAlley', '');
			AISetHunterIdlePatrol('hBackAlley',AISCRIPT_IDLE_PATROL,AISCRIPT_MEDIUMPRIORITY,1000,5000,'AIPath03');
			AISetHunterIdleActionMinMax('hBackAlley', AISCRIPT_IDLE_STANDSTILL, AISCRIPT_LOWPRIORITY,1,2);
			AISetIdlePatrolStop('hBackAlley','attak1',4,TRUE);
			AISetIdlePatrolStop('hBackAlley','attak1',4,FALSE);	
			SetHunterRunTime('hBackAlley',2);
			Sethunterhidehealth('hBackAlley', 0);
			pDoor := GetEntity('hBackAlley');
			SetPedSkinTextureID(pDoor,1);
		
		end;
								
		if GetEntity('hArena') <> NIL then
		 begin		
		  
			AIAddEntity('hArena');		
			AISetIdleHomeNode('hArena', '');
			AIAddHunterToLeaderSubPack('hLeader','sArena','hArena');
	{		AISetHunterIdlePatrol('hArena',AISCRIPT_IDLE_PATROL,AISCRIPT_VERYHIGHPRIORITY,1000,5000,'AIPath01');}
			AICancelHunterIdleAction('hArena',AISCRIPT_IDLE_STANDSTILL);
{			AISetIdlePatrolStop('hArena','arena2',4,TRUE);
			AISetIdlePatrolStop('hArena','arena',4,TRUE);
			AISetIdlePatrolStop('hArena','arena',4,FALSE);	}					
			SetHunterRunTime('hArena',5);
			Sethunterhidehealth('hArena', 0);
			pDoor := GetEntity('hArena');
			SetPedSkinTextureID(pDoor,1);
			AISetHunterOnRadar('hArena', FALSE);
									
		end;

		pDoor := GetEntity('Gen_E_L_MeshGLeft_(D)06');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,135);
		SetDoorOpenAngleOut(pDoor,135);	
		
		if GetEntity('Gen_Save_Point02') <> NIL then
		 begin	
			pDoor := GetEntity('Gen_E_L_MeshGLeft_(D)06');		  						
			LockEntity(pDoor);	
		end;
		
		pDoor := GetEntity('Gen_E_L_MeshGLeft_(D)01');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,120);
		SetDoorOpenAngleOut(pDoor,91);	
				
		if GetEntity('Gen_Save_Point') <> NIL then
		 begin					
			pDoor := GetEntity('Gen_E_L_MeshGLeft_(D)01');
			ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));			
			UnFreezeEntity(pDoor);
			LockEntity(pDoor);	
		end;

		pDoor := GetEntity('Trigger01');	
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		
		if GetEntity('Gen_E_L_MeshGLeft_(D)08') <> NIL then
		 begin					
			pDoor := GetEntity('Gen_E_L_MeshGLeft_(D)08');
			UnFreezeEntity(pDoor);
			LockEntity(pDoor);	
		end;
		
		if GetEntity('Gen_E_L_MeshGLeft_(D)09') <> NIL then
		 begin					
			pDoor := GetEntity('Gen_E_L_MeshGLeft_(D)09');
			UnFreezeEntity(pDoor);
			SetDoorOpenAngleIn(pDoor,80);
			SetDoorOpenAngleOut(pDoor,90);				
			LockEntity(pDoor);	
		end;
				
		if GetEntity('Gen_Admin_(D)02') <> NIL then
		 begin					
			pDoor := GetEntity('Gen_Admin_(D)02');
			UnFreezeEntity(pDoor);
			LockEntity(pDoor);	
		end;
						
		pDoor := GetEntity('Gen_Admin_(D)01');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90);
		SetDoorOpenAngleOut(pDoor,90);		
						
		pDoor := GetEntity('Gen_Admin_(D)');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90);
		SetDoorOpenAngleOut(pDoor,90);		
										
		pDoor := GetEntity('JT_Gate_(D)');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90);
		SetDoorOpenAngleOut(pDoor,90);		
		LockEntity(pDoor);		
		
		pDoor := GetEntity('JT_Gate_(D)01');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90);
		SetDoorOpenAngleOut(pDoor,90);		
		LockEntity(pDoor);	
					
		pDoor:=GetEntity('CJ_JuryChute_(D)');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90);
		SetDoorOpenAngleOut(pDoor,92);		
		LockEntity(pDoor);	
		
	{	Showtriggers(TRUE);}
		
END;

SCRIPT Expansion;

VAR

	pDoorCR : entityptr;
	pDoor : entityptr;
	boxA  : vec3d;
	boxB  : vec3d;
	vecPos : vec3d;
	vecView : vec3d;

BEGIN
									
		SetGameTextTeleType(FALSE);
	
		SetGameTextBoxPosition(0.05, 0.05);
		
		SetGameTextDisplayTime(3000);
		
		SetGameTextBoxSize(0.40,0.40);

	    SetVector(boxA, 351.2,  0.8, -24.1);
	    SetVector(boxB, 326.3,  0.8, -71.2);
		CreateLineTrigger(boxA, boxB, 'Trigger_01' );		

	    SetVector(boxA, 390.2, -6.9, -66.7);
		CreateSphereTrigger( boxA, 1.5, 'Trigger_02');

	    SetVector(boxA, 389.9, -0.0, -45.3);
		CreateSphereTrigger( boxA, 1.5, 'Trigger_03');
		
	    SetVector(boxA, 392.8, -6.9, -68.4);
		CreateSphereTrigger( boxA, 6.0, 'Trigger_05');
		
	    SetVector(boxA, 373.3, -3.1, -84.9);
	    SetVector(boxB, 363.8, -3.1, -85.7);
		CreateLineTrigger(boxA, boxB, 'Trigger_06' );
		
	    SetVector(boxA, 418.2, 0.9, -62.7);
	    SetVector(boxB, 430.0, 1.3, -62.0);
		CreateLineTrigger(boxA, boxB, 'Trigger_10' );
		
	    SetVector(boxA, 395.2,  0.8, -23.1);
	    SetVector(boxB, 396.3,  0.9, -39.4);
		CreateLineTrigger(boxA, boxB, 'Trigger_07' );
				
		if GetEntity('Gen_Save_Point02') <> NIL then
		 begin
			  			
		    SetVector(boxA, 309.0, 0.3, -30.2);
			CreateSphereTrigger( boxA, 3.0, 'Rusty_Gate');
		
		end;
				
	    SetVector(boxA, 277.5, 7.5, -38.1);
		CreateSphereTrigger( boxA, 3.0, 'Rusty_Gate2');
	
		SetVector(boxA, 353.5, 1.0, -51.7);
	    CreateSphereTrigger( boxA, 1.0, 'Trigger_04');

		SetVector(boxA, 404.7,-3.4, -88.7);
	    CreateSphereTrigger( boxA, 2.0, 'Trigger_08');
	
		SetVector(boxA, 272.2, 1.0, -38.2);
	    CreateSphereTrigger( boxA, 2.0, 'Trigger_11');	    	    
	
		SetVector(boxA, 296.6, 7.2, -7.9);
	    CreateSphereTrigger( boxA, 2.0, 'Trigger_12');	    	    
	    
		SetVector(boxA, 404.8, -3.2, -81.6);
	    CreateSphereTrigger( boxA, 1.8, 'Trigger_13' );	 
		    	
		if GetEntity('Gen_Save_Point02') <> NIL then
		 begin
		  		
			SetVector(boxA, 369.0, -6.9, -69.8);
		    CreateSphereTrigger( boxA, 3.0, 'Trigger_14' );	
	
		end;
			     
		if GetEntity('Gen_Save_Point') <> NIL then
		 begin
		  		
			SetVector(boxA, 375.7, -7.9, -79.8);
		    CreateSphereTrigger( boxA, 4.0, 'Trigger_15' );	
			
		end;
		
		SetVector(boxA, 409.9, -3.1, -84.0);
	    CreateSphereTrigger( boxA, 4.0, 'Trigger_16' );	
	    	
	{    SetVector(boxA, 408.1,-3.4, -82.5);
	    SetVector(boxB, 407.7,-3.4, -82.5);
		CreateLineTrigger(boxA, boxB, 'Trigger_16' );	}	
		  		
	    SetVector(boxA, 285.5, 0.4, -25.2);
	    SetVector(boxB, 285.6, 0.4, -34.8);
		CreateLineTrigger(boxA, boxB, 'Trigger_17' );
			
		if GetEntity('Gen_Save_Point02') <> NIL then
		 begin	
		  
			SetVector(boxA, 369.0, 0.9, -51.7);
		    CreateSphereTrigger( boxA, 2.5, 'Trigger_18' );	
	
		end;
	
		SetVector(boxA, 389.9, 0.8, -42.2);
	    CreateSphereTrigger( boxA, 6.0, 'Trigger_19' );			
		
		if GetEntity('Gen_Save_Point02') = NIL then
		 begin	
		  
		if GetEntity('hCarPark2') <> NIL then
		 begin	
		  		  
			AIAddHunterToLeaderSubPack('hLeader','sCar','hCarPark2');
			
		end;
		
		if GetEntity('hCarPark1') <> NIL then
		 begin	
		  		
			AIAddHunterToLeaderSubPack('hLeader','sCar2','hCarPark1');
			
		end;
		
		end;	
				    	    	    	    	    																																						
		AIEntityAlwaysEnabled('hLeader');
		
	if GetEntity('Gen_Save_Point') <> NIL then
	 begin	
	 
	  		if GetPlayerLevelRestarts = 0 then
			 begin	
			 					  
				SetGameTextDisplayTime(14000);
		
				SetVector(boxA, 418.9, 4.2,-103.1);
				PlayDirectorSpeech( boxA, AISPEECH_D1V1_TRF_HOODS_LEVEL_START, 127, 255);
			    
		    	CutSceneStart;
		     	   
				AICutSceneEntityEnable('hCarPark1', TRUE);
				AICutSceneEntityEnable('hCarPark2', TRUE);
								        
		 		HandCamSetActive(FALSE);	    
		 	    
				ASSERT(PlaySplineFileDefault('FOLLOW39'));
				ASSERT(PlaySplineFileDefault('LOOKAT39'));	
				
			    while IsSplinePlaying
			    do sleep(100);
			    
				WhiteNoiseSetVal(5);
				
				HandCamSetAll(13, 4.0, 0.0003, 0.027, -100);
		 		HandCamSetActive(TRUE);	 
					    
				ASSERT(PlaySplineFileDefault('FOLLOW35'));
				ASSERT(PlaySplineFileDefault('LOOKAT35'));	
		
			    while IsSplinePlaying 
			    do sleep(100);
				WhiteNoiseSetVal(5);
					
		 		HandCamSetActive(FALSE);	    
		 	    
				ASSERT(PlaySplineFileDefault('FOLLOW34'));
				ASSERT(PlaySplineFileDefault('LOOKAT34'));	
					
				SetZoomLerp(0.5, 1.0, 2);
							
			    while IsSplinePlaying 
			    do sleep(100);	
				WhiteNoiseSetVal(10);
  										
			    SetPlayerHeading(0);
				
				DrawHud(FALSE);
				
				HandCamSetAllEffects(FALSE);
				
				if not ThisLevelBeenCompletedAlready then
				 begin
					
					ASSERT(PlaySplineFileDefault('FOLLOW41'));
					ASSERT(PlaySplineFileDefault('LOOKAT41'));
								
					SetGameTextDisplayTime(8000);
				    DisplayGameText('MOVE1');
				    
				    sleep(8000);
				    	    
					SetGameTextDisplayTime(7000);	
					DisplayGameText('H_RUN');
					
					ToggleHudFlag(HUD_STAMINA, TRUE);	
					HudFlashStamina;
		
					SetGameTextDisplayTime(5000);	
					DisplayGameText('PAUSE');
					
					sleep(5000);
		 					
				    while IsSplinePlaying 
				    do sleep(100);
				    	
				end;
				    			     
				CutSceneEnd(false);  
					
				if not ThisLevelBeenCompletedAlready then
				 begin
				 					
					if GetDifficultyLevel = DIFFICULTY_EASY then
					 begin		
						
						SetGameTextDisplayTime(8000);	
						DisplayGameText('H_RUN2');
						
					end;
					if GetDifficultyLevel <> DIFFICULTY_EASY then
					 begin		
						
						SetGameTextDisplayTime(5000);	
						DisplayGameText('H_RUN3');
						
					end;
				
				end;
								
			end;
						        
			SetLevelGoal('GOAL1'); 
			SetLevelGoal('GOAL1C'); 
			SetLevelGoal('GOAL1A'); 
										
		end;	
					
		pDoor := getentity('CJ_WASTEBIN_(F)');			
		LockEntity(pDoor);	
				
		pDoor := getentity('CJ_WASTEBIN_(F)01');			
		LockEntity(pDoor);		
			
		pDoor := getentity('CJ_WASTEBIN_(F)02');			
		LockEntity(pDoor);		
			
		pDoor := getentity('CJ_WASTEBIN_(F)03');			
		LockEntity(pDoor);	
			
		pDoor := getentity('CJ_WASTEBIN_(F)04');			
		LockEntity(pDoor);	
			
		pDoor := getentity('CJ_WASTEBIN_(F)05');			
		LockEntity(pDoor);	

	
END;

END.