
{$t-}	{	trace off 					}
{	Program Description					}
{										}

SCRIPTMAIN		TRabbit8Trigger;

{ Entity To Run Script From 			}
ENTITY
	tRabbit8	:	et_name;
{ User Defined Constant declarations	}
  
{--------------------------------------}

SCRIPT OnEnterTrigger;

VAR
	spawnVec	:	Vec3d;
	vecFace		:	Vec3d;
	lineA		:	Vec3d;
	lineB		:	Vec3d;
	pSpawned	:	EntityPtr;
	pPlayer		:	EntityPtr;
	SetCurrent	:	BOOLEAN;
	

begin
	
	pPlayer:= GetPlayer;
	
	SetCurrent:=TRUE;
	
	
	
	IF(InsideTrigger(this, pPlayer) OR EnteredTrigger(this, pPlayer)) THEN
	begin
 		Writedebug('Player entered Rabbit8');
 		
 		IF GetEntity('Hunter_Rabbit3') <> NIL THEN
 		begin
 			IF AIIsGoalNameInSubpack('Hunter_Rabbit3', 'sFollowMe3', 'gWR7Rab3') = TRUE THEN
 			begin
 			AIRemoveGoalFromSubPack('Hunter_Rabbit3', 'sFollowMe3', 'gWR7Rab3');
 			end;
 			
 			
 			AIAddGoalForSubPack('Hunter_Rabbit3', 'sFollowMe3', 'gWR8');
 			SetVector(vecFace, 0.6, 0.1, 0.0);
 			AISetHunterHomeNodeDirection('Hunter_Rabbit3', 'Node_WR8', vecFace);
 	
 	
 		end;
		
		
		SetVector(spawnvec, 270.7, 7.0, -57.0);
		pSpawned:= SpawnMovingEntity('Smi_BodB1', spawnvec, 'Hunter_MP3');
		CreateInventoryItem(CT_6SHOOTER, pSpawned, SetCurrent);
		AddAmmoToInventoryWeapon(pSpawned, CT_6SHOOTER, 25);
		
		IF GetEntity('Hunter_MP3') <> NIL THEN
		begin
			AIAddEntity('Hunter_MP3');
			AISetEntityAsLeader('Hunter_MP3');
			AISetHunterOnRadar('Hunter_MP3', TRUE);
			
			AIAddLeaderEnemy('Hunter_MP3', 'player');
			
			AIAddSubPackForLeader('Hunter_MP3', 'sMP3');
			AIAddAreaForSubPack('sMP3', 'aiPrison');
			
			AIAddHunterToLeaderSubpack('Hunter_MP3', 'sMP3', 'Hunter_MP3');
			AISetSubPackCombatType('Hunter_MP3', 'sMP3', COMBATTYPEID_COVER);
			
			AIAddGoalForSubPack('Hunter_MP3', 'sMP3', 'gHuntPlayer');
			AISetHunterIdleActionMinMaxRadius('Hunter_MP3', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,20);
		end;
		
		SetVector(spawnvec, 264.5, 7.0, -54.4);
		pSpawned:= SpawnMovingEntity('Smi_BodB1', spawnvec, 'Hunter_MPRoom');
		CreateInventoryItem(CT_SHOTGUN, pSpawned, SetCurrent);
		AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);
		
		IF GetEntity('Hunter_MPRoom') <> NIL THEN
		begin
			AIAddEntity('Hunter_MPRoom');
			AISetEntityAsLeader('Hunter_MPRoom');
			AISetHunterOnRadar('Hunter_MPRoom', TRUE);
			
			AIAddLeaderEnemy('Hunter_MPRoom', 'player');
			
			AIAddSubPackForLeader('Hunter_MPRoom', 'sMPRoom');
			AIAddAreaForSubPack('sMPRoom', 'aiPrison');
			
			AIAddHunterToLeaderSubpack('Hunter_MPRoom', 'sMPRoom', 'Hunter_MPRoom');
			AISetSubPackCombatType('Hunter_MPRoom', 'sMPRoom', COMBATTYPEID_COVER);
			
			AIAddGoalForSubPack('Hunter_MPRoom', 'sMPRoom', 'gHuntPlayer');
			AIAddGoalForSubPack('Hunter_MPRoom', 'sMPRoom', 'gMPRoom');
			AISetHunterIdleActionMinMaxRadius('Hunter_MPRoom', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,20);
		end;
 		
		RemoveThisScript;
	end;

	
	
{	Script End							}
end;
{	Program End							}







end.