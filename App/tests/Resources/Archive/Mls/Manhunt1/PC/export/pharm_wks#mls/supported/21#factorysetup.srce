{$t-				}
{trace off 			}
{Program Description}

SCRIPTMAIN	FactorySetup;


ENTITY
	TFactorySetup	:	et_name;

{----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------}






SCRIPT 	OnEnterTrigger;

VAR
		pPlayer			:	EntityPtr;
		vecPos			:	Vec3d;
		vecView			:	Vec3d;
		SetCurrent		:	BOOLEAN;
		pSpawned		:	EntityPtr;
		spawnVec		:	Vec3d;


		begin
			pPlayer := GetPlayer;
			
			if(InsideTrigger(this, pPlayer) OR EnteredTrigger(this, pPlayer)) then
				begin
					
			
								
		if GetEntity('Gen_Save_Point01') <> NIL THEN
		begin
					
		DisableUserInput;
		ClearInputStates;
	
	
		SetCurrent:=TRUE;

	
	

 	{ Set up the vectors }

      	{SetVector(vecPos, -167.6, 11.0, 35.9);

        SetVector(vecView, -0.9, -0.4, 0.2);}

		SetVector(vecPos, -167.9, 11.7, 42.0);
		SetVector(vecView, -0.4, -0.4, -0.9);
		
		
			SetVector(vecPos, -215.2, 9.1, 25.7);

        	SetVector(vecView, 0.8, -0.6, 0.2);
		
			SetZoomLerp(1.0, -0.17, 8.0);

        CutSceneStart;
     

        { Set the cameras position }

        setcameraposition(vecPos);

        { Set the cameras view }

        setcameraview(vecView);
        
        SetZoomLerp(1.0, 0.5, 5.0);
		
		ClearLevelGoal('GOAL3');
        SetLevelGoal('GOAL4');
					
		PlayDirectorSpeech(GetPlayerPosition,AISPEECH_D1V1_GRV_LIFT_MECHANISM,-1,200);	
			
			IF GetEntity('Hunter_Rabbit2') <> NIL THEN
			begin		
				AICutSceneEntityEnable('Hunter_Rabbit2', true);
				{PlayDirectorSpeechPlaceHolder('HNTCTRL');}
					
				AISetEntityIdleOverRide('Hunter_Rabbit2', TRUE, TRUE);	
				SLEEP(1000);
				
				AIEntityPlayAnim('Hunter_Rabbit2', 'Idle_Fat_Giggle');
				
				
			end;
			
			SLEEP(4000);
			
			
		
			
			
		
						
			{SLEEP(4000);}
			AISetEntityIdleOverRide('Hunter_Rabbit2', FALSE, FALSE);
			
			{ Set the cameras position }

           	PlaySplineFile('HIDEF',0.2,TRUE,TRUE,FALSE);

            PlaySplineFile('HIDEL',0.2,TRUE,FALSE,FALSE);

            HandCamSetActive(TRUE);

            

            WHILE IsSplinePlaying DO sleep(1);

            

            PlaySplineFile('WALKF',3.0,TRUE,TRUE,FALSE);

            PlaySplineFile('WALKL',3.0,TRUE,FALSE,FALSE);

            

            WHILE IsSplinePlaying DO sleep(1);

            
			
            PlaySplineFile('RUNF',8.0,TRUE,TRUE,FALSE);

            PlaySplineFile('RUNL',8.0,TRUE,FALSE,FALSE);
            SLEEP(3000);
			PlayDirectorSpeech(GetPlayerPosition,AISPEECH_D1V1_GRV_FAILSAFE_OFF_OUT,-1,200);
            
            WHILE IsSplinePlaying DO SLEEP(1);
			{PlayDirectorSpeechPlaceHolder('FSAFE2')}
			
          

            
			
         

            

         
            


			
			{PlayDirectorSpeechPlaceHolder('FSAFE2');}
			{PlayDirectorSpeech(GetPlayerPosition,AISPEECH_D1V1_GRV_FAILSAFE_OFF_OUT,-1,200);}
		
			
			
			
			

			
			
        
		
			{PlayDirectorSpeechPlaceHolder('FSAFE3');}
			
		
			
			PlaySplineFile('SWITCHF',2.0,TRUE,TRUE,FALSE);

            PlaySplineFile('SWITCHL',2.0,TRUE,FALSE,FALSE);
          
			
			
			SetVector(spawnvec, -211.3, -2.4, 34.1);
			pSpawned:= SpawnMovingEntity('Ino_BodB1', spawnvec, 'Hunter_Factory1');
			CreateInventoryItem(CT_SAWNOFF, pSpawned, SetCurrent);
			AddAmmoToInventoryWeapon(pSpawned, CT_SAWNOFF, 25);
			
			
			IF GetEntity('Hunter_Factory1') <> NIL THEN
			begin
			AIAddEntity('Hunter_Factory1');
				SetHunterDropAmmo(GetEntity('Hunter_Factory1'),4);
			SetHunterSkin(GetEntity('Hunter_Factory1'), 0);
		
			SetHunterHeadSkin(GetEntity('Hunter_Factory1'), 0);
			AISetEntityAsLeader('Hunter_Factory1');
			AIAddLeaderEnemy('Hunter_Factory1', 'player');


			AIAddSubPackForLeader('Hunter_Factory1', 'sFactory1');
			AIAddAreaForSubPack('sFactory1', 'aiPharm');
		
			AIAddHunterToLeaderSubPack('Hunter_Factory1', 'sFactory1', 'Hunter_Factory1');
			AIAddGoalForSubPack('Hunter_Factory1', 'sFactory1', 'gHuntPlayer');
	
			AISetSubPackCombatType('Hunter_Factory1', 'sFactory1', COMBATTYPEID_COVER);
			{AIAddGoalForSubPack('Hunter_Factory1', 'sFactory1', 'gFactory1');}
		
			
			end;
			
			SetVector(spawnvec, -178.3, -2.4, 37.7);
			pSpawned:= SpawnMovingEntity('Ino_BodB1', spawnvec, 'Hunter_Factory2');
			CreateInventoryItem(CT_6SHOOTER, pSpawned, SetCurrent);
			AddAmmoToInventoryWeapon(pSpawned, CT_6SHOOTER, 25);
			
			
			IF GetEntity('Hunter_Factory2') <> NIL THEN
			begin
			AIAddEntity('Hunter_Factory2');
				SetHunterDropAmmo(GetEntity('Hunter_Factory2'),6);
				SetHunterSkin(GetEntity('Hunter_Factory2'), 1);
		
			SetHunterHeadSkin(GetEntity('Hunter_Factory2'), 1);
			AISetEntityAsLeader('Hunter_Factory2');
			AIAddLeaderEnemy('Hunter_Factory2', 'player');


			AIAddSubPackForLeader('Hunter_Factory2', 'sFactory2');
			AIAddAreaForSubPack('sFactory2', 'aiPharm');
		
			AIAddHunterToLeaderSubPack('Hunter_Factory2', 'sFactory2', 'Hunter_Factory2');
			AIAddGoalForSubPack('Hunter_Factory2', 'sFactory2', 'gHuntPlayer');
		
			AISetSubPackCombatType('Hunter_Factory2', 'sFactory2', COMBATTYPEID_COVER);
			
			AISetHunterIdleActionMinMaxRadius('Hunter_Factory2', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);
			
		
			
			end;
			
			
			
				
			SetVector(spawnvec, -206.7, -2.4, 37.6);
			pSpawned:= SpawnMovingEntity('Ino_BodM1', spawnvec, 'Hunter_Factory3');
			CreateInventoryItem(CT_6SHOOTER, pSpawned, SetCurrent);
			AddAmmoToInventoryWeapon(pSpawned, CT_6SHOOTER, 25);
			
			
			IF GetEntity('Hunter_Factory3') <> NIL THEN
			begin
			AIAddEntity('Hunter_Factory3');
			SetHunterDropAmmo(GetEntity('Hunter_Factory3'),6);
			AISetEntityAsLeader('Hunter_Factory3');
			AIAddLeaderEnemy('Hunter_Factory3', 'player');


			AIAddSubPackForLeader('Hunter_Factory3', 'sFactory3');
			AIAddAreaForSubPack('sFactory3', 'aiPharm');
		
			AIAddHunterToLeaderSubPack('Hunter_Factory3', 'sFactory3', 'Hunter_Factory3');
			AIAddGoalForSubPack('Hunter_Factory3', 'sFactory3', 'gHuntPlayer');
		
			AISetSubPackCombatType('Hunter_Factory3', 'sFactory3', COMBATTYPEID_COVER);
			
			AISetHunterIdleActionMinMaxRadius('Hunter_Factory3', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);
			
		
			
			end;
			
			SetVector(spawnvec, -203.24, -2.4, 46.0);
			pSpawned:= SpawnMovingEntity('Ino_BodS1', spawnvec, 'Hunter_Factory4');
			CreateInventoryItem(CT_6SHOOTER, pSpawned, SetCurrent);
			AddAmmoToInventoryWeapon(pSpawned, CT_6SHOOTER, 25);
			
			
			IF GetEntity('Hunter_Factory4') <> NIL THEN
			begin
			AIAddEntity('Hunter_Factory4');
			SetHunterDropAmmo(GetEntity('Hunter_Factory4'),6);
			AISetEntityAsLeader('Hunter_Factory4');
			AIAddLeaderEnemy('Hunter_Factory4', 'player');


			AIAddSubPackForLeader('Hunter_Factory4', 'sFactory4');
			AIAddAreaForSubPack('sFactory4', 'aiPharm');
		
			AIAddHunterToLeaderSubPack('Hunter_Factory4', 'sFactory4', 'Hunter_Factory4');
			AIAddGoalForSubPack('Hunter_Factory4', 'sFactory4', 'gHuntPlayer');
		
			AISetSubPackCombatType('Hunter_Factory4', 'sFactory4', COMBATTYPEID_COVER);
			
			AISetHunterIdleActionMinMaxRadius('Hunter_Factory4', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);
			
		
			
			end;
			
			
			SetVector(spawnvec, -200.37, -2.4, 38.31);
			pSpawned:= SpawnMovingEntity('Ino_BodS1', spawnvec, 'Hunter_Factory5');
			CreateInventoryItem(CT_6SHOOTER, pSpawned, SetCurrent);
			AddAmmoToInventoryWeapon(pSpawned, CT_6SHOOTER, 25);
			
			
			IF GetEntity('Hunter_Factory5') <> NIL THEN
			begin
			AIAddEntity('Hunter_Factory5');
			AISetEntityAsLeader('Hunter_Factory5');
			AIAddLeaderEnemy('Hunter_Factory5', 'player');


			AIAddSubPackForLeader('Hunter_Factory5', 'sFactory5');
			AIAddAreaForSubPack('sFactory5', 'aiPharm');
		
			AIAddHunterToLeaderSubPack('Hunter_Factory5', 'sFactory5', 'Hunter_Factory5');
			AIAddGoalForSubPack('Hunter_Factory5', 'sFactory5', 'gHuntPlayer');
		
			AISetSubPackCombatType('Hunter_Factory5', 'sFactory5', COMBATTYPEID_COVER);
			
			AISetHunterIdleActionMinMaxRadius('Hunter_Factory5', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,30);
			
		
			
			end;
			while IsSplinePlaying do SLEEP(1);
			
			
		
			
 		
 			HandCamSetActive(FALSE);
 			SetZoomLerp(1.0, 1.0, 0.1);
 			CutSceneEnd(false);
 	
 		
 
			{SetVector(spawnvec, -203.0, -2.7, 28.2);
			pSpawned:= SpawnMovingEntity('Ino_BodB1', spawnvec, 'Hunter_Test1');
			CreateInventoryItem(CT_SAWNOFF, pSpawned, SetCurrent);
			AddAmmoToInventoryWeapon(pSpawned, CT_SAWNOFF, 25);}
	
				
			EnableUserInput;
				
				
				
			
				
				
				
				
				
					
						
				RemoveThisScript;

				end;
			end;

	end;

{----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------}

END.   