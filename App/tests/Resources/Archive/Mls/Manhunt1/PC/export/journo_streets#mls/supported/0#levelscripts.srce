SCRIPTMAIN	LevelScripts;

ENTITY
	Journo_Streets		:	et_level;

{******** THIS IS THE INIT SCRIPT FOR THE PRECINCT SECTION ********}
TYPE

VAR
{globals}
vStart,				
vEnd,				
vGuardDirection, 	
vSave1Pos,
vSave2Pos,
vSave3Pos					: vec3d;

{LEVEL SCOPED VARS}
level_bIsAlertOn			: boolean;
level_bSafeOpen				: boolean;
level_bKillVanGodTxt		: boolean;
IsMachineOn 				: boolean;
{************************ FUNCTION HEADERS ************************}
PROCEDURE InitAreas (); FORWARD;
PROCEDURE InitTriggers(); FORWARD;
PROCEDURE InitSavePointsForBuddy(); FORWARD;
PROCEDURE InitGameText(); FORWARD;
PROCEDURE InitStreetGuys(); FORWARD;
PROCEDURE InitFlatGuys(); FORWARD;
{********************* END OF FUNCTION HEADERS *********************}


{************************ LEVEL SCRIPTS ************************}

SCRIPT OnCreate;
VAR
vDirection	: vec3d;

BEGIN

AIClearAllActiveAreaAssociations;

writedebug('Level Init');

{Init the level & Game scoped vars}
if (NIL <> GetEntity('Gen_Save_Point'))then {saves are there - this is NOT a reload}
begin
	level_bIsAlertOn 		:= FALSE;
	level_bSafeOpen			:= FALSE;
	level_bKillVanGodTxt	:= FALSE;
	IsMachineOn				:= FALSE;
end;

	{Add the player}		
	AIAddPlayer('player');
	
	{Add the Journo Buddy}
	
	if(nil <> GetEntity('Journalist')) then 
	begin
		AIAddEntity('Journalist');
		AISetEntityAsLeader('Journalist');			
		AIEntityAlwaysEnabled('Journalist');
			
		{Create the subpacks}
		AIAddSubPackForLeader('Journalist','JournoPack');						
		AISetSubpackCombatType('Journalist','JournoPack',COMBATTYPEID_MELEE);
						
		AIAddHunterToLeaderSubPack('Journalist','JournoPack','Journalist');			
		
		AISetEntityVoiceID('Journalist',VOICE_JOURNALIST1VOICE1);				
	end;
	
	{define the goals}
	AIDefineGoalHuntEnemy('gHuntPlayer', 'player',false,3); 
	AIDefineGoalHuntEnemy('gHuntPlayer1', 'player',false,1); 
	AIDefineGoalHuntEnemy('gHuntPlayer2', 'player',false,2);
	
	AIDefineGoalHuntEnemy('gHuntJourno', 'Journalist',false,2);
	AIDefineGoalHuntEnemy('gHuntJourno1', 'Journalist',false,1);
	
	{Define the Journo's Goals}
	AIDefineGoalBeBuddy('gJournoBeBuddy','Journalist','player','Journo_Home',53.0);	
	SetVector(vStart,112.0,0.6,-9.95);
	AIDefineGoalGotoVectorIdle('gJournoEntranceDoor','Journalist',AISCRIPT_VERYHIGHPRIORITY,'JournoEntranceDoor',vStart,AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNodeIdle('gCut_DoorToHideout','Journalist',AISCRIPT_VERYHIGHPRIORITY,'DoorToHideout',AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNodeIdle('gCut_ReachDossier','Journalist',AISCRIPT_VERYHIGHPRIORITY,'ReachDossier',AISCRIPT_WALKMOVESPEED,TRUE);
		
	{FLAT SHOOTOUT GOALS}	
	
	AIDefineGoalGuard('gGuardFlatEntrance',AISCRIPT_HIGHPRIORITY,'FlatEntrance',5.0,10.0,1);
	AIGuardModifyShootOutsideRadius('gGuardFlatEntrance',TRUE);
	
	AIDefineGoalGuard('gGUARD_BY_CAR',AISCRIPT_MEDIUMPRIORITY,'GUARD_BY_CAR',25.0,5.0,1);
	AIGuardModifyShootOutsideRadius('gGUARD_BY_CAR',TRUE);
	
	AIDefineGoalGuard('gGUARD_BY_C2',AISCRIPT_MEDIUMPRIORITY,'GUARD_BY_C2',25.0,5.0,1);
	AIGuardModifyShootOutsideRadius('gGUARD_BY_C2',TRUE);
	
	AIDefineGoalGuard('gGUARD_BY_VAN',AISCRIPT_MEDIUMPRIORITY,'GUARD_BY_VAN',25.0,5.0,1);
	AIGuardModifyShootOutsideRadius('gGUARD_BY_VAN',TRUE);
			
	AIDefineGoalGuard('gFLATGUARD1',AISCRIPT_HIGHPRIORITY,'FLATGUARD1',3.0,3.0,1);
	AIGuardModifyShootOutsideRadius('gFLATGUARD1',TRUE);
	
	AIDefineGoalGuard('gFLATGUARD2',AISCRIPT_HIGHPRIORITY,'FLATGUARD2',5.0,7.0,1);
	AIGuardModifyShootOutsideRadius('gFLATGUARD2',TRUE);
		
	AIDefineGoalGuard('gFLATGUARD3',AISCRIPT_HIGHPRIORITY,'FLATGUARD3',4.5,3.5,1);
	AIGuardModifyShootOutsideRadius('gFLATGUARD3',TRUE);
		
	AIDefineGoalGuard('gFLATGUARD4',AISCRIPT_HIGHPRIORITY,'FLATGUARD4',4.5,4.5,1);
	AIGuardModifyShootOutsideRadius('gFLATGUARD4',TRUE);
		
	AIDefineGoalGuard('gFLATGUARD5',AISCRIPT_HIGHPRIORITY,'FLATGUARD5',3.5,3.5,1);
	AIGuardModifyShootOutsideRadius('gFLATGUARD5',TRUE);
	
	AIDefineGoalGuard('gFLATGUARD6',AISCRIPT_HIGHPRIORITY,'FLATGUARD6',3.5,3.5,1);
	AIGuardModifyShootOutsideRadius('gFLATGUARD6',TRUE);
	
	AIDefineGoalGuard('gFLATGUARD7',AISCRIPT_HIGHPRIORITY,'FLATGUARD7',4.5,4.5,1);	
	AIGuardModifyShootOutsideRadius('gFLATGUARD7',TRUE);
	
	{The GUARD behind the Swat van, blocking the player in the second street section}
	AIDefineGoalGuard('gTRUCK_GUARD',AISCRIPT_HIGHPRIORITY,'TRUCK_GUARD',1.0,3.0,1);	
	AIGuardModifyShootOutsideRadius('gTRUCK_GUARD',TRUE);
	
	{the COVERING FIRE goal for SWAT GUARD when SNIPER 1 is killed on the roof of casino}	
	{defined in SWAT_GUARD}
	
	{define the investigation goals for the guys inside the tunnel}
	AIDefineGoalGuard('gGuardTunnelEntrance',AISCRIPT_HIGHPRIORITY,'TUNNEL1',5.0,5.0,1);
	AIGuardModifyShootOutsideRadius('gGuardTunnelEntrance',TRUE);
	
	AIDefineGoalGuard('gGuardMachine',AISCRIPT_MEDIUMPRIORITY,'CRATES',5.0,20.0,1);
	AIGuardModifyShootOutsideRadius('gGuardMachine',TRUE);
	
	AIDefineGoalGotoNode('gCheckMachine','GUARD2',AISCRIPT_MEDIUMPRIORITY,'CRATES',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gStreet1_Machine','STREET1',AISCRIPT_MEDIUMPRIORITY,'MACHINE',AISCRIPT_RUNMOVESPEED,TRUE);
	
	{the high priority guard goals for the 2 snipers}
	AIDefineGoalGuard('gSnipeStreet',AISCRIPT_HIGHPRIORITY,'camp1_snipe1',0.5,0.5,1);
	AIGuardModifyShootOutsideRadius('gSnipeStreet',TRUE);
	
	AIDefineGoalGuard('gSnipeSubway',AISCRIPT_HIGHPRIORITY,'camp2_snipe2',0.5,0.5,1);
	AIGuardModifyShootOutsideRadius('gSnipeSubway',TRUE);
	
	{Movement of the first sniper}
	AIDefineGoalGotoNode('gGoSnipeStreet','SNIPER',AISCRIPT_VERYHIGHPRIORITY,'camp1_snipe1',AISCRIPT_RUNMOVESPEED,TRUE);
	
	{define the movement goals the shootout}
	AIDefineGoalGotoNode('gFLAT2_GOTO','FLAT2',AISCRIPT_MEDIUMPRIORITY,'FLATGUARD5',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gFLAT3_GOTO','FLAT3',AISCRIPT_MEDIUMPRIORITY,'FLATGUARD1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gFLAT4_GOTO','FLAT4',AISCRIPT_MEDIUMPRIORITY,'FLATGUARD1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gFLAT5_GOTO','FLAT5',AISCRIPT_MEDIUMPRIORITY,'FLATGUARD2',AISCRIPT_RUNMOVESPEED,TRUE);
		
	{Define the Guard Goals for the subway entrance, one as default 
	and one when the sniper is killed													}		
	
	AIDefineGoalGuard('gGuard_Subway_All',AISCRIPT_HIGHPRIORITY,'Guard_Subway',20.0,3.0,3);
	AIGuardModifyShootOutsideRadius('gGuard_Subway_All',TRUE);
	
	SetVector(vDirection,0.97,0.0,-0.20);
	AIDefineGoalGuardDirection('gGuard_Subway_One',AISCRIPT_HIGHPRIORITY,'Guard_Subway',1.5,1.5,1,vDirection);
	AIGuardModifyShootOutsideRadius('gGuard_Subway_One',TRUE);
	
	{CASINO AND STREET SECTION2 GOTOS for reinforcements}
	AIDefineGoalGotoNode('gCLUB1_GOTO','CLUB1',AISCRIPT_MEDIUMPRIORITY,'CLUB1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB2_GOTO','CLUB2',AISCRIPT_MEDIUMPRIORITY,'CLUB2',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB3_GOTO','CLUB3',AISCRIPT_MEDIUMPRIORITY,'CLUB3',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB4_GOTO','CLUB4',AISCRIPT_MEDIUMPRIORITY,'CLUB4',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB5_GOTO','CLUB5',AISCRIPT_MEDIUMPRIORITY,'CLUB5',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB6_GOTO','CLUB6',AISCRIPT_MEDIUMPRIORITY,'CLUB6',AISCRIPT_RUNMOVESPEED,TRUE);	
	
	AIDefineGoalGotoNode('gCLUB1_GOSTREET','CLUB1',AISCRIPT_MEDIUMPRIORITY,'camp3_snipe3',AISCRIPT_RUNMOVESPEED,TRUE);	
	AIDefineGoalGotoNode('gCLUB2_GOSTREET','CLUB2',AISCRIPT_MEDIUMPRIORITY,'camp3_snipe3',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB3_GOSTREET','CLUB3',AISCRIPT_MEDIUMPRIORITY,'camp3_snipe3',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB4_GOSTREET','CLUB4',AISCRIPT_MEDIUMPRIORITY,'camp3_snipe3',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB5_GOSTREET','CLUB5',AISCRIPT_MEDIUMPRIORITY,'camp3_snipe3',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCLUB6_GOSTREET','CLUB6',AISCRIPT_MEDIUMPRIORITY,'camp3_snipe3',AISCRIPT_RUNMOVESPEED,TRUE);	
	
	AIDefineGoalGuard('gGuard_CLUB_T2',AISCRIPT_HIGHPRIORITY,'Guard_CLUB_T2',10.0,10.0,3);
	AIGuardModifyShootOutsideRadius('gGuard_CLUB_T2',TRUE);
	
	AIDefineGoalGuard('gGuard_CLUB_T1',AISCRIPT_HIGHPRIORITY,'Guard_CLUB_T1',10.0,10.0,4);
	AIGuardModifyShootOutsideRadius('gGuard_CLUB_T2',TRUE);
	
	
	{Add the LEADER and his enemy}
	if(nil <> GetEntity('LEADER')) then 
	begin
		AIAddEntity('LEADER');
		AISetEntityAsLeader('LEADER');
		AIAddLeaderEnemy('LEADER','player');
		AIAddLeaderEnemy('LEADER','Journalist');
		
		AIEntityAlwaysEnabled('LEADER');
		
		{Create the subpacks}
		AIAddSubPackForLeader('LEADER','STREET_GUYS');		
		AIAddSubPackForLeader('LEADER','TUNNEL_GUARD');
		
		AIAddSubPackForLeader('LEADER','STREET_GUYS_GUNS');		
		AIAddSubPackForLeader('LEADER','TUNNEL_GUARD_GUNS');
		
		AIAddSubPackForLeader('LEADER','FLAT_GUYS');
		
		AIAddSubPackForLeader('LEADER','HARD_GUYS');
		AIAddSubPackForLeader('LEADER','CLUB_TEAM1');
		AIAddSubPackForLeader('LEADER','CLUB_TEAM2');
		AIAddSubPackForLeader('LEADER','SUBWAY_GUYS'); 		
		AIAddSubPackForLeader('LEADER','STRIP_GUYS');	
		{hide the leader from the radar}
		AISetHunterOnRadar('LEADER',false);
		AISetLeaderInvisible('LEADER');
		
		{ADD THE HUNTERS on the map}
	
		InitStreetGuys;		
		InitFlatGuys; 
		
		{*** INIT HARD GUYS ***}
		
		if(nil <> GetEntity('Team1_1')) then 
		begin
			AIAddEntity('Team1_1');
			AIAddHunterToLeaderSubPack('LEADER','HARD_GUYS','Team1_1');	
			AISetEntityVoiceID('Team1_1',VOICE_POLICE3VOICE2);	
			AICancelHunterIdleAction('Team1_1',AISCRIPT_IDLE_SPEECH);					
		end;
		
		if(nil <> GetEntity('Team1_2')) then 
		begin
			AIAddEntity('Team1_2');
			AIAddHunterToLeaderSubPack('LEADER','HARD_GUYS','Team1_2');						
			AISetEntityVoiceID('Team1_2',VOICE_POLICE2VOICE2);
			AICancelHunterIdleAction('Team1_2',AISCRIPT_IDLE_SPEECH);
		end;
	
		if(nil <> GetEntity('SWAT_GUARD')) then 
		begin
			AIAddEntity('SWAT_GUARD');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM1','SWAT_GUARD');
		end;
		
		if(nil <> GetEntity('SWAT_GUARD2')) then 
		begin
			AIAddEntity('SWAT_GUARD2');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM1','SWAT_GUARD2');
		end;
		
		{*** INIT CLUB GUYS ***}
		
		if(nil <> GetEntity('SNIPER')) then 
		begin
			AIAddEntity('SNIPER');
			{Each sniper guy is his own leader}
			AISetEntityAsLeader('SNIPER');
			AIAddLeaderEnemy('SNIPER','player');		
			AIEntityAlwaysEnabled('SNIPER');
			AIAddSubPackForLeader('SNIPER','sSNIPER');
			AIAddHunterToLeaderSubPack('SNIPER','sSNIPER','SNIPER');
			AICancelHunterIdleAction('SNIPER',AISCRIPT_IDLE_SPEECH);
			AICancelHunterIdleAction('SNIPER',AISCRIPT_IDLE_STANDANIMS);	
			AISetEntityVoiceID('SNIPER',VOICE_POLICE3VOICE1);
		end;
	
		if(nil <> GetEntity('CLUB1')) then 
		begin
			AIAddEntity('CLUB1');
			AIAddHunterToLeaderSubPack('LEADER','STRIP_GUYS','CLUB1');					
		end;
		
		if(nil <> GetEntity('CLUB2')) then 
		begin
			AIAddEntity('CLUB2');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM1','CLUB2');								
		end;
		
		if(nil <> GetEntity('CLUB3')) then 
		begin
			AIAddEntity('CLUB3');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM1','CLUB3');				
		end;
		
		if(nil <> GetEntity('CLUB4')) then 
		begin
			AIAddEntity('CLUB4');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM2','CLUB4');			
		end;

		if(nil <> GetEntity('CLUB5')) then 
		begin
			AIAddEntity('CLUB5');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM2','CLUB5');								
		end;
		
		if(nil <> GetEntity('CLUB6')) then 
		begin
			AIAddEntity('CLUB6');
			AIAddHunterToLeaderSubPack('LEADER','CLUB_TEAM2','CLUB6');									
		end;		
		
		if(nil <> GetEntity('CLUB7')) then 
		begin
			AIAddEntity('CLUB7');
			AIAddHunterToLeaderSubPack('LEADER','STRIP_GUYS','CLUB7');	
		end;
		
		if(nil <> GetEntity('CLUB8')) then 
		begin
			AIAddEntity('CLUB8');
			AIAddHunterToLeaderSubPack('LEADER','STRIP_GUYS','CLUB8');	
		end;
				
		{*** INIT SUBWAY GUYS ***}
		
		if(nil <> GetEntity('SNIPER2')) then 
		begin
			AIAddEntity('SNIPER2');
			{Each sniper guy is his own leader}
			AISetEntityAsLeader('SNIPER2');
			AISetHunterOnRadar('SNIPER2',false);
			AIAddLeaderEnemy('SNIPER2','player');		
			AIEntityAlwaysEnabled('SNIPER2');
			AIAddSubPackForLeader('SNIPER2','sSNIPER2');
			AIAddHunterToLeaderSubPack('SNIPER2','sSNIPER2','SNIPER2');			
			AICancelHunterIdleAction('SNIPER2',AISCRIPT_IDLE_SPEECH);
			AICancelHunterIdleAction('SNIPER2',AISCRIPT_IDLE_STANDANIMS);			
		end;
		
		if(nil <> GetEntity('Team2_1')) then 
		begin
			AIAddEntity('Team2_1');
			AIAddHunterToLeaderSubPack('LEADER','SUBWAY_GUYS','Team2_1');			
		end;
		
		if(nil <> GetEntity('Team2_2')) then 
		begin
			AIAddEntity('Team2_2');
			AIAddHunterToLeaderSubPack('LEADER','SUBWAY_GUYS','Team2_2');	
		end;
		
		if(nil <> GetEntity('Team2_3')) then 
		begin
			AIAddEntity('Team2_3');
			AIAddHunterToLeaderSubPack('LEADER','SUBWAY_GUYS','Team2_3');			
		end;		
	
		
		{Add the basic HUNT goals to each subpack}
		
		{*** Street Section 1 *** }
		
		AIAddGoalForSubPack('LEADER','STREET_GUYS','gHuntPlayer');		
		AIAddGoalForSubPack('LEADER','STREET_GUYS','gHuntJourno');		
				
		AIAddGoalForSubPack('LEADER','TUNNEL_GUARD','gHuntPlayer');
		AIAddGoalForSubPack('LEADER','TUNNEL_GUARD','gHuntJourno');		
		
		AIAddGoalForSubPack('LEADER','STREET_GUYS_GUNS','gHuntPlayer1');		
		AIAddGoalForSubPack('LEADER','STREET_GUYS_GUNS','gHuntJourno1');
				
		AIAddGoalForSubPack('LEADER','STREET_GUYS_GUNS','gGuardFlatEntrance');	
		AIAddGoalForSubPack('LEADER','STREET_GUYS_GUNS','gGUARD_BY_CAR');	
		AIAddGoalForSubPack('LEADER','STREET_GUYS_GUNS','gGUARD_BY_C2');
		AIAddGoalForSubPack('LEADER','STREET_GUYS_GUNS','gGUARD_BY_VAN');	
				
		AIAddGoalForSubPack('LEADER','TUNNEL_GUARD_GUNS','gHuntPlayer');
		AIAddGoalForSubPack('LEADER','TUNNEL_GUARD_GUNS','gHuntJourno');		
	
		
		{*** Flat Shootout Section ***}
		AIAddGoalForSubPack('LEADER','FLAT_GUYS','gHuntPlayer2');
		AIAddGoalForSubPack('LEADER','FLAT_GUYS','gHuntJourno');
		
		{*** Street Section 2 *** }		
	
		{Hunt enemy for Hard_guys added in trigger InitStrSect2}
		
		{*** Club and Sniper Hunt Enemy Goals Added in GoSniper ***}
			
		{*** Subway Section *** }
		
		AIAddGoalForSubPack('LEADER','SUBWAY_GUYS','gHuntPlayer');				
		AIAddGoalForSubPack('LEADER','SUBWAY_GUYS','gHuntJourno');	
		AIAddGoalForSubPack('LEADER','SUBWAY_GUYS','gGuard_Subway_All');
		
		if IsEntityAlive('SNIPER2') 
			then AIAddGoalForSubPack('SNIPER2','sSNIPER2','gHuntPlayer');			
		if IsEntityAlive('SNIPER2')
			then AIAddGoalForSubPack('SNIPER2','sSNIPER2','gSnipeSubway');
						
		{Set the combat types per subpack}
		AISetSubpackCombatType('LEADER','STREET_GUYS',COMBATTYPEID_MELEE);
		AISetSubpackCombatType('LEADER','TUNNEL_GUARD',COMBATTYPEID_MELEE);
		AISetSubpackCombatType('LEADER','FLAT_GUYS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','HARD_GUYS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','CLUB_TEAM1',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','CLUB_TEAM2',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','SUBWAY_GUYS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','STRIP_GUYS',COMBATTYPEID_COVER);
		
		AISetSubpackCombatType('LEADER','STREET_GUYS_GUNS',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','TUNNEL_GUARD_GUNS',COMBATTYPEID_COVER);
				
		if IsEntityAlive('SNIPER') then
			AISetSubpackCombatType('SNIPER','sSNIPER',COMBATTYPEID_OPEN);
		
		if IsEntityAlive('SNIPER2')
			then AISetSubpackCombatType('SNIPER2','sSNIPER2',COMBATTYPEID_OPEN);
				
	end;	
		
	InitAreas;
	InitTriggers;
	InitSavePointsForBuddy;
	InitGameText;

	{Assign script to Game God Text Triggers, positioned near Van Doors}	
	SetEntityScriptsFromEntity('TXT_Van_Door','TXT_SwatVan_Doors');
	RunScript('TXT_SwatVan_Doors','OnCreate');		
	
	SetEntityScriptsFromEntity('TXT_Van_Door','TXT_SwatVan_Doors01');
	RunScript('TXT_SwatVan_Doors01','OnCreate');		
	
	SetEntityScriptsFromEntity('TXT_Van_Door','TXT_SwatVan_Doors04');
	RunScript('TXT_SwatVan_Doors04','OnCreate');
	
	SetEntityScriptsFromEntity('TXT_Van_Door','TXT_SwatVan_Doors05');
	RunScript('TXT_SwatVan_Doors05','OnCreate');
	
	if (NIL <> GetEntity('Gen_Tough_Glass_Door_(D)06')) then SetDoorOpenAngleIn(GetEntity('Gen_Tough_Glass_Door_(D)06'),90);
	if (NIL <> GetEntity('Gen_Tough_Glass_Door_(D)06')) then SetDoorOpenAngleOut(GetEntity('Gen_Tough_Glass_Door_(D)06'),90);
	
	if (NIL <> GetEntity('Gen_Tough_Glass_Door_(D)05')) then SetDoorOpenAngleIn(GetEntity('Gen_Tough_Glass_Door_(D)05'),90);
	if (NIL <> GetEntity('Gen_Tough_Glass_Door_(D)05')) then SetDoorOpenAngleOut(GetEntity('Gen_Tough_Glass_Door_(D)05'),90);
		
	SetMaxNumberOfRats(0);
			
	{Hide the open window model and move it out of the way}
	if (NIL <> GetEntity('CJ_CHRISWIN_OPEN'))then
	begin
		SetVector(vStart,83.485,107.435,-3.125);{100 added to Y to get coll out of way}		
		MoveEntity(GetEntity('CJ_CHRISWIN_OPEN'),vStart,0);
		HideEntity(GetEntity('CJ_CHRISWIN_OPEN')); 
	end;

	{Unlock the door of the flat if it is a reload}
	if (NIL = GetEntity('Gen_Save_Point') ) then runScript('Building_Door','JournoUnLockDoor');
	
	SetNumberOfKillableHuntersInLevel(28,5);
	
	{init level goals}
	runScript('Journo_Streets','LevelGoals');
	
	{Assign FX to police CARS and VANS}
	runScript('Journo_Streets','PoliceCarsInit');
	
end; {end OnCreate}


{************************ OTHER SCRIPTS ************************}

SCRIPT LevelGoals;
BEGIN

	if NOT level_bSafeOpen then SetLevelGoal('GOAL1')
	else 
	begin
		ClearLevelGoal('GOAL1');
		SetLevelGoal('GOAL2')
	end;
		
End;


SCRIPT PoliceCarsInit;
BEGIN
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX')),FALSE);   {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX02')),FALSE); {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX04')),FALSE); {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX07')),FALSE); {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX08')),FALSE); {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX11')),FALSE); {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX12')),FALSE); {red}
	CreateMhFx('red_siren',GetEntityPosition(GetEntity('PoliceCar_FX15')),FALSE); {red}
	
	sleep(1500);
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX01')),FALSE);
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX03')),FALSE);
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX05')),FALSE);
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX06')),FALSE);	
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX09')),FALSE);
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX10')),FALSE);	
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX13')),FALSE);
	CreateMhFx('Blue_siren',GetEntityPosition(GetEntity('PoliceCar_FX14')),FALSE); 	
End;



{************************ LEVEL FUNCTIONS ************************}


PROCEDURE InitAreas ;
BEGIN
	
	{ENTITY ACTIVATION AREAS}
	
	AIAssociateOneActiveAreaWithPlayerArea('aitunnel','aiStreetSect1');
	AIAssociateOneActiveAreaWithPlayerArea('aiStreetSect1','aiTunnel');
		
	AIAssociateOneActiveAreaWithPlayerArea('aiFlat','aiKitchen');
	AIAssociateOneActiveAreaWithPlayerArea('aiKitchen','aiFlat');
	
	AIAssociateFourActiveAreasWithPlayerArea('aiStreetSect2','aiStripClub','aiClubBalcony','aiDonut','aiClubSect2');
	AIAssociateFourActiveAreasWithPlayerArea('aiStripClub','aiStreetSect2','aiClubBalcony','aiDonut','aiClubSect2');
	AIAssociateFourActiveAreasWithPlayerArea('aiClubBalcony','aiStreetSect2','aiStripClub','aiDonut','aiClubSect2');
	AIAssociateFourActiveAreasWithPlayerArea('aiDonut','aiClubBalcony','aiStreetSect2','aiStripClub','aiClubSect2');
	AIAssociateFourActiveAreasWithPlayerArea('aiClubSect2','aiDonut','aiClubBalcony','aiStreetSect2','aiStripClub');
	
	AIAssociateOneActiveAreaWithPlayerArea('aiSubway','aiDonut');	
	AIAssociateOneActiveAreaWithPlayerArea('aiDonut','aiSubway');
	
	{TERRITORIES}
	AIAddAreaForSubpack('STREET_GUYS', 'aiStreetSect1');
	AIAddAreaForSubpack('STREET_GUYS', 'aiTunnel');
	
	AIAddAreaForSubpack('TUNNEL_GUARD', 'aiStreetSect1');
	AIAddAreaForSubpack('TUNNEL_GUARD', 'aiTunnel');
	
	AIAddAreaForSubpack('STREET_GUYS_GUNS', 'aiStreetSect1');
	AIAddAreaForSubpack('STREET_GUYS_GUNS', 'aiTunnel');

	AIAddAreaForSubpack('TUNNEL_GUARD_GUNS', 'aiStreetSect1');
	AIAddAreaForSubpack('TUNNEL_GUARD_GUNS', 'aiTunnel');
	
	AIAddAreaForSubpack('FLAT_GUYS', 'aiFlat');
	AIAddAreaForSubpack('FLAT_GUYS', 'aiKitchen');		

	AIAddAreaForSubpack('HARD_GUYS', 'aiStripClub');
	AIAddAreaForSubpack('HARD_GUYS', 'aiClubSect2');	
	AIAddAreaForSubpack('HARD_GUYS', 'aiClubBalcony');
	AIAddAreaForSubpack('HARD_GUYS', 'aiStreetSect2');
				
	AIAddAreaForSubpack('CLUB_TEAM1', 'aiStripClub');
	AIAddAreaForSubpack('CLUB_TEAM1', 'aiClubSect2');	
	AIAddAreaForSubpack('CLUB_TEAM1', 'aiClubBalcony');
	AIAddAreaForSubpack('CLUB_TEAM1', 'aiStreetSect2');
	
	AIAddAreaForSubpack('CLUB_TEAM2', 'aiStripClub');	
	AIAddAreaForSubpack('CLUB_TEAM2', 'aiClubSect2');	
	AIAddAreaForSubpack('CLUB_TEAM2', 'aiClubBalcony');
	AIAddAreaForSubpack('CLUB_TEAM2', 'aiStreetSect2');
	
	AIAddAreaForSubpack('STRIP_GUYS', 'aiStripClub');	
	AIAddAreaForSubpack('STRIP_GUYS', 'aiClubSect2');	
	AIAddAreaForSubpack('STRIP_GUYS', 'aiClubBalcony');
	AIAddAreaForSubpack('STRIP_GUYS', 'aiStreetSect2');
		
	AIAddAreaForSubpack('SUBWAY_GUYS', 'aiSubway');		

End; {of InitAreas}




{*****************************************************}
PROCEDURE InitTriggers;
BEGIN
	{*** Level Triggers ***}

	setVector(vStart,0.0,0.0,0.0);
	setVector(vEnd,-0.2,-0.2,-0.2);
	if (nil = GetEntity('Alert_Manager')) then CreateBoxTrigger(vStart,vEnd,'Alert_Manager');

	
	SetVector(vStart,75.5,0.1,-13.0);
	SetVector(vEnd,83.0,3.0,-22.6);	

	if(
	(nil = GetEntity('InitStrSect2')) 
	AND
	(nil <> GetEntity('Team1_1')) 
	AND
	(nil <> GetEntity('Team1_2')) 	
	) then CreateBoxTrigger(vStart,vEnd,'InitStrSect2');
	
	SetVector(vStart,95.6,4.5,-13.6);
	SetVector(vEnd,94.0,7.0,-11.9);	
	
	if(
	(nil = GetEntity('TurnFLAT2')) 
	AND
	(nil <> GetEntity('FLAT2')) 
	) then CreateBoxTrigger(vStart,vEnd,'TurnFLAT2');
	
{
	SetVector(vStart,108.602,0.1,20.251);
	SetVector(vEnd,136.745,3.0,10.9);	
	if(
	(nil = GetEntity('PatrolFLAT1')) 
	AND
	(nil <> GetEntity('FLAT1')) 
	)then CreateBoxTrigger(vStart,vEnd,'PatrolFLAT1');
}
	
{
	SetVector(vStart,184.1,0.1,53.8);
	SetVector(vEnd,176.8,3.0,32.0);	
	if(
	(nil = GetEntity('GoHomeSTREET2')) 
	AND
	(nil<> GetEntity('STREET2')) 
	) then CreateBoxTrigger(vStart,vEnd,'GoHomeSTREET2');
}
	
{
	SetVector(vStart,95.0,0.1,-76.0);
	SetVector(vEnd,102.0,3.0,-67.0);	
	if(
	(nil = GetEntity('GoTeam2')) 
	AND
	(nil<> GetEntity('Team2_1')) 
	AND
	(nil<> GetEntity('Team2_2'))
	AND
	(nil<> GetEntity('Team2_3'))
	) then CreateBoxTrigger(vStart,vEnd,'GoTeam2');
}	
{	
	SetVector(vStart,92.54,6.0,-3.406);
	if (nil = GetEntity('SafeTrigger')) then CreateSphereTrigger(vStart,1.5,'SafeTrigger');
}
	
	SetVector(vStart,113.43,0.0,-45.85);
	SetVector(vEnd,134.851,3.0,-68.585);
	if (nil = GetEntity('GoSniper')) then CreateBoxTrigger(vStart,vEnd,'GoSniper');
	
	SetVector(vStart,105.5,-0.1,-87.5);
	SetVector(vEnd,111.7,3.0,-66.7);
	if (nil <> GetEntity('SNIPER')) then CreateBoxTrigger(vStart,vEnd,'SnipePlayer');
	
	{VAN GAME GOD TRIGGERS}
	SetVector(vStart,149.951,-0.022,-6.844);
	CreateSphereTrigger(vStart,2.0,'TXT_SwatVan_Doors');
	
	SetVector(vStart,125.943,-0.162,-24.735);
	CreateSphereTrigger(vStart,2.0,'TXT_SwatVan_Doors01');
	
	SetVector(vStart,82.19,0.024,-66.573);
	CreateSphereTrigger(vStart,2.0,'TXT_SwatVan_Doors04');
	
	SetVector(vStart,81.68,-0.165,-83.9);
	CreateSphereTrigger(vStart,2.0,'TXT_SwatVan_Doors05');	
	
	{showTriggers(TRUE);}
	
End; {of InitTriggers}			


PROCEDURE InitSavePointsForBuddy;
BEGIN
	SetVector(vSave1Pos,105.1,0.7,-12.0);
	
	if (NIL = GetEntity('Gen_Save_Point') ) then 
	begin		
		if NOT level_bSafeOpen then	MoveEntity(GetEntity('Journalist'),vSave1Pos,0)
		else runscript('Journalist','Teleport');		
	end;
	
End;	
	
	
{*****************************************************}



PROCEDURE InitGameText;
BEGIN

	SetGameTextTeleType(false);

End; {of InitGameText}



{*****************************************************}



PROCEDURE InitStreetGuys;
BEGIN
		{TUNNEL SUBPACK}
		if(nil <> GetEntity('GUARD2')) then 
		begin
			AIAddEntity('GUARD2');
			AIAddHunterToLeaderSubPack('LEADER','TUNNEL_GUARD','GUARD2');
			AISetEntityVoiceID('GUARD2',VOICE_POLICE2VOICE2);						
		end;
		
		if(nil <> GetEntity('STREET1')) then 
		begin
			AIAddEntity('STREET1'); 
			AIAddHunterToLeaderSubPack('LEADER','TUNNEL_GUARD','STREET1');
			AISetEntityVoiceID('STREET1',VOICE_POLICE2VOICE1);												
		end;
		
		{STREET SUBPACK}
		if(nil <> GetEntity('STREET2')) then 
		begin
			AIAddEntity('STREET2');
			AIAddHunterToLeaderSubPack('LEADER','STREET_GUYS','STREET2');
			AISetEntityVoiceID('STREET2',VOICE_POLICE2VOICE1);			
		end;
		
		if(nil <> GetEntity('STREET3')) then 
		begin
			AIAddEntity('STREET3'); 
			AIAddHunterToLeaderSubPack('LEADER','STREET_GUYS_GUNS','STREET3');					
			AISetEntityVoiceID('STREET3',VOICE_POLICE2VOICE2);
		end;
		
		if(nil <> GetEntity('FLAT_OUTSIDE')) then 
		begin
			AIAddEntity('FLAT_OUTSIDE');
			AIAddHunterToLeaderSubPack('LEADER','STREET_GUYS_GUNS','FLAT_OUTSIDE');			
		end;
		
		if(nil <> GetEntity('STREET4')) then 
		begin
			AIAddEntity('STREET4');
			AIAddHunterToLeaderSubPack('LEADER','STREET_GUYS_GUNS','STREET4');			
		end;
		
		if(nil <> GetEntity('STREET5')) then 
		begin
			AIAddEntity('STREET5');
			AIAddHunterToLeaderSubPack('LEADER','STREET_GUYS_GUNS','STREET5');			
		end;
		
		if(nil <> GetEntity('STREET6')) then 
		begin
			AIAddEntity('STREET6');
			AIAddHunterToLeaderSubPack('LEADER','STREET_GUYS_GUNS','STREET6');			
		end;
					
End;



{*****************************************************}



PROCEDURE InitFlatGuys;
BEGIN
			
		if(nil <> GetEntity('FLAT1')) then 
		begin
			AIAddEntity('FLAT1');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT1');			
		end;
		
		if(nil <> GetEntity('FLAT2')) then 
		begin
			AIAddEntity('FLAT2');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT2');					
		end; 
		
		if(nil <> GetEntity('FLAT3')) then 
		begin
			AIAddEntity('FLAT3');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT3');			
		end;
		
		if(nil <> GetEntity('FLAT4')) then 
		begin
			AIAddEntity('FLAT4');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT4');			
		end;
		
		if(nil <> GetEntity('FLAT5')) then 
		begin
			AIAddEntity('FLAT5');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT5');			
		end;
		
		if(nil <> GetEntity('FLAT6')) then 
		begin
			AIAddEntity('FLAT6');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT6');			
		end;
		
		if(nil <> GetEntity('FLAT7')) then 
		begin
			AIAddEntity('FLAT7');
			AIAddHunterToLeaderSubPack('LEADER','FLAT_GUYS','FLAT7');			
		end;
		
End;


{************************ END OF LEVEL FUNCTIONS ************************}


{************************ CUT SCENES ************************}

{
SCRIPT Team2Start;
BEGIN
	
	AIDefineGoalGotoNodeIdle('gTeam2_1_GOTO','Team2_1',AISCRIPT_HIGHPRIORITY,'TEAM2_STOP1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gTeam2_2_GOTO','Team2_2',AISCRIPT_HIGHPRIORITY,'TEAM2_STOP1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gTeam2_3_GOTO','Team2_3',AISCRIPT_HIGHPRIORITY,'TEAM2_STOP1',AISCRIPT_RUNMOVESPEED,TRUE);
	
	sleep(500);
	
	AIAddGoalForSubPack('LEADER','SUBWAY_GUYS','gTeam2_1_GOTO');
	AIAddGoalForSubPack('LEADER','SUBWAY_GUYS','gTeam2_2_GOTO');
	AIAddGoalForSubPack('LEADER','SUBWAY_GUYS','gTeam2_3_GOTO');
	
	removethisscript;
End;
}


END. {end of LevelScripts}