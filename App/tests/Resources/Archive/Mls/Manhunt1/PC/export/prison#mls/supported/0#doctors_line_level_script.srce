{$t-}	{	trace off 	}
{	Program Description		}
{							}
SCRIPTMAIN	Doctors_Line_Level_Script;

ENTITY
	Prison : et_level;
	
	{ Main level load script, entity must therefore be defined as level name }	
	
VAR
	searchlight1_going_left	 : INTEGER;

SCRIPT	OnCreate;
  
VAR

	TNutterVec1 : 	Vec3d;
	TNutterVec2 : 	Vec3d; 
	FacingVec	:	Vec3d;
	boxA		: 	Vec3d;
	boxB		: 	Vec3d;
	lineA		: 	Vec3d;
	lineB		:	Vec3d;
	pEntity		:	EntityPtr;
	pDoor		:	EntityPtr;


begin


SetNumberOfKillableHuntersinLevel(45,3);

SwitchLitterOn(false);
ForceWeatherType(WEATHER_CLEAR, TRUE);
	
HandCamSetVideoEffectFuzz(FALSE);

HandCamSetVideoEffectScrollBar(FALSE); 

 

HandCamSetVideoEffectRecordDot(FALSE);

HandCamSetVideoEffectTimeCode(FALSE);



	
	
	
	
	
	
	
	
    AIDefineGoalHuntEnemy('gHuntPlayer', 'player', true, 16); 
    { Used by the two hunters at the start of the level who enter through gate }
    
    
    AIDefineGoalHuntEnemy('gNutPlayer', 'player', true, 16);
    
    
   
    
    
    
   	{AIDefineGoalGuardLookAtEntity('gWR1', AISCRIPT_HIGHPRIORITY, 'Node_WR1', 0.0, 0.0, 2, 'player');
   	AIDefineGoalGuardLookAtEntity('gWR2', AISCRIPT_HIGHPRIORITY, 'Node_WR2', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR3', AISCRIPT_HIGHPRIORITY, 'Node_WR3', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR4', AISCRIPT_HIGHPRIORITY, 'Node_WR4', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR5', AISCRIPT_HIGHPRIORITY, 'Node_WR5', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR6', AISCRIPT_HIGHPRIORITY, 'Node_WR6', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR7', AISCRIPT_HIGHPRIORITY, 'Node_WR7', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR8', AISCRIPT_HIGHPRIORITY, 'Node_WR8', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gWR9', AISCRIPT_HIGHPRIORITY, 'Node_WR9', 0.0, 0.0, 2, 'player');
}


	AIDefineGoalGotoNodeIdle('gWR1', 'Hunter_Rabbit', AISCRIPT_LOWPRIORITY, 'Node_WR1', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoNodeIdle('gWR2', 'Hunter_Rabbit', AISCRIPT_LOWPRIORITY, 'Node_WR2', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoNodeIdle('gWR4', 'Hunter_Rabbit', AISCRIPT_LOWPRIORITY, 'Node_WR4', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoNodeIdle('gWR5', 'Hunter_Rabbit', AISCRIPT_LOWPRIORITY, 'Node_WR5', AISCRIPT_RUNMOVESPEED, true);

	AIDefineGoalGotoNodeIdle('gWR6', 'Hunter_Rabbit2', AISCRIPT_LOWPRIORITY, 'Node_WR6', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoNodeIdle('gWR7', 'Hunter_Rabbit2', AISCRIPT_LOWPRIORITY, 'Node_WR7', AISCRIPT_RUNMOVESPEED, true);
	
	AIDefineGoalGotoNodeIdle('gWR7Rab3', 'Hunter_Rabbit3', AISCRIPT_LOWPRIORITY, 'Node_WR7', AISCRIPT_RUNMOVESPEED, true);

	AIDefineGoalGotoNodeIdle('gWR8', 'Hunter_Rabbit3', AISCRIPT_LOWPRIORITY, 'Node_WR8', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoNodeIdle('gWR9', 'Hunter_Rabbit3', AISCRIPT_LOWPRIORITY, 'Node_WR9', AISCRIPT_RUNMOVESPEED, true);


	AIDefineGoalGuardLookAtEntity('gLure', AISCRIPT_MEDIUMPRIORITY, 'Node_Lure', 0.0, 10.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gShotgun', AISCRIPT_HIGHPRIORITY, 'Node_Shotgun', 5.0, 3.0, 2, 'Hunter_Lure');

	AIDefineGoalGuard('gShotgun3', AISCRIPT_MEDIUMPRIORITY, 'Node_Shotgun3', 0.0, 10.0, 2);






	AIDefineGoalGuardLookAtEntity('gScrew', AISCRIPT_MEDIUMPRIORITY, 'Node_Screw', 10.0, 30.0, 2, 'player');
	AIDefineGoalGotoNode('gScrewWalk', 'Hunter_Screw', AISCRIPT_HIGHPRIORITY, 'Node_Screw', AISCRIPT_WALKMOVESPEED, TRUE);
	{AIDefineGoalGotoNode('gScrewLightswitch1', 'Hunter_Screw', AISCRIPT_HIGHPRIORITY, 'Node_Lightswitch1', AISCRIPT_RUNMOVESPEED, TRUE);
	AIDefineGoalGotoNode('gScrewLightswitch2', 'Hunter_Screw', AISCRIPT_HIGHPRIORITY, 'Node_Lightswitch2', AISCRIPT_WALKMOVESPEED, TRUE);
	}
	{AIDefineGoalGotoEntity('gBlock1A', 'Hunter_Block1A', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock1B', 'Hunter_Block1B', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock1C', 'Hunter_Block1C', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	
	AIDefineGoalGotoEntity('gBlock2A', 'Hunter_Block2A', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock2B', 'Hunter_Block2B', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock2C', 'Hunter_Block2C', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	
	AIDefineGoalGotoEntity('gBlock3A', 'Hunter_Block3A', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock3B', 'Hunter_Block3B', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock3C', 'Hunter_Block3C', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	
	
	AIDefineGoalGotoEntity('gBlock4A', 'Hunter_Block4A', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock4B', 'Hunter_Block4B', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoEntity('gBlock4C', 'Hunter_Block4C', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_WALKMOVESPEED, true);
	}
	
	
	AIDefineGoalGotoEntity('gBlock1A', 'Hunter_Block1A', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

    AIDefineGoalGotoEntity('gBlock1B', 'Hunter_Block1B', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

    AIDefineGoalGotoEntity('gBlock1C', 'Hunter_Block1C', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoEntity('gBlock2A', 'Hunter_Block2A', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoEntity('gBlock2B', 'Hunter_Block2B', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoEntity('gBlock2C', 'Hunter_Block2C', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

            AIDefineGoalGotoEntity('gBlock3A', 'Hunter_Block3A', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

            AIDefineGoalGotoEntity('gBlock3B', 'Hunter_Block3B', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

            AIDefineGoalGotoEntity('gBlock3C', 'Hunter_Block3C', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

            

            

            AIDefineGoalGotoEntity('gBlock4A', 'Hunter_Block4A', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

            AIDefineGoalGotoEntity('gBlock4B', 'Hunter_Block4B', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

            AIDefineGoalGotoEntity('gBlock4C', 'Hunter_Block4C', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

 


	
	
	
	AIDefineGoalGotoEntity('gMPArmoury', 'Hunter_MPArmoury', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	
	
	{AIDefineGoalGuardLookAtEntity('gRabbitLook1', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP1', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook2', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP2', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook3', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP3', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook4', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP4', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook5', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP5', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook6', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP6', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook7', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP7', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook8', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP8', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook9', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP9', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook10', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP10', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook11', AISCRIPT_HIGHPRIORITY, 'Node_RabbitP11', 0.0, 5.0, 2, 'player');
	}
	
	AIDefineGoalGotoNode('gGatePhase1A', 'Hunter_Phase1A', AISCRIPT_VERYHIGHPRIORITY, 'Node_GatePhase1A', AISCRIPT_RUNMOVESPEED, TRUE);
	AIDefineGoalGotoNode('gGatePhase1B', 'Hunter_Phase1A', AISCRIPT_VERYHIGHPRIORITY, 'Node_GatePhase1B', AISCRIPT_RUNMOVESPEED, TRUE);
	
	AIDefineGoalGotoNode('gGatePhase1BHB', 'Hunter_Phase1B', AISCRIPT_VERYHIGHPRIORITY, 'Node_GatePhase1B', AISCRIPT_RUNMOVESPEED, TRUE);
	AIDefineGoalGotoNode('gGatePhase1BHC', 'Hunter_Phase1C', AISCRIPT_VERYHIGHPRIORITY, 'Node_GatePhase1B', AISCRIPT_RUNMOVESPEED, TRUE);
	
	
	
	AIDefineGoalGotoNode('gGatePhase1BError', 'Hunter_Phase1A', AISCRIPT_VERYHIGHPRIORITY, 'Node_GatePhase1B', AISCRIPT_RUNMOVESPEED, TRUE);
	
	AIDefineGoalHideNamedHunter('gHidePhase1A', 'Hunter_Phase1A', AISCRIPT_HIGHPRIORITY, 'player', 10, 0);
	
	AIDefineGoalSeekCoverBackwards('gSeekCover1A', 'Hunter_Phase1A', AISCRIPT_MEDIUMPRIORITY, 'player',1); 
	AIDefineGoalSeekCoverBackwards('gSeekCover1B', 'Hunter_Phase1B', AISCRIPT_MEDIUMPRIORITY, 'player',1); 
	AIDefineGoalSeekCoverBackwards('gSeekCover1C', 'Hunter_Phase1C', AISCRIPT_MEDIUMPRIORITY, 'player',1); 
	
	AIDefineGoalOrbitEntity('gOrbit1A', 'Hunter_Phase1A', AISCRIPT_VERYHIGHPRIORITY, 'player', 20, 30, 1);
	AIDefineGoalOrbitEntity('gOrbit1B', 'Hunter_Phase1B', AISCRIPT_VERYHIGHPRIORITY, 'player', 20, 35, 1);
	AIDefineGoalOrbitEntity('gOrbit1C', 'Hunter_Phase1C', AISCRIPT_VERYHIGHPRIORITY, 'player', 20, 35, 1);
	
	
	
	AIDefineGoalOrbitEntity('gOrbit1D', 'Hunter_Phase1D', AISCRIPT_VERYHIGHPRIORITY, 'player', 15, 25, 1);
	
	AIDefineGoalOrbitEntity('gOrbit1E', 'Hunter_Phase1E', AISCRIPT_VERYHIGHPRIORITY, 'player', 15, 25, 1);
	AIDefineGoalOrbitEntity('gOrbit1F', 'Hunter_Phase1F', AISCRIPT_VERYHIGHPRIORITY, 'player', 15, 25, 1);
	
	AIDefineGoalOrbitEntity('gOrbit1G', 'Hunter_Phase1G', AISCRIPT_VERYHIGHPRIORITY, 'player', 20, 25, 1);
	
	
	
	{AIDefineGoalGotoNode('gPigsySmash', 'Hunter_Pigsy', AISCRIPT_VERYHIGHPRIORITY, 'Node_PigsyKill', AISCRIPT_RUNMOVESPEED, TRUE);}
		
{	AIDefineGoalGuardLookAtEntity('gNutLook1', AISCRIPT_HIGHPRIORITY, 'Node_Nut01', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gNutLook2', AISCRIPT_HIGHPRIORITY, 'Node_Nut02', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gNutLook3', AISCRIPT_HIGHPRIORITY, 'Node_Nut03', 0.0, 5.0, 2, 'player');}
	
	
	{AIDefineGoalGotoNode('gTowerGoto1', 'Hunter_Runner', AISCRIPT_HIGHPRIORITY, 'NodeTowerTop', AISCRIPT_RUNMOVESPEED, true);}
	

	
	
	AIAddPlayer('player'); 
	{ Defines the name of the player for a pure AI level. }
	
	
	AISetSearchParams('CellSearch', 0.0, true, 0.0, 50, 0, 0, 0);
	{ Defines which searchables a hunter will investigate in the event of a search being required.
	  Can't remember what all the bloody parameters are. This example randomly chooses 50 percent
	  of the searchable objects within the level. I think. }



	

	

	IF GetEntity('Hunter_Rabbit') <> NIL THEN
	begin
		AIAddEntity('Hunter_Rabbit');
		AISetEntityAsLeader('Hunter_Rabbit');
		AISetHunterOnRadar('Hunter_Rabbit', TRUE);
		
		{AIAddLeaderEnemy('Hunter_Rabbit', 'player');}
		
		AIAddSubPackForLeader('Hunter_Rabbit', 'sFollowMe');
		AIAddAreaForSubPack('sFollowMe', 'aiPrison');
		
		AIAddHunterToLeaderSubPack('Hunter_Rabbit', 'sFollowMe', 'Hunter_Rabbit');
	
		
		AISetEntityAllowSurprise('Hunter_Rabbit', FALSE);
		SetEntityInvulnerable(GetEntity('Hunter_Rabbit'), true);
	end;
		
		
	IF GetEntity('leader1') <> NIL THEN
	begin
		AIAddEntity('leader1');
		AISetEntityAsLeader('leader1');
		AISetHunterOnRadar('leader1', FALSE);
		AISetLeaderInvisible('leader1');
		
		AIAddLeaderEnemy('leader1', 'player');
		
		AIAddSubPackForLeader('leader1', 'sPhase1');
		AIAddAreaForSubPack('sPhase1', 'aiShowers');
		
		{AIAddGoalForSubPack('leader1', 'sPhase1', 'gHuntPlayer');}
		AISetSubPackCombatType('leader1', 'sPhase1', COMBATTYPEID_OPEN_MELEE);
		AISubPackStayInTerritory('leader1', 'sPhase1', TRUE);
		
		
		
		
		AIAddSubPackForLeader('leader1', 'sCells');
		AIAddAreaForSubPack('sCells', 'aiShowers');
		AIAddAreaForSubPack('sCells', 'aiPrison');
		
		{AIAddGoalForSubPack('leader1', 'sCells', 'gHuntPlayer');}
		AISetSubPackCombatType('leader1', 'sCells', COMBATTYPEID_OPEN_MELEE);
		
		
		AIAddSubPackForLeader('leader1', 'sBlock1');

                        AIAddAreaForSubPack('sBlock1', 'aiShowers');

                        AIAddAreaForSubPack('sBlock1', 'aiPrison');

                        

                        AIAddGoalForSubPack('leader1', 'sBlock1', 'gHuntPlayer');

                        AISetSubPackCombatType('leader1', 'sBlock1', COMBATTYPEID_MELEE);

                        

                        AIAddSubPackForLeader('leader1', 'sBlock1Gun');

                        AIAddAreaForSubPack('sBlock1Gun', 'aiShowers');

                        AIAddAreaForSubPack('sBlock1Gun', 'aiPrison');

                        

                        AIAddGoalForSubPack('leader1', 'sBlock1Gun', 'gHuntPlayer');

                        AISetSubPackCombatType('leader1', 'sBlock1Gun', COMBATTYPEID_COVER);

                        

                        

                        AIAddSubPackForLeader('leader1', 'sBlock2');

                        AIAddAreaForSubPack('sBlock2', 'aiShowers');

                        AIAddAreaForSubPack('sBlock2', 'aiPrison');

                        

                        AIAddGoalForSubPack('leader1', 'sBlock2', 'gHuntPlayer');

                        AISetSubPackCombatType('leader1', 'sBlock2', COMBATTYPEID_MELEE);

                        

                        

                        AIAddSubPackForLeader('leader1', 'sBlock3');

                        AIAddAreaForSubPack('sBlock3', 'aiShowers');

                        AIAddAreaForSubPack('sBlock3', 'aiPrison');

                        

                        AIAddGoalForSubPack('leader1', 'sBlock3', 'gHuntPlayer');

                        AISetSubPackCombatType('leader1', 'sBlock3', COMBATTYPEID_MELEE);

                        

                        AIAddSubPackForLeader('leader1', 'sBlock3Gun');

                        AIAddAreaForSubPack('sBlock3Gun', 'aiShowers');

                        AIAddAreaForSubPack('sBlock3Gun', 'aiPrison');

                        

                        AIAddGoalForSubPack('leader1', 'sBlock3Gun', 'gHuntPlayer');

                        AISetSubPackCombatType('leader1', 'sBlock3Gun', COMBATTYPEID_COVER);

                        

                        AIAddSubPackForLeader('leader1', 'sBlock4');

                        AIAddAreaForSubPack('sBlock4', 'aiShowers');

                        AIAddAreaForSubPack('sBlock4', 'aiPrison');

                        

                        AIAddGoalForSubPack('leader1', 'sBlock4', 'gHuntPlayer');

                        AISetSubPackCombatType('leader1', 'sBlock4', COMBATTYPEID_MELEE);

		
		
		
		
		
		{AIAddSubPackForLeader('leader1', 'sBlock1');
		AIAddAreaForSubPack('sBlock1', 'aiShowers');
		AIAddAreaForSubPack('sBlock1', 'aiPrison');
		
		AIAddGoalForSubPack('leader1', 'sBlock1', 'gHuntPlayer');
		AISetSubPackCombatType('leader1', 'sBlock1', COMBATTYPEID_OPEN_MELEE);
		
		
		AIAddSubPackForLeader('leader1', 'sBlock2');
		AIAddAreaForSubPack('sBlock2', 'aiShowers');
		AIAddAreaForSubPack('sBlock2', 'aiPrison');
		
		AIAddGoalForSubPack('leader1', 'sBlock2', 'gHuntPlayer');
		AISetSubPackCombatType('leader1', 'sBlock2', COMBATTYPEID_OPEN_MELEE);
		
		
		AIAddSubPackForLeader('leader1', 'sBlock3');
		AIAddAreaForSubPack('sBlock3', 'aiShowers');
		AIAddAreaForSubPack('sBlock3', 'aiPrison');
		
		AIAddGoalForSubPack('leader1', 'sBlock3', 'gHuntPlayer');
		AISetSubPackCombatType('leader1', 'sBlock3', COMBATTYPEID_OPEN_MELEE);
		
		AIAddSubPackForLeader('leader1', 'sBlock4');
		AIAddAreaForSubPack('sBlock4', 'aiShowers');
		AIAddAreaForSubPack('sBlock4', 'aiPrison');
		
		AIAddGoalForSubPack('leader1', 'sBlock4', 'gHuntPlayer');
		AISetSubPackCombatType('leader1', 'sBlock4', COMBATTYPEID_OPEN_MELEE);
		}
		
		IF GetEntity('Hunter_Phase1A') <> NIL THEN
		begin
			SetHunterSkin(GetEntity('Hunter_Phase1A'), 2);
		
			SetHunterHeadSkin(GetEntity('Hunter_Phase1A'), 2);
			AIAddEntity('Hunter_Phase1A');
			AIAddHunterToLeaderSubPack('leader1', 'sPhase1', 'Hunter_Phase1A');
			AICancelHunterIdleAction('Hunter_Phase1A', AISCRIPT_IDLE_STANDANIMS);

		end; 

		
		IF GetEntity('Hunter_Phase1B') <> NIL THEN
		begin
			SetHunterSkin(GetEntity('Hunter_Phase1B'), 1);
		
			SetHunterHeadSkin(GetEntity('Hunter_Phase1B'), 1);
			AIAddEntity('Hunter_Phase1B');
			AIAddHunterToLeaderSubPack('leader1', 'sPhase1', 'Hunter_Phase1B');
		end; 
		
		IF GetEntity('Hunter_Phase1C') <> NIL THEN
		begin
			SetHunterSkin(GetEntity('Hunter_Phase1C'), 0);
		
			SetHunterHeadSkin(GetEntity('Hunter_Phase1C'), 0);
			AIAddEntity('Hunter_Phase1C');
			AIAddHunterToLeaderSubPack('leader1', 'sPhase1', 'Hunter_Phase1C');
		end; 
		
		IF GetEntity('Hunter_Phase1D') <> NIL THEN
		begin
			AIAddEntity('Hunter_Phase1D');
			{AISetIdleHomeNode('Hunter_Phase1D', 'Node_Home1');
			AISetHunterIdleActionMinMaxRadius('Hunter_Phase1D', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,20);
			}
			AIAddHunterToLeaderSubPack('leader1', 'sCells', 'Hunter_Phase1D');
			HideEntity(GetEntity('Hunter_Phase1D'));
		end; 

		
		IF GetEntity('Hunter_Phase1E') <> NIL THEN
		begin
			AIAddEntity('Hunter_Phase1E');
			{AISetIdleHomeNode('Hunter_Phase1E', 'Node_Home2');
			AISetHunterIdleActionMinMaxRadius('Hunter_Phase1E', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,20);
			}
			AIAddHunterToLeaderSubPack('leader1', 'sCells', 'Hunter_Phase1E');
			HideEntity(GetEntity('Hunter_Phase1E'));
		end; 
		
		IF GetEntity('Hunter_Phase1F') <> NIL THEN
		begin
			AIAddEntity('Hunter_Phase1F');
			{AISetIdleHomeNode('Hunter_Phase1F', 'Node_Home4');
			AISetHunterIdleActionMinMaxRadius('Hunter_Phase1F', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,20);
			}
			AIAddHunterToLeaderSubPack('leader1', 'sCells', 'Hunter_Phase1F');
			HideEntity(GetEntity('Hunter_Phase1F'));
		end; 
		
		IF GetEntity('Hunter_Phase1G') <> NIL THEN
		begin
			AIAddEntity('Hunter_Phase1G');
			{AISetIdleHomeNode('Hunter_Phase1G', 'Node_Home3');
			AISetHunterIdleActionMinMaxRadius('Hunter_Phase1G', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,20);
			}
			AIAddHunterToLeaderSubPack('leader1', 'sCells', 'Hunter_Phase1G');
				HideEntity(GetEntity('Hunter_Phase1G'));
		end; 
		
		
		
	end;

	
	{_________________________________________________________________________________}	
	{**********************      Miscellaneous shit    *******************************}
	{_________________________________________________________________________________}	
		

	ShowTriggers(false);
	
	
	SetVector(lineA, 198.3, 1.5, -2.8);
	SetVector(lineB, 198.3, 1.5, 5.9);
	CreateLineTrigger(lineA, lineB, 'tPhase1');
		
		
	SetVector(lineA, 198.3, 1.5, -2.8);
	SetVector(lineB, 198.3, 1.5, 5.9);
	CreateLineTrigger(lineA, lineB, 'tCheckPhase1');

	SetVector(lineA, 217.6, 0.0, 14.91);
	SetVector(lineB, 213.01, 3.0, 18.70);
	{SetVector(lineA, 218.7, 1.5, 13.8);
	SetVector(lineB, 218.9, 1.5, 18.5);}
	CreateBoxTrigger(lineA, lineB, 'tCheckPhase2');
	

	
	SetVector(boxA, 284.7, 4.9, -46.3);
	SetVector(boxB, 281.4, 7.0, -48.4);
	CreateBoxTrigger(boxA, boxB, 'tBeginDeathRow');
		
	SetVector(boxA, 251.58, 6.94, 2.2);
	SetVector(boxB, 249.71, 7.4, 1.65);
	CreateBoxTrigger(boxA, boxB, 'tSensor');
	
	
	SetVector(lineA, 278.85, 0.0, 4.04);
	SetVector(lineB, 283.52, 1.5, 2.11);
	CreateBoxTrigger(lineA, lineB, 'tCheckPhase4');
	
	
	SetVector(lineA, 263.4, 8.4, -27.2);
	SetVector(lineB, 257.5, 8.4, -27.2);
	CreateLineTrigger(lineA, lineB, 'tFiringFinale');
	
	
	SetVector(lineA, 256.3, 8.4, -30.7);
	SetVector(lineB, 219.6, 8.4, -42.6);
	CreateLineTrigger(lineA, lineB, 'tFiringCut');
	
	
	{SetVector(lineA, 278.77, 8.26, -19.2);
	SetVector(lineB, 285.25, 9.4, -27.79);
	CreateBoxTrigger(lineA, lineB, 'TBodyBag');}
	
	
	
	{SetVector(boxA, 287.4, 5.1, -56.1);
	SetVector(boxB, 287.6, 8.1, -58.8);
	CreateBoxTrigger(boxA, boxB, 'tSendRabbit9');
	
	
	
	SetVector(boxA, 272.1, 7.0, -44.7);
	SetVector(boxB, 270.1, 10.1, -45.5);
	CreateBoxTrigger(boxA, boxB, 'tMetDetApp');
	
	SetVector(boxA, 272.1, 7.0, -41.6);
	SetVector(boxB, 270.1, 10.1, -37.6);
	CreateBoxTrigger(boxA, boxB, 'tMetDetBox');
	

	SetVector(boxA, 270.7, 7.0, -21.6);
	SetVector(boxB, 270.3, 10.1, -25.0);
	CreateBoxTrigger(boxA, boxB, 'tMetalLock');
	
	SetVector(boxA, 264.5, 7.0, -10.7);
	SetVector(boxB, 273.3, 10.1, -18.1);
	CreateBoxTrigger(boxA, boxB, 'tPigsyAttack');


	SetVector(boxA, 257.6, 7.0, -29.2);
	SetVector(boxB, 263.0, 10.1, -25.8);
	CreateBoxTrigger(boxA, boxB, 'tPhase6Popout');}


	
	{ Plays sleeping animation of the guy in the electric chair. Last boolean defines
	  whether the animation should loop continuously. True means it should. }
	{	pEntity:=GetEntity('Fried_Hunter');
		EntityPlayAnim(pEntity,'Fried_Hunter_Sleep', true);}

	{ Phase one doors }
	
		{ Door leading to shower block }
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)12');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
        
        
        pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)13');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
        
        
        pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)16');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
        
        
        pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)17');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
	
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)05');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)21');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)06');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)26');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)27');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)19');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)20');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		{pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)26');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)27');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);}
		
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
			
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)01');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)09');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
			
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)10');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)11');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
			
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)22');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)23');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
			
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)24');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)25');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		
	
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)06');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		
		{Two doors just after death row}
	
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)18');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		
		
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)14');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		

		pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);


		{pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)06');
			
		UnFreezeEntity(pDoor);
		SetSlideDoorSpeed(pDoor, 1.6);
		SetSlideDoorAjarDistance(pDoor, 0.0);
		SetDoorState(pDoor, DOOR_CLOSING);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		}
	
	
		
		{control room door}
		{pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)19');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		}
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)04');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)05');
		UnFreezeEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)07');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)08');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)09');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)10');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)11');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)12');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)13');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)14');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)15');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)16');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)17');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)18');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)21');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
        
        
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)19');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
	
		SetDoorOpenAngleIn(pDoor,90.0);

        SetDoorOpenAngleOut(pDoor,90.0);
        
		
		
		{SetGameTextTeleType(FALSE);
	
		SetGameTextBoxPosition(0.1,0.05);
	
		SetGameTextDisplayTime(10000);
		SetGameTextBoxSize(0.84, 0.06);}
		
		
		
		{pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)03');
		SetSlideDoorAjarDistance(pDoor, 2.47);
		UnlockEntity(pDoor);
		SetDoorState(pDoor, DOOR_OPENING);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
		
		pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)04');
		SetSlideDoorAjarDistance(pDoor, 2.47);
		UnlockEntity(pDoor);
		SetDoorState(pDoor, DOOR_OPENING);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
		
		}
		pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)');
		SetSlideDoorAjarDistance(pDoor, 2.47);
		UnlockEntity(pDoor);
		SetDoorState(pDoor, DOOR_OPENING);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
		
		{pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)04');
		SetSlideDoorAjarDistance(pDoor, 2.47);
		UnlockEntity(pDoor);
		SetDoorState(pDoor, DOOR_OPENING);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));}
		

		pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)06');
		SetSlideDoorAjarDistance(pDoor, 2.47);
		UnlockEntity(pDoor);
		SetDoorState(pDoor, DOOR_OPENING);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

end; { end OnCreate }





end. { end of level script }
   