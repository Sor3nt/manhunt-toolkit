SCRIPTMAIN	LevelScripts;

ENTITY
	Subway		:	et_level;

{******** THIS IS THE INIT SCRIPT FOR THE SUBWAY SECTION ********}
CONST

TYPE
tLocation		= 	(None, Tracks, Station, PowerStation);

VAR
{globals}
vStart				: vec3d;
vEnd				: vec3d;
vGuardDirection 	: vec3d;

{LEVEL SCOPED VARS}
level_bPowerIsOn,			
bGeneratorActive		: boolean;

tTeamTask				: integer;	{0 - doing nothing	}
									{1 - ReGrouping		}
									{2 - Sweeping		}
									
bIsTeamSweeping				: boolean;
bIsTeamReGrouping			: boolean;
bIsTeamZeroingIn			: boolean;
sSpotter					: string[40];

level_bIsAlertOn			: boolean;
bHasAssaultPlayed			: boolean;

level_NumberInTeam2			: integer;
level_NumberInTeam3			: integer;

Level_PowerFirstTime		: boolean;

{************************************ FUNCTION HEADERS ************************************}
PROCEDURE InitAreas (); FORWARD;
PROCEDURE InitTriggers(); FORWARD;
PROCEDURE CheckSavePoints(); FORWARD;
PROCEDURE InitGameText(); FORWARD;
FUNCTION  SpawnHunterInPackAtVectorWithWeapon(VAR vGuyPoz : vec3d ; sWeapon : eCollectableType; iAmmo : integer; sName, sType, sPack : string) : entityptr; FORWARD;	
{********************************* END OF FUNCTION HEADERS ********************************}


{************************ LEVEL SCRIPTS ************************}


SCRIPT OnCreate;
VAR
vDirection	:	vec3d;
i			: 	integer;
BEGIN

AIClearAllActiveAreaAssociations;

writeDebug('SUBWAY Level Init');

	{INIT OF LEVEL FLAGS}
	tTeamTask				:= 0; { doing nothing	}	
	level_bIsAlertOn		:= FALSE;
	bGeneratorActive		:= FALSE;	
	
	if( 
	(NIL <> GetEntity('Gen_Save_Point')) 
	AND
	(NIL <> GetEntity('Gen_Save_Point01')) {both saves are there so no cut has occurred}
	)then 
	begin
		level_bPowerIsOn		:= TRUE;
		bHasAssaultPlayed 		:= FALSE;
		Level_PowerFirstTime 	:= TRUE;
		
		level_NumberInTeam2 	:= 0;
		level_NumberInTeam3 	:= 0;
	end;
			
	{Add the player}		
	AIAddPlayer('player');
	
	{define the goals}
	AIDefineGoalHuntEnemy('gHuntPlayer', 'player',false,10); 
	
	{*** TEAM1 GOAL DEFINITIONS ***}
	AIDefineGoalGotoNode('gTeam1_2GoTo','Team1_2',AISCRIPT_VERYHIGHPRIORITY,'Hold_TEAM1_2',AISCRIPT_RUNMOVESPEED,TRUE);
	
	SetVector(vDirection, 0.97, -0.07, -0.1);
	AIDefineGoalGuardDirection('gHold_TEAM1_2',AISCRIPT_HIGHPRIORITY,'Hold_TEAM1_2',2.0,2.0,1,vDirection);
	AIGuardModifyShootOutsideRadius('gHold_TEAM1_2',TRUE);
	
	AIDefineGoalGuard('gStart_TEAM1_3',AISCRIPT_HIGHPRIORITY,'Start_TEAM1_3',6.0,8.0,1); 				
	
	{*** TEAM2 GOAL DEFINITIONS ARE DECLARED IN DefineGoalsForTeam() *** }
	
	{*** TEAM3 GOAL DEFINITIONS ***}
	AIDefineGoalGotoNode('gTeam3_1MoveIn','Team3_1',AISCRIPT_MEDIUMPRIORITY,'Arrive_Station',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gTeam3_2MoveIn','Team3_2',AISCRIPT_MEDIUMPRIORITY,'Arrive_Station2',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gTeam3_3MoveIn','Team3_3',AISCRIPT_MEDIUMPRIORITY,'Arrive_Station3',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gTeam3_1CheckDoor','Team3_1',AISCRIPT_MEDIUMPRIORITY,'Check_Door',AISCRIPT_RUNMOVESPEED,TRUE);	
	AIDefineGoalGotoNode('gTeam3_1CheckRoom','Team3_1',AISCRIPT_MEDIUMPRIORITY,'Team3_1InRoom',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gTeam3_2CheckPlayer','Team3_2',AISCRIPT_MEDIUMPRIORITY,'CheckPlayer',AISCRIPT_RUNMOVESPEED,TRUE);	
	
	{*** POWERSTATION GUARDS GOAL DEFINITIONS ***}
		
	AIDefineGoalGuard('gDoor1_Guard',AISCRIPT_HIGHPRIORITY,'Door1_Guard',1.0,4.0,1);
	AIGuardModifyShootOutsideRadius('gDoor1_Guard',TRUE);
	
	AIDefineGoalGuard('gDoor2_Guard',AISCRIPT_HIGHPRIORITY,'Door2_Guard',1.0,4.0,1);
	AIGuardModifyShootOutsideRadius('gDoor2_Guard',TRUE);
	
	AIDefineGoalGuard('gDoor3_Guard',AISCRIPT_HIGHPRIORITY,'Door3_Guard',1.0,6.0,1);
	AIGuardModifyShootOutsideRadius('gDoor3_Guard',TRUE);	
	
	AIDefineGoalGuard('gPSta_Vantage1',AISCRIPT_MEDIUMPRIORITY,'PSta_Vantage1',1.5,8.0,1);
	AIGuardModifyShootOutsideRadius('gPSta_Vantage1',TRUE);
		
	AIDefineGoalGuard('gPSta_Vantage2',AISCRIPT_HIGHPRIORITY,'PSta_Vantage2',0.5,1.5,1);
	AIGuardModifyShootOutsideRadius('gPSta_Vantage2',TRUE);
	
	AIDefineGoalGuard('gPSta_Vantage3',AISCRIPT_HIGHPRIORITY,'PSta_Vantage3',1.5,8.0,1);
	AIGuardModifyShootOutsideRadius('gPSta_Vantage3',TRUE);
	
	AIDefineGoalGotoNodeIdle('gGuard01_Idle','Guard01',AISCRIPT_LOWPRIORITY,'Guard01_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gGuard02_Idle','Guard02',AISCRIPT_LOWPRIORITY,'Guard02_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gGuard03_Idle','Guard03',AISCRIPT_LOWPRIORITY,'Guard03_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gGuard04_Idle','Guard04',AISCRIPT_LOWPRIORITY,'Guard04_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gGuard05_Idle','Guard05',AISCRIPT_LOWPRIORITY,'Guard05_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gGuard06_Idle','Guard06',AISCRIPT_LOWPRIORITY,'Guard06_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	
	SetVector(vDirection,81.0,-32.13,218.6);
	AIDefineGoalGotoVector('gGuard06_CutScene','Guard06',AISCRIPT_MEDIUMPRIORITY,'PSta_Vantage2',vDirection,AISCRIPT_RUNMOVESPEED,TRUE);
	
	
	{*** EXITSTATION COPS GOAL DEFINITIONS ***}
	AIDefineGoalGotoNodeIdle('gCop02_ComeIn','Cop02',AISCRIPT_MEDIUMPRIORITY,'Cop02_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	AIDefineGoalGotoNodeIdle('gCop03_ComeIn','Cop03',AISCRIPT_MEDIUMPRIORITY,'Cop03_Idle',AISCRIPT_WALKMOVESPEED,TRUE);
	
	AIDefineGoalGotoNode('gCop04_RunIn','Cop04',AISCRIPT_MEDIUMPRIORITY,'UpTheStairs_Left',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCop05_RunIn','Cop05',AISCRIPT_MEDIUMPRIORITY,'UpTheStairs_Right',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoEntity('gCop06_RunIn','Cop06',AISCRIPT_MEDIUMPRIORITY,'player',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCop07_RunInL','Cop07',AISCRIPT_MEDIUMPRIORITY,'Upstairs_Pillar1',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCop07_RunInR','Cop07',AISCRIPT_MEDIUMPRIORITY,'Upstairs_Pillar2',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCop08_RunInL','Cop08',AISCRIPT_MEDIUMPRIORITY,'Turnstiles_left',AISCRIPT_RUNMOVESPEED,TRUE);
	AIDefineGoalGotoNode('gCop08_RunInR','Cop08',AISCRIPT_MEDIUMPRIORITY,'Turnstiles_right',AISCRIPT_RUNMOVESPEED,TRUE);

	SetVector(vDirection,0.4,-0.1,0.9);
	
	AIDefineGoalGuard('gCop10_Guard',AISCRIPT_HIGHPRIORITY,'Cop10_Guard',0.5,3.0,1);
	AIGuardModifyShootOutsideRadius('gCop10_Guard',TRUE);

	AIDefineGoalGuard('gCop11_Guard',AISCRIPT_HIGHPRIORITY,'Cop11_Guard',0.5,3.0,1);
	AIGuardModifyShootOutsideRadius('gCop11_Guard',TRUE);
	
	AIDefineGoalGuard('gCop09_Guard',AISCRIPT_HIGHPRIORITY,'Cop09_Guard',2.0,3.0,1);
	AIGuardModifyShootOutsideRadius('gCop09_Guard',TRUE);
		
	{Add the LEADER and his enemy}
	if(nil <> GetEntity('LEADER')) then 
	begin
		AIAddEntity('LEADER');
		AISetEntityAsLeader('LEADER');
		AIAddLeaderEnemy('LEADER','player');
		
		AIEntityAlwaysEnabled('LEADER');
		AISetLeaderInvisible('LEADER');
		
		{Create the subpacks}
		AIAddSubPackForLeader('LEADER','Team1');
		AIAddSubPackForLeader('LEADER','Team2');
		AIAddSubPackForLeader('LEADER','Team3');
		AIAddSubPackForLeader('LEADER','PowerStation');
		AIAddSubPackForLeader('LEADER','Cops');
		
			
		{hide the leader from the radar}
		AISetHunterOnRadar('LEADER',false);
				
		{ADD THE HUNTERS on the map}
		
		InitAreas;
		
		{*******************************************}
		{*** REMEMBER: TEAMS 2 and 3 ARE SPAWNED ***}
		{*******************************************}
				
		{*** INIT TEAM1 ALREADY IN THE LEVEL AT START ***}
		
		if(nil <> GetEntity('Team1_1')) then 
		begin
			AIAddEntity('Team1_1');
			AIAddHunterToLeaderSubPack('LEADER','Team1','Team1_1');
			
			AISetHunterIdleAction('Team1_1',AISCRIPT_IDLE_SPEECH,AISCRIPT_VERYHIGHPRIORITY);		
					
		end;
		
		if(nil <> GetEntity('Team1_2')) then 
		begin
			AIAddEntity('Team1_2');
			AIAddHunterToLeaderSubPack('LEADER','Team1','Team1_2');
			
			AISetHunterIdleAction('Team1_2',AISCRIPT_IDLE_SPEECH,AISCRIPT_VERYHIGHPRIORITY);		
					
		end;
		
		if(nil <> GetEntity('Team1_3')) then 
		begin
			AIAddEntity('Team1_3');
			AIAddHunterToLeaderSubPack('LEADER','Team1','Team1_3');
			
			AICancelHunterIdleAction('Team1_3',AISCRIPT_IDLE_SPEECH);
			AICancelHunterIdleAction('Team1_3',AISCRIPT_IDLE_STANDANIMS);		
					
		end;		
		
		{*** INIT POWERSTATION GUARDS ***}

		if(nil <> GetEntity('Guard01')) then 
		begin
			AIAddEntity('Guard01');
			AIAddHunterToLeaderSubPack('LEADER','PowerStation','Guard01');					
			AISetHunterIdleAction('Guard01',AISCRIPT_IDLE_SPEECH,AISCRIPT_VERYHIGHPRIORITY);
							
		end;
		
		if(nil <> GetEntity('Guard02')) then 
		begin
			AIAddEntity('Guard02');
			AIAddHunterToLeaderSubPack('LEADER','PowerStation','Guard02');					
			AISetHunterIdleAction('Guard02',AISCRIPT_IDLE_SPEECH,AISCRIPT_VERYHIGHPRIORITY);
			
		end;
		
		if(nil <> GetEntity('Guard03')) then 
		begin
			AIAddEntity('Guard03');
			AIAddHunterToLeaderSubPack('LEADER','PowerStation','Guard03');					
			AISetHunterIdleAction('Guard03',AISCRIPT_IDLE_STANDANIMS,AISCRIPT_VERYHIGHPRIORITY);				
		end;
		
		if(nil <> GetEntity('Guard04')) then 
		begin
			AIAddEntity('Guard04');
			AIAddHunterToLeaderSubPack('LEADER','PowerStation','Guard04');					
			AISetHunterIdleAction('Guard04',AISCRIPT_IDLE_SPEECH,AISCRIPT_VERYHIGHPRIORITY);
			
		end;
		
		if(nil <> GetEntity('Guard05')) then 
		begin
			AIAddEntity('Guard05');
			AIAddHunterToLeaderSubPack('LEADER','PowerStation','Guard05');					
			AISetHunterIdleAction('Guard05',AISCRIPT_IDLE_SPEECH,AISCRIPT_VERYHIGHPRIORITY);
			
		end;
		
		if(nil <> GetEntity('Guard06')) then 
		begin
			AIAddEntity('Guard06');
			AIEntityAlwaysEnabled('Guard06'); {this is for CUT-SCENE purposes}
			AIAddHunterToLeaderSubPack('LEADER','PowerStation','Guard06');					
			AISetHunterIdleAction('Guard06',AISCRIPT_IDLE_STANDANIMS,AISCRIPT_VERYHIGHPRIORITY);				
		end;	
			
		
		{*** INIT EXIT-STATION COPS ***}
		if(nil <> GetEntity('Cop01')) then 
		begin
			AIAddEntity('Cop01');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop01');					
		end;	
		
		if(nil <> GetEntity('Cop02')) then 
		begin
			AIAddEntity('Cop02');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop02');					
		end;	
		
		if(nil <> GetEntity('Cop03')) then 
		begin
			AIAddEntity('Cop03');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop03');					
		end;
		
		if(nil <> GetEntity('Cop04')) then 
		begin
			AIAddEntity('Cop04');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop04');					
		end;
		
		if(nil <> GetEntity('Cop05')) then 
		begin
			AIAddEntity('Cop05');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop05');					
		end;
		
		if(nil <> GetEntity('Cop06')) then 
		begin
			AIAddEntity('Cop06');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop06');					
		end;
		
		if(nil <> GetEntity('Cop07')) then 
		begin
			AIAddEntity('Cop07');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop07');					
		end;
		
		if(nil <> GetEntity('Cop08')) then 
		begin
			AIAddEntity('Cop08');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop08');					
		end;
		
		if(nil <> GetEntity('Cop09')) then 
		begin
			AIAddEntity('Cop09');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop09');					
		end;
		
		if(nil <> GetEntity('Cop10')) then 
		begin
			AIAddEntity('Cop10');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop10');					
		end;

	if(nil <> GetEntity('Cop11')) then 
		begin
			AIAddEntity('Cop11');
			AIAddHunterToLeaderSubPack('LEADER','Cops','Cop11');					
		end;
	
		{Add the BASIC goals to the subpacks - other goals are inside each hunter's script }
	
		{*** TEAM1 ***}
		AIAddGoalForSubPack('LEADER','Team1','gHuntPlayer');
		
		{*** TEAM2 MEMBERS SPAWNED BY HUNTERS_GENERATOR1 ***}
		AIAddGoalForSubPack('LEADER','Team2','gHuntPlayer');		
		
		{*** TEAM3 SPAWNED BY ASSAULT_CUT ***}
		AIAddGoalForSubPack('LEADER','Team3','gHuntPlayer');		
		
		{*** POWERSTATION GUARDS ***}
		AIAddGoalForSubPack('LEADER','PowerStation','gHuntPlayer');
		
		{*** EXITSTATION COPS ***}
		AIAddGoalForSubPack('LEADER','Cops','gHuntPlayer');
		
		{Set the combat types per subpack}
		AISetSubpackCombatType('LEADER','Team1',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','Team2',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','Team3',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','PowerStation',COMBATTYPEID_COVER);
		AISetSubpackCombatType('LEADER','Cops',COMBATTYPEID_COVER);
	
		
		{set the search parameters}
		{NONE REQUIRED}
			
						
	end;
	
	
	HideEntity(GetEntity('CJ_TUBE(WHOLE)_(M)01')); 
	HideEntity(GetEntity('CJ_TUBE(WHOLE)_(M)02')); 
	
	InitTriggers;
	CheckSavePoints;
	InitGameText;	
	
	if (NIL <> GetEntity('Gen_Maintenance_MetalDoor_(D)01'))then SetDoorOpenAngleIn(GetEntity('Gen_Maintenance_MetalDoor_(D)01'),90);
	if (NIL <> GetEntity('Gen_Maintenance_MetalDoor_(D)01'))then SetDoorOpenAngleOut(GetEntity('Gen_Maintenance_MetalDoor_(D)01'),90);
	
	if (NIL <> GetEntity('CJ_METALDOOR2_(D)'))then SetDoorOpenAngleIn(GetEntity('CJ_METALDOOR2_(D)'),90);
	if (NIL <> GetEntity('CJ_METALDOOR2_(D)'))then SetDoorOpenAngleOut(GetEntity('CJ_METALDOOR2_(D)'),90);
	
	if (NIL <> GetEntity('CJ_MONITER')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER');
		RunScript('CJ_MONITER','OnCreate');
	end;
	if (NIL <> GetEntity('CJ_MONITER05')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER05');
		RunScript('CJ_MONITER05','OnCreate');
	end;
	
	if (NIL <> GetEntity('CJ_MONITER06')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER06');
		RunScript('CJ_MONITER06','OnCreate');
	end;
	
	if (NIL <> GetEntity('CJ_MONITER07')) then 
	begin
		SetEntityScriptsFromEntity('Monitor_Template','CJ_MONITER07');
		RunScript('CJ_MONITER07','OnCreate');
	end;
	
			
	SetNumberOfKillableHuntersInLevel(26,0);	
	
end; {end OnCreate}

{************************ END OF OnCREATE ************************}




{************************ LEVEL GOALS ************************}
SCRIPT LevelGoals;
BEGIN

	if NOT level_bPowerIsOn then SetLevelGoal('GOAL1')
	else 
	begin
		ClearLevelGoal('GOAL1');
		if (GetPlayerAreaName <> 'aiexitstation') then SetLevelGoal('GOAL2')
		else
		begin
			ClearLevelGoal('GOAL2');
			SetLevelGoal('GOAL3');
		end;
	end;			
	
End;

{************************ END OF LEVEL GOALS ************************}





{***************** INTRO CUT SCENE   *****************}
SCRIPT IntroCut;
VAR
vPoz	: vec3d;
BEGIN
		
	CutSceneStart;
	
	{remove the train lights if there}
	if (NIL <> GetEntity('CJ_SUBLIGHT_(L)')) then AttachToEntity(GetEntity('CJ_SUBLIGHT_(L)'),GetEntity('CJ_TUBE(WHOLE)_(M)'));
	if (NIL <> GetEntity('CJ_SUBLIGHT_(L)01')) then AttachToEntity(GetEntity('CJ_SUBLIGHT_(L)01'),GetEntity('CJ_TUBE(WHOLE)_(M)'));
		
	
	LoadFrontEndAudioStream(SCRIPTED_TRACK_TRAIN1); 	
		
	SetPlayerControllable(TRUE);
	SetHunterAimTarget(GetPlayer,GetEntityPosition(GetEntity('CameraLook1')));
	
	{SHOT 1 - CAMERA LOOKS TOWARDS TRAKS AS TRAIN ARRIVES}
	PlaySplineFile('START',4.0,TRUE,TRUE,FALSE);
	SetVector(vPoz,0.0,0.0,0.0);
	CameraForceLookAtEntity(GetEntity('CameraLook1'),vPoz,FALSE,FALSE,0.0);
	
		{player sneaks into the subway}
	sleep(1000);
		
		PlayFrontEndAudioStreamOneShot(127);						
	
	sleep(1600);		
		
	runscript('CJ_TUBE(WHOLE)_(M)','TrainArrive');		
		
		SetVector(vPoz,166.721,-33.9,378.0);
		SetPlayerGotoNode('Player_Cut_Start',vPoz,FALSE);
	
	while isSplinePlaying do sleep(1);
	
	CameraStopLookAtEntity(FALSE,0.0);
			
	{SHOT 2 - CAMERA ROTATES LEFT TOWARDS STAIRS}	
	PlaySplineFileDefault('START');
	SetVector(vPoz,0.0,0.0,0.0);
	CameraForceLookAtEntity(GetEntity('CameraLook2'),vPoz,FALSE,TRUE,4.0);
	
	sleep(1500);
	
	{director threatens player via earpiece - static cuts him off}	
	PlayDirectorSpeech(GetCameraPosition,AISPEECH_D1V1_SUB_SUBWAY_START,-1,-1);
						
	while isSplinePlaying do sleep(1);
	
	CameraStopLookAtEntity(FALSE,0.0);
	
	{SHOT 3 - LITTLE PAUSE WITH STATIC CAMERA}
	PlaySplineFile('START',3.0,TRUE,TRUE,FALSE);

	{player moves back to his start position}
		SetVector(vPoz,161.45,-31.0,382.56);
		SetPlayerGotoNode('Player_Cut_End',vPoz,TRUE);
					
	sleep(800);
	
	{cops get teleported by train}			
	
		AICutSceneEntityEnable('Team1_1',TRUE);
		vPoz := GetEntityPosition(GetEntity('Marker_Cop1'));		
		MoveEntity(GetEntity('Team1_1'),vPoz,0);		
		AIMakeEntityDeaf('Team1_1',0);
		AIMakeEntityBlind('Team1_1',0);		
		AISetIdleHomeNode('Team1_1','Home_Team1_1');		
		{AICancelHunterIdleAction('Team1_1',AISCRIPT_IDLE_SPEECH);}
		AISetEntityIdleOverRide('Team1_1',TRUE,FALSE);
		
		AICutSceneEntityEnable('Team1_2',TRUE);	
		vPoz := GetEntityPosition(GetEntity('Marker_Cop2'));		
		MoveEntity(GetEntity('Team1_2'),vPoz,0);
		AIMakeEntityDeaf('Team1_2',0);
		AIMakeEntityBlind('Team1_2',0);					
		AISetIdleHomeNode('Team1_2','Home_Team1_2');		
		{AICancelHunterIdleAction('Team1_2',AISCRIPT_IDLE_SPEECH);}
		AISetEntityIdleOverRide('Team1_2',TRUE,FALSE);
			
	sleep(1500);
	
	{cops get told to move to position}	
	
		AIEntityGoHomeIfIdle('Team1_1');
		AIEntityGoHomeIfIdle('Team1_2');		
			
	while isSplinePlaying do sleep(1);
	
	CameraStopLookAtEntity(FALSE,0.0);
	
	{SHOT 4 - CAMERA ROTATES RIGHT TOWARDS TRAKS}
	PlaySplineFile('START',3.0,TRUE,TRUE,FALSE);
	SetVector(vPoz,0.0,0.0,0.0);
	CameraForceLookAtEntity(GetEntity('CameraLook1'),vPoz,FALSE,TRUE,4.0);				
	
	sleep(2000);
	
	{hunter reports position}
		PlayHunterSpeech('Team1_2',VOICE_POLICE2VOICE2,AISPEECH_P2V2_SUB_AT_STATION);
										
	while isSplinePlaying do sleep(1);	
	
	CameraStopLookAtEntity(FALSE,0.0);
	
	{SHOT 5 - PAUSE AGAIN, CAMERA LOOKS STATIONARY WHERE IT IS}
	PlaySplineFile('START',2.0,TRUE,TRUE,FALSE);		
		
		AILookAtEntity('Team1_1','Team1_2');
		AILookAtEntity('Team1_2','Team1_1');
				
	while isSplinePlaying do sleep(1);
	
	{SHOT 6: SWAT TAKES THE POWERSTATION AND TURNS THE THIRD RAIL OFF}
				
	{SetVector(vPoz,85.8,-35.3,227.8);
	SetCameraPosition(vPoz);}
	
	{SetVector(vPoz,-0.3,0.27,-0.89);
	SetCameraView(vPoz);}
	SetVector(vPoz,83.31,-32.77,221.80);
	SetCameraPosition(vPoz);
	
	SetVector(vPoz,-0.46,0.34,-0.81);
	SetCameraView(vPoz);
	
		
		SetCurrentLod(GetEntity('SUB_Power_Display'),1); {power panel to show 'POWER ON'}
		
		AICutSceneEntityEnable('Guard06',TRUE);
		AIAddGoalForSubPack('LEADER','PowerStation','gGuard06_CutScene');
		
		AISetIdleHomeNode('Guard06','Guard06_Idle');			
		
		PlayHunterSpeech('Guard06',VOICE_POLICE1VOICE3,AISPEECH_P1V3_SUB_POWER_IS_OFF);
		
	sleep(2000);
	
	{SHOT 7: ZOOM IN ON THE RAIL CONTROLS}
			
{	SetVector(vPoz,83.31,-32.77,221.80);
	SetCameraPosition(vPoz);
	
	SetVector(vPoz,-0.46,0.34,-0.81);
	SetCameraView(vPoz);
}					
		runscript('Subway','TurnPowerOff');	
		
		AIEntityGoHomeIfIdle('Guard06');
		
		AIMakeEntityDeaf('Team1_1',2);
		AIMakeEntityBlind('Team1_1',2);
		
		AIMakeEntityDeaf('Team1_2',2);
		AIMakeEntityBlind('Team1_2',2);
		
	sleep(3000);		
	
		AISetHunterIdleAction('Team1_1',AISCRIPT_IDLE_STANDANIMS,AISCRIPT_MEDIUMPRIORITY);	
		AISetHunterIdleAction('Team1_1',AISCRIPT_IDLE_SPEECH,AISCRIPT_MEDIUMPRIORITY);
		AISetHunterIdleAction('Team1_2',AISCRIPT_IDLE_STANDANIMS,AISCRIPT_MEDIUMPRIORITY);	
		AISetHunterIdleAction('Team1_2',AISCRIPT_IDLE_SPEECH,AISCRIPT_MEDIUMPRIORITY);
		AISetEntityIdleOverRide('Team1_1',FALSE,FALSE);
		AISetEntityIdleOverRide('Team1_2',FALSE,FALSE);	
		
		
	{END OF CUT}	
	
	ClearHunterAimTarget(GetPlayer);
	SetPlayerControllable(FALSE);
	
	{remove the train lights if there}
	if (NIL <> GetEntity('CJ_SUBLIGHT_(L)')) then KillEntity(GetEntity('CJ_SUBLIGHT_(L)'));
	if (NIL <> GetEntity('CJ_SUBLIGHT_(L)01')) then KillEntity(GetEntity('CJ_SUBLIGHT_(L)01'));
		
		
	CutSceneEnd(FALSE);

End;
{*************** END INTRO CUT SCENE   *****************}



{***************** SCRIPTS THAT SET LEVEL FLAGS   *****************}


SCRIPT TurnPowerOff;
BEGIN
	level_bPowerIsOn := FALSE; {power has been turned off by an external entity}
	runScript('Subway','LevelGoals');
	writeDebug('LEVEL: power has been turned OFF by an external entity');				
End;

{*********}

SCRIPT TurnPowerOn;
VAR
sHunterName	: string[32];
numHunters	: integer;
curHunter	: integer;
BEGIN
	level_bPowerIsOn := TRUE; {power has been turned on by an external entity}
	runScript('Subway','LevelGoals');		
	writeDebug('LEVEL: power has been turned ON by an external entity');
End;

{************** END OF SCRIPTS THAT SET LEVEL FLAGS   **************}




{********************************* FUNCTION DECLARATIONS *********************************}

PROCEDURE InitAreas;
BEGIN
	
	{ENTITY ACTIVATION AREAS}
	
	AIAssociateFourActiveAreasWithPlayerArea('aiEntryStation','aiTrack1','aiServiceTrack','aiDeadTrack','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiTrack1','aiServiceTrack','aiDeadTrack','aiEntryStation','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiTrack1','aiServiceTrack','aiDeadTrack','aiEntryStation','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiServiceTrack','aiDeadTrack','aiEntryStation','aiTrack1','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiDeadTrack','aiEntryStation','aiTrack1','aiServiceTrack','aiEntryStationCorridor');	
	AIAssociateFourActiveAreasWithPlayerArea('aiEntryStationCorridor','aiDeadTrack','aiEntryStation','aiTrack1','aiServiceTrack');	
	
	AIAssociateFourActiveAreasWithPlayerArea('aiPowerStation','aiTrack1','aiServiceTrack','aiDeadTrack','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiTrack1','aiServiceTrack','aiDeadTrack','aiPowerStation','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiServiceTrack','aiDeadTrack','aiPowerStation','aiTrack1','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiDeadTrack','aiPowerStation','aiTrack1','aiServiceTrack','aiEntryStationCorridor');
	AIAssociateFourActiveAreasWithPlayerArea('aiEntryStationCorridor','aiDeadTrack','aiPowerStation','aiTrack1','aiServiceTrack');
	
	AIAssociateOneActiveAreaWithPlayerArea('aiPowerStation','aiEntryStation');
	
	{TERRITORIES}

	{Limit the PowerStation guys to that area so they don't run about}
	AIAddAreaForSubpack('PowerStation', 'aiPowerStation');		
	AISubpackStayInTerritory('LEADER','PowerStation',TRUE);
		
	AIAddAreaForSubpack('Team2', 'aiEntryStation');
	AIAddAreaForSubpack('Team2', 'aiEntryStationCorridor');
	AIAddAreaForSubpack('Team2', 'aiTrack1');
	AIAddAreaForSubpack('Team2', 'aiServiceTrack');
	AIAddAreaForSubpack('Team2', 'aiDeadTrack');
	AIAddAreaForSubpack('Team2', 'aiPowerStation');
		
	AIAddAreaForSubpack('Team3', 'aiEntryStation');		
	AIAddAreaForSubpack('Team3', 'aiEntryStationCorridor');
	AIAddAreaForSubpack('Team3', 'aiTrack1');
	
	AIAddAreaForSubpack('Cops', 'aiExitStation');
			
	{Limit the Team1 guys to the station so they don't run about while cut-scene is playing}
	AIAddAreaForSubpack('Team1', 'aiEntryStation');
	AIAddAreaForSubpack('Team1', 'aiEntryStationCorridor');	
	AISubpackStayInTerritory('LEADER','Team1',TRUE);
		
End; {of InitAreas}




{*****************************************************}



PROCEDURE InitTriggers;
BEGIN
	{*** Level Triggers ***}
	
	setVector(vStart,166.56,-33.5,376.667);
	setVector(vEnd,170.0,-30.0,381.8);	
	if(
	(nil = GetEntity('TurnCops')) 
	AND
	(NIL <> GetEntity('Gen_Save_Point'))
	)then CreateBoxTrigger(vStart,vEnd,'TurnCops');	
	
	setVector(vStart,0.1,0.1,0.1);
	setVector(vEnd,0.2,-0.2,0.2);
	
	if(nil = GetEntity('Alert_Manager')) then CreateBoxTrigger(vStart,vEnd,'Alert_Manager');
	
	setVector(vStart,0.3,0.3,0.3);
	setVector(vEnd,0.4,-0.4,0.4);
	
	if(nil = GetEntity('Hunters_Generator1')) then CreateBoxTrigger(vStart,vEnd,'Hunters_Generator1');
	
	setVector(vStart,0.5,0.5,0.5);
	setVector(vEnd,0.6,0.6,0.6);
	
	if(nil = GetEntity('Template1')) then CreateBoxTrigger(vStart,vEnd,'Template1');
	
	setVector(vStart,0.7,0.7,0.7);
	setVector(vEnd,0.8,0.8,0.8);
	
	if(nil = GetEntity('Template2')) then CreateBoxTrigger(vStart,vEnd,'Template2');
	
	setVector(vStart,0.9,0.9,0.9);
	setVector(vEnd,1,1,1);
	
	if(nil = GetEntity('Template3')) then CreateBoxTrigger(vStart,vEnd,'Template3');
		
	SetVector(vStart,135.6,-35.5,116.0);
	SetVector(vEnd,142.8,-32.5,111.0);
	if (nil = GetEntity('Cops_CalledIn')) then CreateBoxTrigger(vStart,vEnd,'Cops_CalledIn');		
	
	SetVector(vStart,143.0,-1.236,29.5);
	if (nil = GetEntity('End_Of_Level')) then CreateSphereTrigger(vStart,2.0,'End_Of_Level');	
	
	SetVector(vStart,0.0,0.0,0.0);
	if (nil = GetEntity('Turnstiles')) then CreateSphereTrigger(vStart,0.1,'Turnstiles');	
	
	SetVector(vStart,131.3,-22,77.1);
	SetVector(vEnd,150.0,-20.0,74.5);
	if (nil = GetEntity('ExtSta_TurnLeft')) then CreateBoxTrigger(vStart,vEnd,'ExtSta_TurnLeft'); 
	

	{showTriggers(TRUE);}
	
End; {of InitTriggers}


{*****************************************************}

PROCEDURE CheckSavePoints;
VAR
vDirection,
vPoz	 	: vec3d;
p			: ENTITYPTR;

BEGIN
		
	{***********************************************************************}
	{			INTRO CUT, TURN COPS TRIGGER AND TEAM1 ACTIONS INIT			}
	{***********************************************************************}
			
	if (GetPlayerLevelRestarts > 0)	 then 
	begin
		
		runScript('Subway','LevelGoals');
		
		if (NIL <> GetEntity('Gen_Save_Point')) then 
		begin
			runscript('Subway','TurnPowerOff');			
		end;
		
		SetVector(vDirection,184.51,-34.162,359.51);
		MoveEntity(GetEntity('CJ_TUBE(WHOLE)_(M)'),vDirection,0);
				
		if IsEntityAlive('Team1_1') then
		begin
			vDirection := GetEntityPosition(GetEntity('Marker_Cop1'));
			MoveEntity(GetEntity('Team1_1'),vDirection,0);
			AISetIdleHomeNode('Team1_1','Home_Team1_1');
			AIEntityGoHomeIfIdle('Team1_1');
		end;
		
		if IsEntityAlive('Team1_2') then
		begin
			vDirection := GetEntityPosition(GetEntity('Marker_Cop2'));
			MoveEntity(GetEntity('Team1_2'),vDirection,0);		
			AISetIdleHomeNode('Team1_2','Home_Team1_2');
			AIEntityGoHomeIfIdle('Team1_2');
		end;
		
		{remove the train lights if there}
		if (NIL <> GetEntity('CJ_SUBLIGHT_(L)')) then KillEntity(GetEntity('CJ_SUBLIGHT_(L)'));
		if (NIL <> GetEntity('CJ_SUBLIGHT_(L)01')) then KillEntity(GetEntity('CJ_SUBLIGHT_(L)01'));
		
		LoadFrontEndAudioStream(SCRIPTED_TRACK_TRAIN3); {TRAIN 2 is taken care of in lever}
		
	end
	else runScript('Subway','IntroCut');

	{***********************************************************************}
	{				ASSALUT CUT, TEAM 2 AND TEAM 3 INIT						}
	{***********************************************************************}
	
	if (NIL = GetEntity('Gen_Save_Point01')) then {this is the save at the last station}
		if (NIL <> GetEntity('Assault_Cut')) then killentity(GetEntity('Assault_Cut'));

	if( 
	(NIL = GetEntity('Gen_Save_Point')) 
	AND
	(NIL <> GetEntity('Gen_Save_Point01')) 
	)then
	begin	
			{the player is reloading at the power station save}
			
			if (NIL <> GetEntity('TurnCops')) then KillEntity(GetEntity('TurnCops'));
			
			writedebug('Assault_Cut - RELOAD DETECTED');
			
			if (NIL <> GetEntity('Assault_Cut')) then killentity(GetEntity('Assault_Cut'));
						
			if (
			(AINumberInSubPack('LEADER','Team3') = 0) 
			AND
			(level_NumberInTeam3 > 0)
			)then
			begin	
								
				writedebug('Team3 is EMPTY - RESPAWNING');		
				if (level_NumberInTeam3 >= 1) then
				begin
					vDirection := GetEntityPosition(GetEntity('Marker_Team3_1'));
					p := SpawnHunterInPackAtVectorWithWeapon(vDirection,CT_UZI,10,'Team3_1','Cop_BodM1','Team3');	
					runScript('Team3_1','OnCreateHunter');
					AIAddGoalForSubpack('LEADER','Team3','gTeam3_1MoveIn');
				end;
				
				if (level_NumberInTeam3 >= 2) then
				begin
					vDirection := GetEntityPosition(GetEntity('Marker_Team3_2'));
					p := SpawnHunterInPackAtVectorWithWeapon(vDirection,CT_UZI,8,'Team3_2','Cop_BodM1','Team3');		
					runScript('Team3_1','OnCreateHunter');
					AIAddGoalForSubpack('LEADER','Team3','gTeam3_2MoveIn');
				end;
				
				if (level_NumberInTeam3 >= 3) then
				begin
					vDirection := GetEntityPosition(GetEntity('Marker_Team3_3'));
					p := SpawnHunterInPackAtVectorWithWeapon(vDirection,CT_DESERT_EAGLE,10,'Team3_3','Cop_BodM1','Team3');	
					runScript('Team3_1','OnCreateHunter');
					AIAddGoalForSubpack('LEADER','Team3','gTeam3_3MoveIn');
				end;
			end;	
			
			if( 
			(AINumberInSubPack('LEADER','Team2') = 0) 
			AND
			(level_NumberInTeam2 > 0)
			)then 			
			begin
				writedebug('Team2 is EMPTY - RESPAWNING');
				runscript('Hunters_Generator1','StartHunterGenerator')
			end;		
			
			if IsEntityAlive('Guard06') then AIEntityGoHomeIfIdle('Guard06');
			
		end;
		
	{***********************************************************************}
	{						FIRST TRAIN SETUP								}
	{***********************************************************************}
		
	if( 
	(NIL = GetEntity('Gen_Save_Point')) 
	AND
	(NIL <> GetEntity('Gen_Save_Point01'))
	AND
	(NOT Level_PowerFirstTime)	
	)then
	begin	
		
		if (NIL <> GetEntity('CJ_TUBE(WHOLE)_(M)')) 	
			then HideEntity(GetEntity('CJ_TUBE(WHOLE)_(M)')); {Hide the Subway Train Mover}
		
		if (NIL <> GetEntity('CJ_TUBE(WHOLE)'))then
		begin
			ShowEntity(GetEntity('CJ_TUBE(WHOLE)')); 
			SetVector(vPoz,185.015,-34.16,360.37); 
			MoveEntity(GetEntity('CJ_TUBE(WHOLE)'),vPoz,0);			
		end;
	
		if (NIL <> GetEntity('CJ_TUBEPLUG'))then
		begin
			ShowEntity(GetEntity('CJ_TUBEPLUG'));
			SetVector(vPoz,185.015,-34.16,360.37);  
			MoveEntity(GetEntity('CJ_TUBEPLUG'),vPoz,0);				 
		end;
	
		if (NIL <> GetEntity('CJ_TUBEDOORR_(SD)'))then
		begin			
			ShowEntity(GetEntity('CJ_TUBEDOORR_(SD)')); 
			SetVector(vPoz,185.015,-34.16,360.37); 
			MoveEntity(GetEntity('CJ_TUBEDOORR_(SD)'),vPoz,0);
			
		end;
	
		if (NIL <> GetEntity('CJ_TUBEDOORL_(SD)'))then
		begin	
			ShowEntity(GetEntity('CJ_TUBEDOORL_(SD)')); 
			SetVector(vPoz,182.30,-34.17,363.71); 
			MoveEntity(GetEntity('CJ_TUBEDOORL_(SD)'),vPoz,0);			
		end;					
						
		unFreezeEntity(GetEntity('CJ_TUBEDOORR_(SD)'));		
		UnFreezeEntity(GetEntity('CJ_TUBEDOORL_(SD)'));
		SetSlideDoorAjarDistance(GetEntity('CJ_TUBEDOORR_(SD)'),1.5);
		SetSlideDoorAjarDistance(GetEntity('CJ_TUBEDOORL_(SD)'),1.5);
		
		SetDoorState(GetEntity('CJ_TUBEDOORR_(SD)'),DOOR_OPENING);
		SetDoorState(GetEntity('CJ_TUBEDOORL_(SD)'),DOOR_OPENING);
		
		{create the triggers by the train doors}
		if (NIL = GetEntity('Tube_Trigger1')) then
		begin
			setVector(vPoz,188.014,-34.486,370.038);
			CreateSphereTrigger(vPoz,1.5,'Tube_Trigger1');
			SetEntityScriptsFromEntity('Tube_Trigger_Temp','Tube_Trigger1');
		end;
		
		if (NIL = GetEntity('Tube_Trigger2')) then
		begin	
			setVector(vPoz,183.434,-34.486,361.294);
			CreateSphereTrigger(vPoz,1.5,'Tube_Trigger2');
			SetEntityScriptsFromEntity('Tube_Trigger_Temp','Tube_Trigger2');
		end;
		
		if (NIL = GetEntity('Tube_Trigger3')) then
		begin
			setVector(vPoz,178.361,-34.486,352.689);
			CreateSphereTrigger(vPoz,1.5,'Tube_Trigger3');
			SetEntityScriptsFromEntity('Tube_Trigger_Temp','Tube_Trigger3');
		end;
		
	end
	else
	begin
		if (NIL <> GetEntity('CJ_TUBE(WHOLE)'))then
		begin
			SetVector(vStart,185.015,-134.16,360.37); 
			MoveEntity(GetEntity('CJ_TUBE(WHOLE)'),vStart,0);
			HideEntity(GetEntity('CJ_TUBE(WHOLE)')); {Hide the Subway Train Static}
		end;
	
		if (NIL <> GetEntity('CJ_TUBEPLUG'))then
		begin
			SetVector(vStart,185.015,-134.16,360.37);  
			MoveEntity(GetEntity('CJ_TUBEPLUG'),vStart,0);
			HideEntity(GetEntity('CJ_TUBEPLUG'));	 {Hide the Subway Train's back}
		end;
	
		if (NIL <> GetEntity('CJ_TUBEDOORR_(SD)'))then
		begin			
			SetVector(vStart,185.015,-134.16,360.37); 
			MoveEntity(GetEntity('CJ_TUBEDOORR_(SD)'),vStart,0);
			HideEntity(GetEntity('CJ_TUBEDOORR_(SD)')); {Hide the Subway Train doors}
		end;
	
		if (NIL <> GetEntity('CJ_TUBEDOORL_(SD)'))then
		begin	
			SetVector(vStart,182.30,-134.17,363.71); 
			MoveEntity(GetEntity('CJ_TUBEDOORL_(SD)'),vStart,0);
			HideEntity(GetEntity('CJ_TUBEDOORL_(SD)')); {Hide the Subway Train doors}
		end;
	end;
	
	{***********************************************************************}
	{						FINAL TRAIN SETUP AND COPS						}
	{***********************************************************************}
	
	if (NIL = GetEntity('Gen_Save_Point01')) then 
	begin
		
		if (NIL <> GetEntity('TurnCops')) then KillEntity(GetEntity('TurnCops'));
		
		ShowEntity(GetEntity('CJ_TUBE(WHOLE)_(M)01'));
		SetVector(vDirection,117.857,-34.162,93.5);	
		MoveEntity(GetEntity('CJ_TUBE(WHOLE)_(M)01'),vDirection,0);
		
		ShowEntity(GetEntity('CJ_TUBE(WHOLE)_(M)02'));
		SetVector(vDirection,117.857,-34.162,126.5);	
		MoveEntity(GetEntity('CJ_TUBE(WHOLE)_(M)02'),vDirection,0);
		
		if IsEntityAlive('Cop02') 
			then AIAddGoalForSubPack('LEADER','Cops','gCop02_ComeIn');
		
		if IsEntityAlive('Cop03')
			then AIAddGoalForSubPack('LEADER','Cops','gCop03_ComeIn');
		
		if (NIL <> GetEntity('Tube_Trigger1'))			
			then KillEntity(GetEntity('Tube_Trigger1'));
				
		if (NIL <> GetEntity('Tube_Trigger2'))			
			then KillEntity(GetEntity('Tube_Trigger2'));
		
		if (NIL <> GetEntity('Tube_Trigger3'))			
			then KillEntity(GetEntity('Tube_Trigger3'));
				
		if (NIL <> GetEntity('TrainStart_Trigger')) 
			then killEntity(GetEntity('TrainStart_Trigger'));	{kill the trigger}
	end;
	
	
	if (NIL <> GetEntity('Gen_Save_Point01')) then 		
		if NOT Level_PowerFirstTime then runScript('CJ_PHONE_KIOSK05','PhoneStartRing');
	
End; {of CheckSavePoints}



{*****************************************************}

PROCEDURE InitGameText;
BEGIN

	SetGameTextTeleType(false);

End; {of InitGameText}






{*****************************************************}



FUNCTION  SpawnHunterInPackAtVectorWithWeapon; 
{VAR vGuyPoz : vec3d ; sWeapon : eCollectableType; iAmmo : integer ; sName, sType, sPack : string} 
VAR
pNewEntity	: entityptr;
sEntityName	: string[32];
BEGIN
	
	if (sName = '') then pNewEntity := SpawnMovingEntity(sType,vGuyPoz,'ScriptCreateName')
	else pNewEntity := SpawnMovingEntity(sType,vGuyPoz,sName);
			
	if(true = CreateInventoryItem(sWeapon, pNewEntity, TRUE))  then
	begin        
    	AddAmmoToInventoryWeapon(pNewEntity, sWeapon, iAmmo);
    	SetHunterDropAmmo(pNewEntity,iAmmo);
    end; 
    		
    if(nil <> pNewEntity) then 
	begin
		sEntityName := GetEntityName(pNewEntity);
		AIAddEntity(sEntityName);
		AIAddHunterToLeaderSubPack('LEADER',sPack,sEntityName);	
		AISetIdleHomeNode(sEntityName,'');										
	end;  			
    	
    SpawnHunterInPackAtVectorWithWeapon := pNewEntity;    	
	
End;

{*****************************************************}

END. {end of LevelScripts}  