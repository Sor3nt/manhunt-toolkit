SCRIPTMAIN		Triggers;

ENTITY
	Glass_Marker2		:	et_name;

VAR
pWindow					: entityPtr;
level_bIsSmashingWindow	: 	level_var boolean;

{************************ FUNCTION HEADERS ************************}
PROCEDURE SmashWindow(sWindow, sNodeName,sEntity : string); FORWARD;
{********************* END OF FUNCTION HEADERS *********************}


SCRIPT OnCreate;
BEGIN
	writedebug('GlassMarker222 OnCreate');	
	TriggerAddEntityClass(this, COL_HUNTER);

	if( 
	(NIL = GetEntity('CJ_Breakable_Window_Glass'))
	OR
	(NIL = GetEntity('CJ_Breakable_Window_Glass01')) 
	)then killentity(this);

End;

SCRIPT Debug;
BEGIN
	SmashWindow('CJ_Breakable_Window_Glass01','SmashGlass','HUNTER09');
End;


SCRIPT OnEnterTrigger; 
VAR
i,
iNEntitiesInSphere	: integer;
sEntityName			: string[32];
vPoz				: vec3d;

BEGIN
	
	
	writedebug('GlassMarker2 OnEnterTrigger');			
	if NOT level_bIsSmashingWindow then
	begin
	
		if InsideTriggerType(this, EC_HUNTER) then
		begin
			
			writedebug('GlassMarker2 OnEnterTrigger EC_HUNTER');
			
			iNEntitiesInSphere := GetNumberOfTypesInsideTrigger(this,EC_HUNTER);
			
			if (iNEntitiesInSphere > 0) then
			begin
				sEntityName := GetNameOfTypeInTriggerFromIndex(this,EC_HUNTER,1);
				writedebug('GlassMarker2 sEntityName: ',sEntityName);		
								
				if( 
				IsEntityAlive(sEntityName)
				AND
				(NOT AIisIdle(sEntityName))			
				AND
				( (GetPlayerAreaName = 'airoofinside') OR (GetPlayerAreaName = 'aifireescape') )
				)then				
				begin									
										
					writedebug('GlassMarker2 HUNTER AREA: ',GetHunterAreaName(GetEntity(sEntityName)));
					
					{ need to hog to make sure the next code can only get triggered
					  by one onEnterTrigger event }
					ScriptHogProcessorStart;
					if NOT level_bIsSmashingWindow then
						level_bIsSmashingWindow := TRUE;
					ScriptHogProcessorEnd;
					
					if level_bIsSmashingWindow then
					begin
						{ level_bIsSmashingWindow := TRUE; }
						GraphModifyConnections(this, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING);
						
						if (GetHunterAreaName(GetEntity(sEntityName)) = 'airoofinside') then
						begin												
							if NIL <> GetEntity('CJ_Breakable_Window_Glass01')
								then SmashWindow('CJ_Breakable_Window_Glass01','SmashGlass1',sEntityName);
						end
						else if (GetHunterAreaName(GetEntity(sEntityName)) = 'aifireescape') then
						begin
							if NIL <> GetEntity('CJ_Breakable_Window_Glass01')
								then SmashWindow('CJ_Breakable_Window_Glass01','SmashGlass1B',sEntityName);
						end;					
					
						sleep(500);
						level_bIsSmashingWindow := FALSE;
					
						sleep(5000);
										
						if NIL <> GetEntity('CJ_Breakable_Window_Glass01') 
							then GraphModifyConnections(this, AISCRIPT_GRAPHLINK_ALLOW_NOTHING);
		
					end
					else
					begin
						if IsEntityAlive(sEntityName) then writedebug('ALIVE: ',sEntityName)
						else writedebug('NOT ALIVE: ',sEntityName);
					
						if AIisIdle(sEntityName) then writedebug('IDLE: ',sEntityName)
						else writedebug('NOT IDLE: ',sEntityName);
					
						if ( (GetPlayerAreaName = 'airoofinside') OR (GetPlayerAreaName = 'aifireescape') ) then writedebug('PLAYER IN AREA OF: ',sEntityName)
						else writedebug('NOT PLAYER IN AREA OF: ',sEntityName);
					end;				
				end;
				
			end;
				
		end; 
	end;			
end;


PROCEDURE SmashWindow; 
{sNodeName, sEntity : string, sWindow}
VAR
bCycle				: boolean;
iHalfSecs			: integer;
vPosition			: vec3d;
BEGIN
	
	if( 
	(NIL <> GetEntity(sWindow))
	AND
	(NIL <> GetEntity(sEntity))
	)then
	begin
		
		ScriptHogProcessorStart;	
		vPosition := GetEntityPosition(GetEntity(sWindow));		
		AIDefineGoalMeleeAttackVector('gAttackGlass',sEntity,AISCRIPT_VERYHIGHPRIORITY,sNodeName,vPosition);	
		ScriptHogProcessorEnd;
								
		if IsEntityAlive(sEntity) then SetHunterHideHealth(sEntity,100);
							
			if AIisInSubPack('LEADER','RoofTop',sEntity) 
				then AIAddGoalForSubPack('LEADER','RoofTop','gAttackGlass')
			else if AIisInSubPack('LEADER','Street',sEntity)
				then AIAddGoalForSubPack('LEADER','Street','gAttackGlass')
			else 
			begin
				level_bIsSmashingWindow := FALSE;			
			end;
							
			writedebug('GlassMarker2 GOAL ADDED');		
			
			bCycle := TRUE;
			iHalfSecs := 0;
			
			while bCycle AND (GetEntity(sWindow) <> NIL) do
			begin	
				sleep(500);
				iHalfSecs := iHalfSecs +1;
				if iHalfSecs >= 4 then bCycle := FALSE;
			end;				
							
			if IsEntityAlive(sEntity) then SetHunterHideHealth(sEntity,100);
													
			if AIisGoalNameInSubPack('LEADER','RoofTop','gAttackGlass') then
			begin
				AITriggerSoundNoRadar('LURE_MEDIUM', GetEntity('player'));
				AIRemoveGoalFromSubPack('LEADER','RoofTop','gAttackGlass');
				sleep(60);
				AIDeleteGoalDefinition('gAttackGlass');
			end
			else if AIisGoalNameInSubPack('LEADER','Street','gAttackGlass') then
			begin
				AITriggerSoundNoRadar('LURE_MEDIUM', GetEntity('player'));
				AIRemoveGoalFromSubPack('LEADER','Street','gAttackGlass');
				sleep(60);
				AIDeleteGoalDefinition('gAttackGlass');
			end;
							
			writedebug('GlassMarker2 GOAL REMOVED');		
		end;
		
End;

END.

