{$t-}	{	trace off 	}
{	Program Description		}
{							}
SCRIPTMAIN	Level_Script;

ENTITY
	Pharm_Wks : et_level;
	
	{ Main level load script, entity must therefore be defined as level name }	
	
	

VAR

	IsExplosionPlaying 	: BOOLEAN;


SCRIPT	OnCreate;
  
VAR
	
	boxA 		: 	Vec3d;
	boxB		: 	Vec3d; 
	FacingVec	:	Vec3d;
	pEntity		:	EntityPtr;
	pDoor		:	EntityPtr;
	SetCurrent	: 	Boolean;

begin

	SetNumberOfKillableHuntersinLevel(30,2);

	SwitchLitterOn(false);
	{ForceWeatherType(WEATHER_CLOUDY, TRUE);}
	
	IsExplosionPlaying := FALSE;


	SetEntityScriptsFromEntity('Trash_SpawnExecuter','Gen_Bin_Liner01');

	SetEntityScriptsFromEntity('Trash_SpawnLure','Gen_Bin_Liner');
	
	SetEntityScriptsFromEntity('Trash_SpawnLure','Gen_Bin_Liner12');


	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)01');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)02');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)03');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)08');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)09');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)10');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)11');
	SetEntityScriptsFromEntity('Exploder_Drum','CJ_FLAME_Drum_(F)12');
	
	{SetEntityScriptsFromEntity('Tranq_Drum','CJ_BIO_Drum_(F)');
	SetEntityScriptsFromEntity('Tranq_Drum','CJ_BIO_Drum_(F)01');
	SetEntityScriptsFromEntity('Tranq_Drum','CJ_BIO_Drum_(F)02');
	SetEntityScriptsFromEntity('Tranq_Drum','CJ_BIO_Drum_(F)03');}

	{lockEntity(GetEntity('CJ_FLAME_Drum_(F)'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)01'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)02'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)03'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)08'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)09'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)10'));
	lockEntity(GetEntity('CJ_FLAME_Drum_(F)11'));
	lockEntity(GetEntity('CJ_BIO_Drum_(F)'));
	lockEntity(GetEntity('CJ_BIO_Drum_(F)01'));
	lockEntity(GetEntity('CJ_BIO_Drum_(F)02'));
	lockEntity(GetEntity('CJ_BIO_Drum_(F)03'));}



	ShowTriggers(false);


	AIAddPlayer('player');

	
	AIDefineGoalHuntEnemy('gHuntPlayer', 'player', true, 16);

	
	{AIDefineGoalGuardLookAtEntity('gRabbitLook1', AISCRIPT_HIGHPRIORITY, 'Node_Rabbit1', 0.0, 5.0, 2, 'player');
	
	AIDefineGoalGuardLookAtEntity('gRabbitVan1', AISCRIPT_HIGHPRIORITY, 'Node_RabbitHide', 0.0, 5.0, 2, 'player');
	}
	{AIDefineGoalGuardLookAtEntity('gRabbitLook2', AISCRIPT_HIGHPRIORITY, 'Node_RabbitHide', 0.0, 5.0, 2, 'player');}
	
	{AIDefineGoalGotoNode('gRabbitLook2', 'Hunter_Rabbit1', AISCRIPT_VERYHIGHPRIORITY, 'Node_RunRabbitRun', AISCRIPT_RUNMOVESPEED, true);}
	
	{AIDefineGoalGuardLookAtEntity('gRevolverStart', AISCRIPT_LOWPRIORITY, 'Node_RevolverStart', 0.0, 5.0, 2, 'Hunter_Rabbit1');}
	
	{AIDefineGoalGotoNodeStayonPath('gRabbitLook3', 'Hunter_Rabbit1', AISCRIPT_VERYHIGHPRIORITY, 'Node_RabbitLoading', AISCRIPT_RUNMOVESPEED, true);}

	
	SetVector(FacingVec, -0.7, -0.1, 0.7);
	AIDefineGoalGuardDirection('gExteriorGlock', AISCRIPT_HIGHPRIORITY, 'Node_ExteriorGlock', 0.0, 0.0, 1, Facingvec);
	
	
	AIDefineGoalGotoEntity('gExteriorPop1', 'Hunter_ExteriorPop1', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntity('gExteriorPop2', 'Hunter_ExteriorPop2', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntity('gExteriorPop3', 'Hunter_ExteriorPop3', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);

	AIDefineGoalGuardLookAtEntity('gRabbitLook4', AISCRIPT_HIGHPRIORITY, 'Node_Rabbit4', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook5', AISCRIPT_HIGHPRIORITY, 'Node_Rabbit5', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook6', AISCRIPT_HIGHPRIORITY, 'Node_FinalRabbit', 0.0, 5.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gRabbitLook7', AISCRIPT_HIGHPRIORITY, 'Node_KillRabbit', 0.0, 5.0, 2, 'player');
	{AIDefineGoalGuardLookAtEntity('gRabbitLook8', AISCRIPT_HIGHPRIORITY, 'Node_Rabbit6', 0.0, 5.0, 2, 'player');}
	
	
	AIDefineGoalGotoEntity('gLoading1', 'Hunter_Loading1', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntity('gLoading3', 'Hunter_Loading3', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntity('gLoading4', 'Hunter_Loading4', AISCRIPT_LOWPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntity('gLoading5', 'Hunter_Loading5', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	
	AIDefineGoalGotoEntityStayOnPath('gGantry1', 'Hunter_Gantry1', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	{AIDefineGoalGotoEntityStayOnPath('gGantry2', 'Hunter_Gantry2', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntityStayOnPath('gGantry3', 'Hunter_Gantry3', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntityStayOnPath('gGantry4', 'Hunter_Gantry4', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntityStayOnPath('gGantry5', 'Hunter_Gantry5', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
		}	
			
	AIDefineGoalGotoEntity('gCanopy4', 'Hunter_Canopy4', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoEntity('gCanopy5', 'Hunter_Canopy5', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
			
	
	SetVector(FacingVec, -0.8, -0.1, 0.6);
	{AIDefineGoalGuardDirection('gLoadingGuard2', AISCRIPT_HIGHPRIORITY, 'Node_Loading2', 0.0, 0.0, 1, Facingvec);}
	
	
	
	AIDefineGoalGuard('gShotgun1', AISCRIPT_MEDIUMPRIORITY, 'Node_Shotgun', 10.0, 5.0, 1);
	AIDefineGoalGuard('gShotgun2', AISCRIPT_MEDIUMPRIORITY, 'Node_Shotgun', 5.0, 5.0, 1);
	
	AIDefineGoalGotoNode('gGen1', 'Hunter_Shotgun1', AISCRIPT_HIGHPRIORITY, 'Node_Gen1', AISCRIPT_WALKMOVESPEED, true);
	AIDefineGoalGotoNode('gGen2', 'Hunter_Shotgun2', AISCRIPT_HIGHPRIORITY, 'Node_Gen2', AISCRIPT_WALKMOVESPEED, true);
	
	
		
	AIDefineGoalGuard('gLever1', AISCRIPT_HIGHPRIORITY, 'Node_LeverCov1', 0.0, 5.0, 2);
	AIDefineGoalGuard('gLever2', AISCRIPT_HIGHPRIORITY, 'Node_LeverCov2', 0.0, 3.0, 2);
	AIDefineGoalGuard('gLever3', AISCRIPT_HIGHPRIORITY, 'Node_LeverCov3', 0.0, 5.0, 2);
	AIDefineGoalGuard('gLever4', AISCRIPT_HIGHPRIORITY, 'Node_LeverCov4', 0.0, 5.0, 2);
	
	{AIDefineGoalGuardLookAtEntity('gBarrel1', AISCRIPT_HIGHPRIORITY, 'Node_NLB4', 0.0, 0.0, 2, 'player');
	AIDefineGoalGuardLookAtEntity('gBarrel2', AISCRIPT_HIGHPRIORITY, 'Node_NLB5', 0.0, 0.0, 2, 'player');}
	
	SetVector(FacingVec, 1.0, 0.0, 0.1);
	AIDefineGoalGuard('gBarrel1', AISCRIPT_HIGHPRIORITY, 'Node_NLB4', 0.0, 5.0, 1);
	AIDefineGoalGuard('gBarrel2', AISCRIPT_HIGHPRIORITY, 'Node_NLB5', 0.0, 5.0, 1);
	
	
	
	{AIDefineGoalGuardLookAtEntity('gTopBox', AISCRIPT_HIGHPRIORITY, 'Node_NLB1', 0.0, 10.0, 2, 'player');}
	AIDefineGoalGotoEntity('gTopBox', 'Hunter_TopBox', AISCRIPT_HIGHPRIORITY, 'player', AISCRIPT_RUNMOVESPEED, true);
	
	
	AIDefineGoalGuardLookAtEntity('gFactory1', AISCRIPT_HIGHPRIORITY, 'Node_BMT1', 10.0, 10.0, 2, 'player');
	
	
	AIDefineGoalGuard('gPerspex1', AISCRIPT_HIGHPRIORITY, 'Node_CPY1', 0.0, 5.0, 1);
		AIGuardModifyShootOutsideRadius('gPerspex1', TRUE);
	AIDefineGoalGuard('gPerspex2', AISCRIPT_HIGHPRIORITY, 'Node_CPY2', 0.0, 5.0, 1);
		AIGuardModifyShootOutsideRadius('gPerspex2', TRUE);
	AIDefineGoalGuard('gPerspex3', AISCRIPT_HIGHPRIORITY, 'Node_Attack1', 0.0, 5.0, 1);
		AIGuardModifyShootOutsideRadius('gPerspex3', TRUE);
		

	AIDefineGoalGuard('gSuite1', AISCRIPT_HIGHPRIORITY, 'Node_Coffee', 0.0, 2.0, 2);
		AIGuardModifyShootOutsideRadius('gSuite1', TRUE);		
		
	AIDefineGoalGuard('gSuite2', AISCRIPT_HIGHPRIORITY, 'Node_Canteen', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gSuite2', TRUE);
				
	AIDefineGoalGuard('gSuite3', AISCRIPT_HIGHPRIORITY, 'Node_Tiny', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gSuite3', TRUE);		
		
	AIDefineGoalGuard('gSuite4', AISCRIPT_HIGHPRIORITY, 'Node_TopBench', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gSuite4', TRUE);		
		
		
	AIDefineGoalGuard('gRecept1', AISCRIPT_HIGHPRIORITY, 'Node_Recept1', 0.0, 2.0, 2);
		AIGuardModifyShootOutsideRadius('gRecept1', TRUE);		
		
	AIDefineGoalGuard('gRecept2', AISCRIPT_HIGHPRIORITY, 'Node_Recept2', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gRecept2', TRUE);
				
	AIDefineGoalGuard('gRecept4', AISCRIPT_HIGHPRIORITY, 'Node_Recept4', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gRecept4', TRUE);		
		
	AIDefineGoalGuard('gControl1', AISCRIPT_HIGHPRIORITY, 'Node_Suite1', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gControl1', TRUE);	
	AIDefineGoalGuard('gControl2', AISCRIPT_MEDIUMPRIORITY, 'Node_Suite1', 0.0, 5.0, 2);
		AIGuardModifyShootOutsideRadius('gControl2', TRUE);

			
		
	AIDefineGoalGuard('gGantry2', AISCRIPT_HIGHPRIORITY, 'Node_GRY2', 0.0, 30.0, 2);
	AIDefineGoalGuard('gGantry3', AISCRIPT_HIGHPRIORITY, 'Node_GRY3', 0.0, 30.0, 2);
	AIDefineGoalGuard('gGantry4', AISCRIPT_HIGHPRIORITY, 'Node_GRY4', 0.0, 30.0, 2);
	
	
	
	
	
	
	
	
	
	
	
	AIDefineGoalGotoNode('gBasement1', 'Hunter_Factory1', AISCRIPT_VERYHIGHPRIORITY, 'Node_Basement1', AISCRIPT_RUNMOVESPEED, true);
	AIDefineGoalGotoNode('gBasement2', 'Hunter_Factory2', AISCRIPT_VERYHIGHPRIORITY, 'Node_BasementLook', AISCRIPT_RUNMOVESPEED, true);
	
	AIDefineGoalGotoNode('gAirVent1', 'Hunter_AirVent1', AISCRIPT_HIGHPRIORITY, 'Node_AirVent1', AISCRIPT_RUNMOVESPEED, true);
	
	AIDefineGoalGuardLookAtEntity('gFactoryGuard1', AISCRIPT_HIGHPRIORITY, 'Node_Factory1', 0.0, 1.0, 1, 'player');
	AIDefineGoalGuardLookAtEntity('gFactoryGuard2', AISCRIPT_HIGHPRIORITY, 'Node_Factory2', 0.0, 1.0, 1, 'player');
	
	AIDefineGoalGuard('gDoorPopout1', AISCRIPT_HIGHPRIORITY, 'Node_Popout1', 0.0, 20.0, 1);
	AIDefineGoalGuardLookAtEntity('gFloorGuard1', AISCRIPT_HIGHPRIORITY, 'Node_FloorGuard1', 0.0, 1.0, 1, 'player');
	
	AIDefineGoalGuardLookAtEntity('gGantryGuard1', AISCRIPT_HIGHPRIORITY, 'Node_GantryGuard1', 0.0, 1.0, 1, 'player');
	AIDefineGoalGuardLookAtEntity('gGantryGuard2', AISCRIPT_HIGHPRIORITY, 'Node_GantryGuard2', 0.0, 1.0, 1, 'player');
	
	{AIClearAllActiveAreaAssociations;
	
	AIAssociateOneActiveAreaWithPlayerArea('aiExterior','aiOffices');
	AIAssociateTwoActiveAreasWithPlayerArea('aiLoadingBay','aiFactory','aiOffices');
	AIAssociateTwoActiveAreasWithPlayerArea('aiFactory', 'aiLoadingBay', 'aiOffices');
	AIAssociateThreeActiveAreasWithPlayerArea('aiOffices', 'aiExterior', 'aiLoadingBay', 'aiFactory');
	
	
	AIDefineGoalHuntEnemy('gHuntPlayerExterior', 'player', true, 16);
	AIDefineGoalHuntEnemy('gHuntPlayerLoadingBay', 'player', true, 16);
	AIDefineGoalHuntEnemy('gHuntPlayerOffices', 'player', true, 16);
    AIDefineGoalHuntEnemy('gHuntPlayerFactory', 'player', true, 16); }
    
    { Used by the two hunters at the start of the level who enter through gate }
    
    
    
    
    {AIDefineGoalGotoNode('gChokeGoto1', 'Hunter_Small_01', AISCRIPT_HIGHPRIORITY, 'Node_Choke1', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gChokeGoto2', 'Hunter_Small_02', AISCRIPT_HIGHPRIORITY, 'Node_Choke2', AISCRIPT_RUNMOVESPEED, true);
    
    AIDefineGoalGotoNode('gOfficesGoto4', 'Hunter_Offices_04', AISCRIPT_HIGHPRIORITY, 'Node_Surprise', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gOfficesGoto5', 'Hunter_Offices_05', AISCRIPT_HIGHPRIORITY, 'Node_Doorway', AISCRIPT_RUNMOVESPEED, true);
    
    AIDefineGoalGotoNode('gLoadingGoto3', 'Hunter_Loading_03', AISCRIPT_HIGHPRIORITY, 'Node_Loading3', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gLoadingGoto1', 'Hunter_Loading_01', AISCRIPT_HIGHPRIORITY, 'Node_Loading1', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gLoadingGoto2', 'Hunter_Loading_02', AISCRIPT_HIGHPRIORITY, 'Node_Loading2', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gLoadingGoto4', 'Hunter_Loading_04', AISCRIPT_HIGHPRIORITY, 'Node_Loading4', AISCRIPT_RUNMOVESPEED, true);
    
    AIDefineGoalGotoNode('gFloorGoto1', 'Hunter_Floor_01', AISCRIPT_HIGHPRIORITY, 'Node_Assault1', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gFloorGoto2', 'Hunter_Floor_02', AISCRIPT_HIGHPRIORITY, 'Node_Assault2', AISCRIPT_RUNMOVESPEED, true);
    
    AIDefineGoalGotoNode('gBasementGoto1', 'Hunter_Basement_01', AISCRIPT_HIGHPRIORITY, 'Node_Basement1', AISCRIPT_RUNMOVESPEED, true);
    AIDefineGoalGotoNode('gBasementGoto2', 'Hunter_Basement_02', AISCRIPT_HIGHPRIORITY, 'Node_Basement2', AISCRIPT_RUNMOVESPEED, true);
    
    
    
    
    AIDefineGoalGotoNode('gGantryGoto1', 'Hunter_Gantry_01', AISCRIPT_MEDIUMPRIORITY, 'Node_Gantry1', AISCRIPT_RUNMOVESPEED, true);
   	
    
    
    
    
    FacingVec.x:=0.8;
	FacingVec.y:=0.0;
	FacingVec.z:=0.6;
	AIDefineGoalGuardDirection('gGuard_AirCon1A', AISCRIPT_HIGHPRIORITY, 'Node_AirCon1A', 0.0, 40.0, 1, FacingVec);
	

	


}


	{IF GetEntity('Hunter_Revolver') <> NIL THEN
	begin
		AIAddEntity('Hunter_Revolver');
		AISetEntityAsLeader('Hunter_Revolver');
		AIAddLeaderEnemy('Hunter_Revolver', 'player');


		AIAddSubPackForLeader('Hunter_Revolver', 'sRevolver');
		AIAddAreaForSubPack('sRevolver', 'aiPharm');
		
		AIAddHunterToLeaderSubPack('Hunter_Revolver', 'sRevolver', 'Hunter_Revolver');
		AIAddGoalForSubPack('Hunter_Revolver', 'sRevolver', 'gHuntPlayer');
		AIAddGoalForSubPack('Hunter_Revolver', 'sRevolver', 'gRevolverStart');
		
		AISetSubPackCombatType('Hunter_Revolver', 'sRevolver', COMBATTYPEID_COVER);
		AISetHunterIdleActionMinMaxRadius('Hunter_Revolver', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,8);
	end;}
	

	
	IF GetEntity('Leader_Pharm') <> NIL THEN  
	begin
		AIAddEntity('Leader_Pharm');
		AISetEntityAsLeader('Leader_Pharm');
		AISetHunterOnRadar('Leader_Pharm', false);
		AIAddLeaderEnemy('Leader_Pharm', 'player');	
	end;
	
	
	IF GetEntity('Hunter_Shotgun1') <> NIL THEN
	begin
		AIAddEntity('Hunter_Shotgun1');
		SetHunterDropAmmo(GetEntity('Hunter_Shotgun1'),4);
		SetHunterSkin(GetEntity('Hunter_Shotgun1'), 1);
		
		SetHunterHeadSkin(GetEntity('Hunter_Shotgun1'), 1);
		{AISetEntityAsLeader('Hunter_Shotgun1');
		AIAddLeaderEnemy('Hunter_Shotgun1', 'player');
		}

		AIAddSubPackForLeader('Leader_Pharm', 'sShotgun1');
		AIAddAreaForSubPack('sShotgun1', 'aiPharm');
		
		AIAddHunterToLeaderSubPack('Leader_Pharm', 'sShotgun1', 'Hunter_Shotgun1');
		AIAddGoalForSubPack('Leader_Pharm', 'sShotgun1', 'gHuntPlayer');
		
		AISetSubPackCombatType('Leader_Pharm', 'sShotgun1', COMBATTYPEID_COVER);
		AIAddGoalForSubPack('Leader_Pharm', 'sShotgun1', 'gShotgun1');
		{AISetHunterIdleActionMinMaxRadius('Hunter_Shotgun1', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,8);}
	end;
	
	
	IF GetEntity('Hunter_Shotgun2') <> NIL THEN
	begin
		AIAddEntity('Hunter_Shotgun2');
		SetHunterDropAmmo(GetEntity('Hunter_Shotgun2'),4);
		SetHunterSkin(GetEntity('Hunter_Shotgun2'), 0);
		
		SetHunterHeadSkin(GetEntity('Hunter_Shotgun2'), 0);
		{AISetEntityAsLeader('Hunter_Shotgun2');
		AIAddLeaderEnemy('Hunter_Shotgun2', 'player');}


		AIAddSubPackForLeader('Leader_Pharm', 'sShotgun2');
		AIAddAreaForSubPack('sShotgun2', 'aiPharm');
		
		AIAddHunterToLeaderSubPack('Leader_Pharm', 'sShotgun2', 'Hunter_Shotgun2');
		AIAddGoalForSubPack('Leader_Pharm', 'sShotgun2', 'gHuntPlayer');
		
		AISetSubPackCombatType('Leader_Pharm', 'sShotgun2', COMBATTYPEID_COVER);
		AIAddGoalForSubPack('Leader_Pharm', 'sShotgun2', 'gShotgun2');
		{AISetHunterIdleActionMinMaxRadius('Hunter_Shotgun1', AISCRIPT_IDLE_WANDERSEARCH, AISCRIPT_HIGHPRIORITY,120,180,8);}
	end;
	
	
	IF GetEntity('Hunter_Rabbit1') <> NIL THEN
	begin
		AIAddEntity('Hunter_Rabbit1');
		
		AISetEntityAsLeader('Hunter_Rabbit1');
		AISetHunterOnRadar('Hunter_Rabbit1', TRUE);
		
		AISetIdleHomeNode('Hunter_Rabbit1', '');
		
		AIAddSubPackForLeader('Hunter_Rabbit1', 'sFollowMe1');
		AIAddAreaForSubPack('sFollowMe1', 'aiPharm');
		
		AIAddHunterToLeaderSubPack('Hunter_Rabbit1', 'sFollowMe1', 'Hunter_Rabbit1');
		
		SetEntityInvulnerable(GetEntity('Hunter_Rabbit1'), true);
	
	end;
	
	
	
	
	
	IF GetEntity('Hunter_Rabbit2') <> NIL THEN
	begin
		AIAddEntity('Hunter_Rabbit2');
		SetHunterDropAmmo(GetEntity('Hunter_Rabbit2'),4);
		AISetEntityAsLeader('Hunter_Rabbit2');
		AISetHunterOnRadar('Hunter_Rabbit2', TRUE);
		
		AIAddSubPackForLeader('Hunter_Rabbit2', 'sFollowMe2');
		AIAddAreaForSubPack('sFollowMe2', 'aiPharm');
		
		AIAddHunterToLeaderSubPack('Hunter_Rabbit2', 'sFollowMe2', 'Hunter_Rabbit2');
		
		{SetEntityInvulnerable(GetEntity('Hunter_Rabbit2'), true);}
		AIAddGoalForSubPack('Hunter_Rabbit2', 'sFollowMe2', 'gRabbitLook4');
	end;
		
	
	
	
	
	
	
	
	
	{
		AIAddSubPackForLeader('leader_factory', 'sGuard_Secure1');
		AIAddGoalForSubPack('leader_factory', 'sGuard_Secure1', 'gGuard_Secure1');
		AIAddAreaForSubPack('sGuard_Secure1', 'aiFactory');
		AISetSubPackCombatType('leader_factory', 'sGuard_Secure1', COMBATTYPEID_OPEN);
		
		
		AIAddSubPackForLeader('leader_factory', 'sGuard_Secure2');
		AIAddGoalForSubPack('leader_factory', 'sGuard_Secure2', 'gGuard_Secure2');
		AIAddAreaForSubPack('sGuard_Secure2', 'aiFactory');
		AISetSubPackCombatType('leader_factory', 'sGuard_Secure2', COMBATTYPEID_OPEN);
		
		
		AIAddSubPackForLeader('leader_factory', 'sGuard_Secure3');
		AIAddGoalForSubPack('leader_factory', 'sGuard_Secure3', 'gGuard_Secure3');
		AIAddAreaForSubPack('sGuard_Secure3', 'aiFactory');
	
	  
	  
	  
	  
	  end;}
	  
	  
	  
	  
	  
	  
	  
	  
	  
	{ Locks all wooden doors in office section }
	{pDoor:=GetEntity('Gen_Interior_WoodDoor_(D)01');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);
	

	
	
	
	pDoor:=GetEntity('Gen_Interior_WoodDoor_(D)02');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);
	
	
	pDoor:=GetEntity('Gen_Interior_WoodDoor_(D)03');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);}
	
	pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)01');
	UnfreezeEntity(pDoor);
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	
	pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)02');
	UnfreezeEntity(pDoor);
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		
	{ Next two, 02 and 01 are the secure control room doors}
	pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)02');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
	UnlockEntity(pDoor);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);
	
	
	pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)01');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);
		
	{ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);}
	
	
	{pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)05');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);}
		
	{ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);}
	
	
	
	
	{ 03 and 04 are the main outside doors }
	pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)03');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);
	
	
	pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)04');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);
		
	
	
	pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)07');
	UnFreezeEntity(pDoor);
	setDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
	LockEntity(pDoor);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);
	
	
	pDoor:=GetEntity('CJ_PHARMDOOR_(D)');
	UnFreezeEntity(pDoor);
	setDoorState(pDoor, DOOR_CLOSED);
	
	LockEntity(pDoor);
	SetDoorOpenAngleIn(pDoor,90.0);

    SetDoorOpenAngleOut(pDoor,90.0);
    
    
    pDoor:=GetEntity('CJ_PHARMDOOR_(D)01');
	UnFreezeEntity(pDoor);
	setDoorState(pDoor, DOOR_CLOSED);
	SetDoorOpenAngleIn(pDoor,90.0);
    SetDoorOpenAngleOut(pDoor,90.0);
    
    pDoor:=GetEntity('CJ_PHARMDOOR_(D)02');
	UnFreezeEntity(pDoor);
	setDoorState(pDoor, DOOR_CLOSED);
	SetDoorOpenAngleIn(pDoor,90.0);
    SetDoorOpenAngleOut(pDoor,90.0);
	
	pDoor:=GetEntity('CJ_PHARMDOOR_(D)03');
	UnFreezeEntity(pDoor);
	setDoorState(pDoor, DOOR_CLOSED);
	SetDoorOpenAngleIn(pDoor,90.0);
    SetDoorOpenAngleOut(pDoor,90.0);
	
		
	{pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)07');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
		
	ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
	UnlockEntity(pDoor);}
	
	
	
	{pDoor:=GetEntity('Gen_Sewer_SluiceGate_(SD)');
	UnFreezeEntity(pDoor);
	SetDoorState(pDoor, DOOR_CLOSED);
	LockEntity(pDoor);}
		
		
	
		
		
		{DisplayGameText('ALARM');}
		
		
		
		{SetCurrent:=TRUE;
		CreateInventoryItem(CT_SHOTGUN, GetPlayer, SetCurrent);
		Writedebug('Player given shotgun and ammo!');
		AddAmmoToInventoryWeapon(GetPlayer, CT_SHOTGUN, 40);}
		
		
		{CreateInventoryItem(CT_DESERT_EAGLE, GetPlayer, SetCurrent);
		Writedebug('Player given uzi and ammo!');
		AddAmmoToInventoryWeapon(GetPlayer, CT_DESERT_EAGLE, 500);}
		
		{
		SetVector(boxA, -186.0, 0.3, 71.2);
		SetVector(boxB, -202.4, 0.3, 87.2);
		CreatelineTrigger(boxA, boxB, 'TFirstPhase');
		}
		SetVector(boxA, -192.8, 2.0, 56.8);
		SetVector(boxB, -192.8, 2.0, 59.2);
		CreatelineTrigger(boxA, boxB, 'tSecondPhase');
		
		SetVector(boxA, -195.0, 0.5, 63.5);
		SetVector(boxB, -192.5, 0.5, 62.5);
		CreatelineTrigger(boxA, boxB, 'TLoadSetup');
		
		SetVector(boxA, -192.8, 2.5, 43.5);
		SetVector(boxB, -181.7, 2.5, 50.4);
		CreatelineTrigger(boxA, boxB, 'TFactorySetup');
		
		
		
		{Trigger below for John Whyte}
		
		
		SetVector(boxA, -200.3, -0.3, 89.3);
		SetVector(boxB, -209.5, 3.3, 67.4);
		CreateBoxTrigger(boxA, boxB, 'TFirstPhase');
		
		{
		SetVector(boxA, -186.0, 0.3, 71.2);
		SetVector(boxB, -200.1, -0.9, 90.7);
		CreateBoxTrigger(boxA, boxB, 'TFirstPhase');}
		
		SetVector(boxA, -149.95, -1.44, 70.83);
		SetVector(boxB, -149.00, -1.99, 67.86);
		CreateBoxTrigger(boxA, boxB, 'TRevolver');
		
		
		
		SetVector(boxA, -179.2, 1.0, 54.0);
		SetVector(boxB, -175.6, 4.0, 52.1);
		CreateBoxTrigger(boxA, boxB, 'TSurprise2');
		
		SetVector(boxA, -196.6, 12.3, 30.8);
		SetVector(boxB, -197.7, 15.3, 29.2);
		CreateBoxTrigger(boxA, boxB, 'TWeeRoom');
		
		SetVector(boxA, -190.3, 7.4, 33.7);
		SetVector(boxB, -184.4, 10.4, 37.1);
		CreateBoxTrigger(boxA, boxB, 'TSurprise3');
		
		{SetVector(boxA, -177.0, 10.9, 26.4);
		SetVector(boxB, -173.0, 11.9, 29.1);
		CreateBoxTrigger(boxA, boxB, 'TLift2');}
		
		SetVector(boxA, -173.5, 7.4, 34.7);
		SetVector(boxB, -173.9, 10.4, 36.2);
		CreateBoxTrigger(boxA, boxB, 'TRabbitHint2');
		
		SetVector(boxA, -161.4, 13.5, 25.3);
		SetVector(boxB, -159.7, 15.8, 30.6);
		CreateBoxTrigger(boxA, boxB, 'TThirdPhase');
		
		SetVector(boxA, -146.6, 7.8, 30.8);
		SetVector(boxB, -142.1, 10.8, 27.6);
		CreateBoxTrigger(boxA, boxB, 'TSurprise4');
		
		SetVector(boxA, -153.2, 1.0, 53.0);
		SetVector(boxB, -153.7, 4.0, 56.3);
		CreateBoxTrigger(boxA, boxB, 'TDoorStillShut');
		
		SetVector(boxA, -147.88, 7.78, 35.9);
		SetVector(boxB, -155.65, 8.2, 25.05);
		CreateBoxTrigger(boxA, boxB, 'TOfficesSetup');
		
		SetVector(boxA, -173.9, 0.0, -5.3);
		SetVector(boxB, -167.5, 0.0, -6.3);
		CreatelineTrigger(boxA, boxB, 'TEnd');
		
		
		
		pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)08');
		UnFreezeEntity(pDoor);
		{SetDoorState(pDoor, DOOR_CLOSED);
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_NOTHING));
		LockEntity(pDoor);}
		
		SetDoorOpenAngleIn(pdoor,90.0);

        SetDoorOpenAngleOut(pdoor,90.0);
        
        
        {pDoor:=GetEntity('Gen_Sewer_SluiceGate_(SD)01');
		UnFreezeEntity(pDoor);
		GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING);

		SetSlideDoorSpeed(pDoor, 0.3);
		SetSlideDoorAjarDistance(pDoor, 2.3);
		SetDoorState(pDoor, DOOR_OPENING);	}
        
       
       
        pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)02');
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

		SetSlideDoorSpeed(pDoor, 0.7);
		SetSlideDoorAjarDistance(pDoor, 1.5);
		SetDoorState(pDoor, DOOR_OPENING);	
			
		pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)01');
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

		SetSlideDoorSpeed(pDoor, 0.7);
		SetSlideDoorAjarDistance(pDoor, 1.5);
		SetDoorState(pDoor, DOOR_OPENING);	
		SetZoomLerp(1.0, 0.5, 2.5);

		
		{ShowTriggers(true);}

		
end; { end OnCreate }





end. { end of level script }
 