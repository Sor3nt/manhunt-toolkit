{$t-}	{	trace off 	}
{	Program Description		}
{							}
SCRIPTMAIN	player_main;
{ Entity To Run Script From 			}

ENTITY
	player : et_name;
	
VAR
	Block1Used	: BOOLEAN;
	Block2Used	: BOOLEAN;
	Block3Used	: BOOLEAN;
	Block4Used	: BOOLEAN;
	BlocksUsedCounter : INTEGER;
	SniperDone	: BOOLEAN;
{******************************************************}	

SCRIPT	OnCreate;

VAR

	spawn_vec	:	Vec3d;
	pDoor		: 	EntityPtr;
	SetCurrent	: 	BOOLEAN;
	pWeapon		: 	EntityPtr;
	vecPos		: 	Vec3d;;
	vecView		:	Vec3d;
	vecFace		:	Vec3d;

	
{	Script Start	}
begin


		
{	HandCamSetTwitchFreq(5);
	HandCamSetDecayPower(5.0);
	HandCamSetTwitchScaleDown(40000);
	HandCamSetVelAngTol(0.03);}


	LoadScriptAudioSlot(0, SFX_SCRIPT_SLOT_DOOR_CREAK);
	LoadScriptAudioSlot(1, SFX_SCRIPT_SLOT_BODY_BAG);

	Writedebug('fuckshitpissbollocks');
	Block1Used	:= FALSE;
	Block2Used	:= FALSE;
	Block3Used	:= FALSE;
	Block4Used	:= FALSE;
	BlocksUsedCounter:= 0;
	
	{ShowTriggers(true);}
	
	SniperDone:=FALSE;

	IF GetEntity('Gen_Save_Point') = NIL THEN
	begin
	
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)23');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)22');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)11');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
			
			
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)10');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)24');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)01');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)09');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
		
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)12');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
	
	
		IF GetEntity('Gen_Save_Point01') <> NIL THEN
		begin 
			IF GetEntity('Gen_Save_Point03') <> NIL THEN
			begin
				RunScript('player', 'BeginDeathRow');

				IF GetEntity('Hunter_Lure') <> NIL THEN
				DestroyEntity(GetEntity('Hunter_Lure'));

				IF GetEntity('Hunter_Dentist') <> NIL THEN
				DestroyEntity(GetEntity('Hunter_Dentist'));

				IF GetEntity('Hunter_Morgue') <> NIL THEN
				DestroyEntity(GetEntity('Hunter_Morgue'));

				IF GetEntity('Hunter_Shotgun2') <> NIL THEN
				DestroyEntity(GetEntity('Hunter_Shotgun2'));
				
				KillThisScript;
			end;
		end;
	end;
	
	IF GetEntity('Gen_Save_Point03') = NIL THEN
	begin
		pDoor:=GetEntity('Bow_Interior_PrisonGate_(D)18');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)18');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)17');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)16');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)15');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)14');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)13');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)12');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)11');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)10');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)09');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)08');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)07');
		UnFreezeEntity(pDoor);
		SetDoorState(pDoor, DOOR_CLOSED);
		UnlockEntity(pDoor);
		SetDoorOpenAngleIn(pDoor,90.0);
        SetDoorOpenAngleOut(pDoor,90.0);
        
        
        
	
		IF GetEntity('Gen_Save_Point01') <> NIL THEN
		begin
			ClearLevelGoal('GOAL3');
			SetLevelGoal('GOAL4');
		end
		
		ELSE
		
		begin
			ClearLevelGoal('GOAL5');
		    SetLevelGoal('GOAL6');
		end;
	end;


	{IF GetEntity('Gen_Save_Point02') <> NIL THEN 
	begin}
	
	IF GetEntity('Gen_Save_Point') <> NIL THEN
	begin
	
	
	IF GetEntity('Gen_Save_Point01') <> NIL THEN
	begin
	DisableUserInput;
	ClearInputStates;
	

 	{ Set up the vectors }

        SetVector(vecPos, 169.7, 2.5, 4.5);

        SetVector(vecView, 0.8, -0.3, -0.6);
        
        AISetHunterOnRadar('Hunter_Phase1D', FALSE);
        SetPedLockonable(GetEntity('Hunter_Phase1D'), FALSE);
        SetEntityInvulnerable(GetEntity('Hunter_Phase1D'), TRUE);

   		AISetHunterOnRadar('Hunter_Phase1E', FALSE);
        SetPedLockonable(GetEntity('Hunter_Phase1E'), FALSE);
        SetEntityInvulnerable(GetEntity('Hunter_Phase1E'), TRUE);
        
        AISetHunterOnRadar('Hunter_Phase1F', FALSE);
        SetPedLockonable(GetEntity('Hunter_Phase1F'), FALSE);
        SetEntityInvulnerable(GetEntity('Hunter_Phase1F'), TRUE);
        
        AISetHunterOnRadar('Hunter_Phase1G', FALSE);
        SetPedLockonable(GetEntity('Hunter_Phase1G'), FALSE);
        SetEntityInvulnerable(GetEntity('Hunter_Phase1G'), TRUE);
        
        
        CutSceneStart;
        AICutSceneAllEntitiesEnable(TRUE);
     

        { Set the cameras position }

        setcameraposition(vecPos);

        { Set the cameras view }

        setcameraview(vecView);
        
  
 	AIAddGoalForSubPack('Hunter_Rabbit', 'sFollowMe', 'gWR1');
 	SetVector(vecFace, -1.0, 0.0, 0.0);
 	AISetHunterHomeNodeDirection('Hunter_Rabbit', 'Node_WR1', vecFace);
 	
 	SLEEP(3000);
 	{DISPLAYGAMETEXT('CHASE1');}
 	PlayDirectorSpeech(GetPlayerPosition,AISPEECH_D1V1_PRS_FOLLOW_RABBIT,-1,200);
 	SLEEP(1000);
 	
 	
 	
 

 	
 	
 	IF AIIsGoalNameInSubPack('Hunter_Rabbit', 'sFollowMe', 'gWR1') = TRUE THEN
 	begin
 	AIRemoveGoalFromSubPack('Hunter_Rabbit', 'sFollowMe', 'gWR1');
 	end;
 	
 	
 	AIAddGoalForSubPack('Hunter_Rabbit', 'sFollowMe', 'gWR2');
 	SetVector(vecFace, -1.0, -0.1, -0.1);
 	AiSetHunterHomeNodeDirection('Hunter_Rabbit', 'Node_WR2', vecFace);
 	
	SLEEP(6000);
 	CutSceneEnd(false);
	
	SetVector(vecFace, 1.0, 0.1, 0.0);

	AISetHunterIdleDirection('Hunter_Phase1A', vecFace);

	while IsSplinePlaying do sleep(1);
				
	EnableUserInput;
	
	SetLevelGoal('GOAL1');
 

 
 	
 		{IF GetEntity('Hunter_Phase1A') <> NIL THEN
		begin
			AIAddHunterToLeaderSubPack('leader1','sPrisonHunt','Hunter_Phase1A');
			AIAddGoalForSubPack('leader1', 'sPrisonHunt', 'gShowerA');
		
		end;
		
		SLEEP(1000);
		
		IF GetEntity('Hunter_Phase1B') <> NIL THEN
		begin
			AIAddHunterToLeaderSubPack('leader1','sPrisonHunt','Hunter_Phase1B');
			AIAddGoalForSubPack('leader1', 'sPrisonHunt', 'gShowerB');
		
		end;
			
		
		IF GetEntity('Hunter_Phase1C') <> NIL THEN
		begin
			AIAddHunterToLeaderSubPack('leader1','sPrisonHunt','Hunter_Phase1C');
			AIAddGoalForSubPack('leader1', 'sPrisonHunt', 'gShowerC');
		
		end;
 	
 	
	}
	
	



	
	
	
	{pWeapon:=GetInventoryItemFromType(this, CT_SHOTGUN);}
	{ Disnae exist! See the Black Proton }
	
	
	
	
	
	RemoveThisScript;	
	end;
	end;
end;



SCRIPT BeginDeathRow;


VAR
	
        etype : eCollectableType;
     	pDoor : EntityPtr;  
begin

	   {etype := GetLastItemPickedUp(this);
       if(etype = CT_SNIPER_RIFLE) then
       begin}	
       
       
       
       
     	IF SniperDone = FALSE THEN begin
     	
     	
     	IF GetEntity('tAllBlocksUsed') <> NIL THEN
     	
     	begin
     	Writedebug('tAllBloskcUsed exists');
     	KillEntity(GetEntity('tAllBlocksUsed'));
     	end;
     	
       	pDoor:=GetEntity('Bow_Prison_CellDoor_(SD)06');
		ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
		SetSlideDoorSpeed(pDoor, 1.0);
		SetSlideDoorAjarDistance(pDoor, 2.47);
		SetDoorState(pDoor, DOOR_OPENING);
		
		SetLevelGoal('GOAL3');
		ClearLevelGoal('GOAL2');
		SLEEP(3000);
		runscript('player','DeathRowWave1');
		
		
		
	
	
		{PlayDirectorSpeech(GetPlayerPosition,AISPEECH_D1V1_PRS_CELLS_OPENED,-1,200);}
		SniperDone := TRUE;
        end;
       {end;	}
	

end;



SCRIPT DeathRowWave1;

 

VAR

  WaveCycle1Complete    :      BOOLEAN;
  SetCurrent            :      BOOLEAN;
  RandomBlock 			:      INTEGER;

  pDoor                 :      EntityPtr;
  pSpawned      	    :      EntityPtr;
  spawnVec              :      Vec3d;

  lineA                 :      Vec3d;
  lineB                 :      Vec3d;

            

begin

            

            WaveCycle1Complete:= FALSE;

            Writedebug('Player picked up sniper rifle and wave script cues!'); 

            WHILE WaveCycle1Complete = FALSE DO
            begin
                       
            RandomBlock:=randnum(5);

            Writedebug('Random block no is ', RandomBlock);

                IF RandomBlock = 1 THEN
                begin

                   IF Block1Used = FALSE THEN
                  begin
                  	
                     Block1Used := TRUE;

                                                

                                                

                                                

                           

                                                

                                                            

                                                SetVector(spawnvec, 271.4, 0.2, 2.0);

                                                pSpawned:= SpawnMovingEntity('Smi_BodS1', spawnvec, 'Hunter_Block1A');

                                                CreateInventoryItem(CT_SHOTGUN, pSpawned, SetCurrent);

                                                AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -9.8);

                                                pSpawned:= SpawnMovingEntity('Smi_BodM1', spawnvec, 'Hunter_Block1B');

                                                CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

                                                

                                                SetVector(spawnvec, 271.6, 0.2, -26.6);

                                                pSpawned:= SpawnMovingEntity('Smi_BodM1', spawnvec, 'Hunter_Block1C');

                                                {CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);}

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

            

                                    

                                                

                                                IF GetEntity('Hunter_Block1A') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block1A');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock1Gun', 'Hunter_Block1A');

                                                            

                                                end;

                                                

                                                IF GetEntity('Hunter_Block1B') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block1B');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock1', 'Hunter_Block1B');

                                                

                                                end;

                                                

                                                IF GetEntity('Hunter_Block1C') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block1C');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock1', 'Hunter_Block1C');

                                                

                                                end;

                                                

                        

                                                

                                                

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)07');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)10');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);   

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)14');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                    

                                                IF GetEntity('Hunter_Block1A') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock1Gun', 'gBlock1A');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block1B') <> NIL THEN

                                                begin

                                    

                                                            AIAddGoalForSubPack('leader1', 'sBlock1', 'gBlock1B');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block1C') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock1', 'gBlock1C');

                                                end;

                                                
												AITriggerSoundKnownLocationNoRadar('GUN_SHOT', GetPlayer);
                                                

                                                WaveCycle1Complete := TRUE;

                                                Writedebug('Block 1 had now been used in cycle!');

                                                

                                                BlocksUsedCounter:=BlocksUsedCounter + 1;

                                                IF BlocksUsedCounter = 4 THEN

                                                begin

                                                            {ShowTriggers(true);}

                                                            Writedebug('All guys created');

                                                            SetVector(lineA, 279.5, 1.5, -32.8);

                                                            SetVector(lineB, 283.9, 1.5, -32.8);

                                                            CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');

                                                            RemoveThisScript;

                                                end;

                                                

                                                KillThisScript;

                                    end;

                        end;

                        

                        

                        IF RandomBlock = 2 THEN

                        begin

                                    IF Block2Used = FALSE THEN

                                    begin

                                                Block2Used := TRUE;

                                                

                                                

                                                

                                                            

                                                SetVector(spawnvec, 271.4, 0.2, -39.5);

                                                pSpawned:= SpawnMovingEntity('Smi_BodM1', spawnvec, 'Hunter_Block2A');

                                                {CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);}

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -1.7);

                                                pSpawned:= SpawnMovingEntity('Smi_BodB1', spawnvec, 'Hunter_Block2B');

                                                CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -18.3);

                                                pSpawned:= SpawnMovingEntity('Smi_BodM1', spawnvec, 'Hunter_Block2C');

                                                CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

            

                                    

                                                

                                                IF GetEntity('Hunter_Block2A') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block2A');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock2', 'Hunter_Block2A');

                                                            

                                                end;

                                                

                                                IF GetEntity('Hunter_Block2B') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block2B');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock2', 'Hunter_Block2B');

                                                

                                                end;

                                                

                                                IF GetEntity('Hunter_Block2C') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block2C');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock2', 'Hunter_Block2C');

                                                

                                                end;

                                                

                        

                                                

                                                

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)17');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)08');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);   

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)12');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                    

                                                IF GetEntity('Hunter_Block2A') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock2', 'gBlock2A');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block2B') <> NIL THEN

                                                begin

                                    

                                                            AIAddGoalForSubPack('leader1', 'sBlock2', 'gBlock2B');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block2C') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock2', 'gBlock2C');

                                                end;

                                                

                                                AITriggerSoundKnownLocationNoRadar('GUN_SHOT', GetPlayer);

                                                WaveCycle1Complete := TRUE;

                                                Writedebug('Block 2 had now been used in cycle!');

                                                

                                                BlocksUsedCounter:=BlocksUsedCounter + 1;

                                                IF BlocksUsedCounter = 4 THEN

                                                begin

                                                            {ShowTriggers(true);}

                                                            Writedebug('All guys created');

                                                            SetVector(lineA, 279.5, 1.5, -32.8);

                                                            SetVector(lineB, 283.9, 1.5, -32.8);

                                                            CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');

                                                            RemoveThisScript;

                                                end;

                                                

                                                

                                                

                                                

                                                KillThisScript;

                                    end;

                        end;

                        

                        

                        IF RandomBlock = 3 THEN

                        begin

                                    IF Block3Used = FALSE THEN

                                    begin

                                                Block3Used := TRUE;

                                                

                                                

                                                

                                                

            

                                                

                                                            

                                                SetVector(spawnvec, 271.4, 0.2, -14.6);

                                                pSpawned:= SpawnMovingEntity('Smi_BodS1', spawnvec, 'Hunter_Block3A');

                                                CreateInventoryItem(CT_SHOTGUN, pSpawned, SetCurrent);

                                                AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -43.4);

                                                pSpawned:= SpawnMovingEntity('Smi_BodM1', spawnvec, 'Hunter_Block3B');

                                                CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -6.4);

                                                pSpawned:= SpawnMovingEntity('Smi_BodB1', spawnvec, 'Hunter_Block3C');

                                                {CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);}

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

            

                                    

                                                

                                                IF GetEntity('Hunter_Block3A') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block3A');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock3Gun', 'Hunter_Block3A');

                                                            

                                                end;

                                                

                                                IF GetEntity('Hunter_Block3B') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block3B');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock3', 'Hunter_Block3B');

                                                

                                                end;

                                                

                                                IF GetEntity('Hunter_Block3C') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block3C');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock3', 'Hunter_Block3C');

                                                

                                                end;

                                                

                                                SLEEP(2000);

                                                

                                                

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)11');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)18');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);   

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)09');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                    

                                                IF GetEntity('Hunter_Block3A') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock3Gun', 'gBlock3A');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block3B') <> NIL THEN

                                                begin

                                    

                                                            AIAddGoalForSubPack('leader1', 'sBlock3', 'gBlock3B');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block3C') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock3', 'gBlock3C');

                                                end;

                                                

                                                AITriggerSoundKnownLocationNoRadar('GUN_SHOT', GetPlayer);

                                                WaveCycle1Complete := TRUE;

                                                Writedebug('Block 3 had now been used in cycle!');

                                                

                                                BlocksUsedCounter:=BlocksUsedCounter + 1;

                                                IF BlocksUsedCounter = 4 THEN

                                                begin

                                                            {ShowTriggers(true);}

                                                            Writedebug('All guys created');

                                                            SetVector(lineA, 279.5, 1.5, -32.8);

                                                            SetVector(lineB, 283.9, 1.5, -32.8);

                                                            CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');

                                                            RemoveThisScript;

                                                end;

                                                

                                                

                                                

                                                

                                                KillThisScript;

                                    end;

                        end;

                        

                        IF RandomBlock = 4 THEN

                        begin

                                    IF Block4Used = FALSE THEN

                                    begin

                                                Block4Used := TRUE;

                                                

                                                

                                                

                                                

            

                                                

                                                            

                                                SetVector(spawnvec, 271.4, 0.2, -23.4);

                                                pSpawned:= SpawnMovingEntity('Smi_BodB1', spawnvec, 'Hunter_Block4A');

                                                {CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);}

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -31.0);

                                                pSpawned:= SpawnMovingEntity('Smi_BodM1', spawnvec, 'Hunter_Block4B');

                                                CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

                                                

                                                SetVector(spawnvec, 271.4, 0.2, -35.0);

                                                pSpawned:= SpawnMovingEntity('Smi_BodB1', spawnvec, 'Hunter_Block4C');

                                                CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);

                                                {AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}

            

                                    

                                                

                                                IF GetEntity('Hunter_Block4A') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block4A');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock4', 'Hunter_Block4A');

                                                            

                                                end;

                                                

                                                IF GetEntity('Hunter_Block4B') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block4B');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock4', 'Hunter_Block4B');

                                                

                                                end;

                                                

                                                IF GetEntity('Hunter_Block4C') <> NIL THEN

                                                begin

                                                            AIAddEntity('Hunter_Block4C');

                                                            AIAddHunterToLeaderSubPack('leader1', 'sBlock4', 'Hunter_Block4C');

                                                

                                                end;

                                                

                                                SLEEP(2000);

                                                

                                                

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)13');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)15');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                                

                                                SLEEP(2000);   

                                                pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)16');

                                                SetDoorState(pDoor, DOOR_CLOSED);

                                                ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));

                                                UnlockEntity(pDoor);

                                                PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);

                                    

                                                IF GetEntity('Hunter_Block4A') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock4', 'gBlock4A');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block4B') <> NIL THEN

                                                begin

                                    

                                                            AIAddGoalForSubPack('leader1', 'sBlock4', 'gBlock4B');

                                                end;

                                                

                                                IF GetEntity('Hunter_Block4C') <> NIL THEN

                                                begin

                                                

                                                            AIAddGoalForSubPack('leader1', 'sBlock4', 'gBlock4C');

                                                end;

                                                

                                                AITriggerSoundKnownLocationNoRadar('GUN_SHOT', GetPlayer);

                                                WaveCycle1Complete := TRUE;

                                                Writedebug('Block 4 had now been used in cycle!');

                                                

                                                BlocksUsedCounter:=BlocksUsedCounter + 1;

                                                IF BlocksUsedCounter = 4 THEN

                                                begin

                                                            {ShowTriggers(true);}

                                                            Writedebug('All guys created');

                                                            SetVector(lineA, 279.5, 1.5, -32.8);

                                                            SetVector(lineB, 283.9, 1.5, -32.8);

                                                            CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');

                                                            RemoveThisScript;

                                                end;

                                                

                                                

                                                

                                                

                                                KillThisScript;

                                    end;

                        end;

                        

            end; {end while}

 

End;







SCRIPT DeathRowWave1Backup;

VAR
	WaveCycle1Complete	: 	BOOLEAN;
	SetCurrent			:	BOOLEAN;
	RandomBlock			:	INTEGER;
	pDoor				: 	EntityPtr;
	pSpawned			: 	EntityPtr;
	spawnVec			:	Vec3d;
	lineA				:	Vec3d;
	lineB				:	Vec3d;
	
begin
	
	WaveCycle1Complete:= FALSE;
	
	IF GetEntity('Hunter_Rabbit') <> NIL THEN
 	begin
 	
 		KillEntity(GetEntity('Hunter_Rabbit'));
 	end;
	
	Writedebug('Player picked up sniper rifle and wave script cues!');

	WHILE WaveCycle1Complete = FALSE DO
	begin
		RandomBlock:=randnum(5);
		Writedebug('Random block no is ', RandomBlock);
		IF RandomBlock = 1 THEN
		begin
			IF Block1Used = FALSE THEN
			begin
				Block1Used := TRUE;
				
				
				
				
	
				
					
  				SetVector(spawnvec, 271.4, 0.2, 2.0);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block1A');
				CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -9.8);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block1B');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.6, 0.2, -26.6);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block1C');
				CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
	
			
				
				IF GetEntity('Hunter_Block1A') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block1A');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock1', 'Hunter_Block1A');
  					
  				end;
				
				IF GetEntity('Hunter_Block1B') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block1B');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock1', 'Hunter_Block1B');
  				
  				end;
  				
				IF GetEntity('Hunter_Block1C') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block1C');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock1', 'Hunter_Block1C');
  				
  				end;
  				
		
				
				
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)07');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)10');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);	
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)14');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
			
				IF GetEntity('Hunter_Block1A') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock1', 'gBlock1A');
  				end;
				
				IF GetEntity('Hunter_Block1B') <> NIL THEN
  				begin
  			
  					AIAddGoalForSubPack('leader1', 'sBlock1', 'gBlock1B');
  				end;
  				
				IF GetEntity('Hunter_Block1C') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock1', 'gBlock1C');
  				end;
				
				
				WaveCycle1Complete := TRUE;
				Writedebug('Block 1 had now been used in cycle!');
				
				BlocksUsedCounter:=BlocksUsedCounter + 1;
				IF BlocksUsedCounter = 4 THEN
				begin
					{ShowTriggers(true);}
					Writedebug('All guys created');
					SetVector(lineA, 279.5, 1.5, -32.8);
					SetVector(lineB, 283.9, 1.5, -32.8);
					CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');
					RemoveThisScript;
				end;
				
				KillThisScript;
			end;
		end;
		
		
		IF RandomBlock = 2 THEN
		begin
			IF Block2Used = FALSE THEN
			begin
				Block2Used := TRUE;
				
				
		
				
	
				
					
  				SetVector(spawnvec, 271.4, 0.2, -39.5);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block2A');
				CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -1.7);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block2B');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -18.3);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block2C');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
	
			
				
				IF GetEntity('Hunter_Block2A') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block2A');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock2', 'Hunter_Block2A');
  					
  				end;
				
				IF GetEntity('Hunter_Block2B') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block2B');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock2', 'Hunter_Block2B');
  				
  				end;
  				
				IF GetEntity('Hunter_Block2C') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block2C');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock2', 'Hunter_Block2C');
  				
  				end;
  				
		
				
				
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)17');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)08');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);	
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)12');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
			
				IF GetEntity('Hunter_Block2A') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock2', 'gBlock2A');
  				end;
				
				IF GetEntity('Hunter_Block2B') <> NIL THEN
  				begin
  			
  					AIAddGoalForSubPack('leader1', 'sBlock2', 'gBlock2B');
  				end;
  				
				IF GetEntity('Hunter_Block2C') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock2', 'gBlock2C');
  				end;
				
				
				WaveCycle1Complete := TRUE;
				Writedebug('Block 2 had now been used in cycle!');
				
				BlocksUsedCounter:=BlocksUsedCounter + 1;
				IF BlocksUsedCounter = 4 THEN
				begin
					{ShowTriggers(true);}
					Writedebug('All guys created');
					SetVector(lineA, 279.5, 1.5, -32.8);
					SetVector(lineB, 283.9, 1.5, -32.8);
					CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');
					RemoveThisScript;
				end;
				
				
				
				
				KillThisScript;
			end;
		end;
		
		
		IF RandomBlock = 3 THEN
		begin
			IF Block3Used = FALSE THEN
			begin
				Block3Used := TRUE;
				
				
				
				
	
				
					
  				SetVector(spawnvec, 271.4, 0.2, -14.6);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block3A');
				CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -43.4);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block3B');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -6.4);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block3C');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
	
			
				
				IF GetEntity('Hunter_Block3A') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block3A');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock3', 'Hunter_Block3A');
  					
  				end;
				
				IF GetEntity('Hunter_Block3B') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block3B');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock3', 'Hunter_Block3B');
  				
  				end;
  				
				IF GetEntity('Hunter_Block3C') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block3C');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock3', 'Hunter_Block3C');
  				
  				end;
  				
				SLEEP(2000);
				
				
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)11');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)18');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);	
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)09');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
			
				IF GetEntity('Hunter_Block3A') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock3', 'gBlock3A');
  				end;
				
				IF GetEntity('Hunter_Block3B') <> NIL THEN
  				begin
  			
  					AIAddGoalForSubPack('leader1', 'sBlock3', 'gBlock3B');
  				end;
  				
				IF GetEntity('Hunter_Block3C') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock3', 'gBlock3C');
  				end;
				
				
				WaveCycle1Complete := TRUE;
				Writedebug('Block 3 had now been used in cycle!');
				
				BlocksUsedCounter:=BlocksUsedCounter + 1;
				IF BlocksUsedCounter = 4 THEN
				begin
					{ShowTriggers(true);}
					Writedebug('All guys created');
					SetVector(lineA, 279.5, 1.5, -32.8);
					SetVector(lineB, 283.9, 1.5, -32.8);
					CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');
					RemoveThisScript;
				end;
				
				
				
				
				KillThisScript;
			end;
		end;
		
		IF RandomBlock = 4 THEN
		begin
			IF Block4Used = FALSE THEN
			begin
				Block4Used := TRUE;
				
				
				
				
	
				
					
  				SetVector(spawnvec, 271.4, 0.2, -23.4);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block4A');
				CreateInventoryItem(CT_SICKLE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -31.0);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block4B');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
				
				SetVector(spawnvec, 271.4, 0.2, -35.0);
				pSpawned:= SpawnMovingEntity('Ino_BodS2', spawnvec, 'Hunter_Block4C');
				CreateInventoryItem(CT_KNIFE, pSpawned, SetCurrent);
				{AddAmmoToInventoryWeapon(pSpawned, CT_SHOTGUN, 25);}
	
			
				
				IF GetEntity('Hunter_Block4A') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block4A');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock4', 'Hunter_Block4A');
  					
  				end;
				
				IF GetEntity('Hunter_Block4B') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block4B');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock4', 'Hunter_Block4B');
  				
  				end;
  				
				IF GetEntity('Hunter_Block4C') <> NIL THEN
  				begin
  					AIAddEntity('Hunter_Block4C');
  					AIAddHunterToLeaderSubPack('leader1', 'sBlock4', 'Hunter_Block4C');
  				
  				end;
  				
				SLEEP(2000);
				
				
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)13');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)15');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
				
				SLEEP(2000);	
				pDoor:=GetEntity('Gen_Factory_MetalDoor_(D)16');
				SetDoorState(pDoor, DOOR_CLOSED);
				ASSERT(GraphModifyConnections(pDoor, AISCRIPT_GRAPHLINK_ALLOW_EVERYTHING));
				UnlockEntity(pDoor);
				PlayAudioOneShotFromEntity(pDoor, SFX_DOOR_SLAM_METAL, 126, 200);
			
				IF GetEntity('Hunter_Block4A') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock4', 'gBlock4A');
  				end;
				
				IF GetEntity('Hunter_Block4B') <> NIL THEN
  				begin
  			
  					AIAddGoalForSubPack('leader1', 'sBlock4', 'gBlock4B');
  				end;
  				
				IF GetEntity('Hunter_Block4C') <> NIL THEN
  				begin
  				
  					AIAddGoalForSubPack('leader1', 'sBlock4', 'gBlock4C');
  				end;
				
				
				WaveCycle1Complete := TRUE;
				Writedebug('Block 4 had now been used in cycle!');
				
				BlocksUsedCounter:=BlocksUsedCounter + 1;
				IF BlocksUsedCounter = 4 THEN
				begin
					{ShowTriggers(true);}
					Writedebug('All guys created');
					SetVector(lineA, 279.5, 1.5, -32.8);
					SetVector(lineB, 283.9, 1.5, -32.8);
					CreateLineTrigger(lineA, lineB, 'tAllBlocksUsed');
					RemoveThisScript;
				end;
				
				
				
				
				KillThisScript;
			end;
		end;
		
	end; {end while}






end;




SCRIPT OnPickUpInventoryItem;

VAR
eLastItem 		: eCollectableType;

begin
	

		eLastItem := GetLastItemPickedUp(this);	
		
		IF (eLastItem = CT_KEY ) THEN
		begin
		
			DisplayGameText('PGKEY');
			SLEEP(500);
			ClearLevelGoal('GOAL6');
			SetLevelGoal('GOAL7');
			RemoveThisScript;
		end;

end;

	




end.
   